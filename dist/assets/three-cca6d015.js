import{r as Ee,a as xy,g as My}from"./vendor-57209f9c.js";var n0={exports:{}},Yc={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Sy=Ee,Ey=Symbol.for("react.element"),wy=Symbol.for("react.fragment"),Ty=Object.prototype.hasOwnProperty,Ay=Sy.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,by={key:!0,ref:!0,__self:!0,__source:!0};function i0(r,e,t){var n,i={},s=null,l=null;t!==void 0&&(s=""+t),e.key!==void 0&&(s=""+e.key),e.ref!==void 0&&(l=e.ref);for(n in e)Ty.call(e,n)&&!by.hasOwnProperty(n)&&(i[n]=e[n]);if(r&&r.defaultProps)for(n in e=r.defaultProps,e)i[n]===void 0&&(i[n]=e[n]);return{$$typeof:Ey,type:r,key:s,ref:l,props:i,_owner:Ay.current}}Yc.Fragment=wy;Yc.jsx=i0;Yc.jsxs=i0;n0.exports=Yc;var gi=n0.exports,hm={},fm=xy;hm.createRoot=fm.createRoot,hm.hydrateRoot=fm.hydrateRoot;const Ry="modulepreload",Cy=function(r){return"/"+r},dm={},Pb=function(e,t,n){if(!t||t.length===0)return e();const i=document.getElementsByTagName("link");return Promise.all(t.map(s=>{if(s=Cy(s),s in dm)return;dm[s]=!0;const l=s.endsWith(".css"),c=l?'[rel="stylesheet"]':"";if(!!n)for(let d=i.length-1;d>=0;d--){const p=i[d];if(p.href===s&&(!l||p.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${s}"]${c}`))return;const h=document.createElement("link");if(h.rel=l?"stylesheet":Ry,l||(h.as="script",h.crossOrigin=""),h.href=s,document.head.appendChild(h),l)return new Promise((d,p)=>{h.addEventListener("load",d),h.addEventListener("error",()=>p(new Error(`Unable to preload CSS for ${s}`)))})})).then(()=>e()).catch(s=>{const l=new Event("vite:preloadError",{cancelable:!0});if(l.payload=s,window.dispatchEvent(l),!l.defaultPrevented)throw s})};/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ra="152",Py={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ly={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},r0=0,tf=1,s0=2,Iy=3,o0=0,Zc=1,sa=2,mi=3,er=0,bn=1,Li=2,Uy=2,$i=0,rs=1,nf=2,rf=3,sf=4,a0=5,Qr=100,l0=101,c0=102,of=103,af=104,u0=200,h0=201,f0=202,d0=203,Wf=204,Xf=205,p0=206,m0=207,g0=208,_0=209,v0=210,y0=0,x0=1,M0=2,Vc=3,S0=4,E0=5,w0=6,T0=7,Ca=0,A0=1,b0=2,vi=0,R0=1,C0=2,P0=3,qf=4,L0=5,Jc=300,wr=301,Tr=302,ha=303,fa=304,_o=306,da=1e3,xn=1001,pa=1002,Xt=1003,Wc=1004,Dy=1004,oa=1005,Ny=1005,qt=1006,Yf=1007,Fy=1007,Ar=1008,Oy=1008,tr=1009,I0=1010,U0=1011,Zf=1012,D0=1013,xr=1014,Qi=1015,ho=1016,N0=1017,F0=1018,ss=1020,O0=1021,Nn=1023,z0=1024,B0=1025,Mr=1026,us=1027,k0=1028,H0=1029,G0=1030,V0=1031,W0=1033,Dc=33776,Nc=33777,Fc=33778,Oc=33779,lf=35840,cf=35841,uf=35842,hf=35843,X0=36196,ff=37492,df=37496,pf=37808,mf=37809,gf=37810,_f=37811,vf=37812,yf=37813,xf=37814,Mf=37815,Sf=37816,Ef=37817,wf=37818,Tf=37819,Af=37820,bf=37821,zc=36492,q0=36283,Rf=36284,Cf=36285,Pf=36286,Y0=2200,Z0=2201,J0=2202,ma=2300,ga=2301,Bc=2302,es=2400,ts=2401,_a=2402,jc=2500,Jf=2501,zy=0,By=1,ky=2,jf=3e3,Sr=3001,j0=3200,K0=3201,Rr=0,Q0=1,Er="",ot="srgb",yi="srgb-linear",Kf="display-p3",Hy=0,kc=7680,Gy=7681,Vy=7682,Wy=7683,Xy=34055,qy=34056,Yy=5386,Zy=512,Jy=513,jy=514,Ky=515,Qy=516,$y=517,ex=518,$0=519,va=35044,os=35048,tx=35040,nx=35045,ix=35049,rx=35041,sx=35046,ox=35050,ax=35042,lx="100",Lf="300 es",Xc=1035;class ir{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const vn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let pm=1234567;const as=Math.PI/180,fo=180/Math.PI;function Xn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(vn[r&255]+vn[r>>8&255]+vn[r>>16&255]+vn[r>>24&255]+"-"+vn[e&255]+vn[e>>8&255]+"-"+vn[e>>16&15|64]+vn[e>>24&255]+"-"+vn[t&63|128]+vn[t>>8&255]+"-"+vn[t>>16&255]+vn[t>>24&255]+vn[n&255]+vn[n>>8&255]+vn[n>>16&255]+vn[n>>24&255]).toLowerCase()}function Gt(r,e,t){return Math.max(e,Math.min(t,r))}function Qf(r,e){return(r%e+e)%e}function cx(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function ux(r,e,t){return r!==e?(t-r)/(e-r):0}function aa(r,e,t){return(1-t)*r+t*e}function hx(r,e,t,n){return aa(r,e,1-Math.exp(-t*n))}function fx(r,e=1){return e-Math.abs(Qf(r,e*2)-e)}function dx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function px(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function mx(r,e){return r+Math.floor(Math.random()*(e-r+1))}function gx(r,e){return r+Math.random()*(e-r)}function _x(r){return r*(.5-Math.random())}function vx(r){r!==void 0&&(pm=r);let e=pm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function yx(r){return r*as}function xx(r){return r*fo}function If(r){return(r&r-1)===0&&r!==0}function e_(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function t_(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Mx(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),d=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),_=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*_,c*h);break;case"YXY":r.set(u*_,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*_,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Wn(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ct(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Sx={DEG2RAD:as,RAD2DEG:fo,generateUUID:Xn,clamp:Gt,euclideanModulo:Qf,mapLinear:cx,inverseLerp:ux,lerp:aa,damp:hx,pingpong:fx,smoothstep:dx,smootherstep:px,randInt:mx,randFloat:gx,randFloatSpread:_x,seededRandom:vx,degToRad:yx,radToDeg:xx,isPowerOfTwo:If,ceilPowerOfTwo:e_,floorPowerOfTwo:t_,setQuaternionFromProperEuler:Mx,normalize:ct,denormalize:Wn};class de{constructor(e=0,t=0){de.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Gt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class gt{constructor(){gt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,s,l,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=l,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],_=n[5],y=n[8],S=i[0],M=i[3],v=i[6],w=i[1],E=i[4],b=i[7],R=i[2],C=i[5],N=i[8];return s[0]=l*S+c*w+u*R,s[3]=l*M+c*E+u*C,s[6]=l*v+c*b+u*N,s[1]=h*S+d*w+p*R,s[4]=h*M+d*E+p*C,s[7]=h*v+d*b+p*N,s[2]=m*S+_*w+y*R,s[5]=m*M+_*E+y*C,s[8]=m*v+_*b+y*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*l*d-t*c*h-n*s*d+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*l-c*h,m=c*u-d*s,_=h*s-l*u,y=t*p+n*m+i*_;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=p*S,e[1]=(i*h-d*n)*S,e[2]=(c*n-i*l)*S,e[3]=m*S,e[4]=(d*t-i*u)*S,e[5]=(i*s-c*t)*S,e[6]=_*S,e[7]=(n*u-h*t)*S,e[8]=(l*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(mh.makeScale(e,t)),this}rotate(e){return this.premultiply(mh.makeRotation(-e)),this}translate(e,t){return this.premultiply(mh.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const mh=new gt;function n_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const Ex={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ro(r,e){return new Ex[r](e)}function ya(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const mm={};function la(r){r in mm||(mm[r]=!0,console.warn(r))}function co(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function gh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const wx=new gt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),Tx=new gt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function Ax(r){return r.convertSRGBToLinear().applyMatrix3(Tx)}function bx(r){return r.applyMatrix3(wx).convertLinearToSRGB()}const Rx={[yi]:r=>r,[ot]:r=>r.convertSRGBToLinear(),[Kf]:Ax},Cx={[yi]:r=>r,[ot]:r=>r.convertLinearToSRGB(),[Kf]:bx},ii={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return yi},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Rx[e],i=Cx[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}};let Is;class $f{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Is===void 0&&(Is=ya("canvas")),Is.width=e.width,Is.height=e.height;const n=Is.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Is}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ya("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=co(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(co(t[n]/255)*255):t[n]=co(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ns{constructor(e=null){this.isSource=!0,this.uuid=Xn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(_h(i[l].image)):s.push(_h(i[l]))}else s=_h(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function _h(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?$f.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Px=0;class Yt extends ir{constructor(e=Yt.DEFAULT_IMAGE,t=Yt.DEFAULT_MAPPING,n=xn,i=xn,s=qt,l=Ar,c=Nn,u=tr,h=Yt.DEFAULT_ANISOTROPY,d=Er){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Px++}),this.uuid=Xn(),this.name="",this.source=new ns(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new de(0,0),this.repeat=new de(1,1),this.center=new de(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(la("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===Sr?ot:Er),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Jc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case da:e.x=e.x-Math.floor(e.x);break;case xn:e.x=e.x<0?0:1;break;case pa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case da:e.y=e.y-Math.floor(e.y);break;case xn:e.y=e.y<0?0:1;break;case pa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return la("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ot?Sr:jf}set encoding(e){la("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Sr?ot:Er}}Yt.DEFAULT_IMAGE=null;Yt.DEFAULT_MAPPING=Jc;Yt.DEFAULT_ANISOTROPY=1;class Ct{constructor(e=0,t=0,n=0,i=1){Ct.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],_=u[5],y=u[9],S=u[2],M=u[6],v=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-S)<.01&&Math.abs(y-M)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+S)<.1&&Math.abs(y+M)<.1&&Math.abs(h+_+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(h+1)/2,b=(_+1)/2,R=(v+1)/2,C=(d+m)/4,N=(p+S)/4,O=(y+M)/4;return E>b&&E>R?E<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(E),i=C/n,s=N/n):b>R?b<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(b),n=C/i,s=O/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=N/s,i=O/s),this.set(n,i,s,t),this}let w=Math.sqrt((M-y)*(M-y)+(p-S)*(p-S)+(m-d)*(m-d));return Math.abs(w)<.001&&(w=1),this.x=(M-y)/w,this.y=(p-S)/w,this.z=(m-d)/w,this.w=Math.acos((h+_+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class xi extends ir{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(la("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Sr?ot:Er),this.texture=new Yt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:qt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ns(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Kc extends Yt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Xt,this.minFilter=Xt,this.wrapR=xn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Lx extends xi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Kc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class ed extends Yt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Xt,this.minFilter=Xt,this.wrapR=xn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ix extends xi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new ed(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Ux extends xi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Fn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[l+0],_=s[l+1],y=s[l+2],S=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=_,e[t+2]=y,e[t+3]=S;return}if(p!==S||u!==m||h!==_||d!==y){let M=1-c;const v=u*m+h*_+d*y+p*S,w=v>=0?1:-1,E=1-v*v;if(E>Number.EPSILON){const R=Math.sqrt(E),C=Math.atan2(R,v*w);M=Math.sin(M*C)/R,c=Math.sin(c*C)/R}const b=c*w;if(u=u*M+m*b,h=h*M+_*b,d=d*M+y*b,p=p*M+S*b,M===1-c){const R=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=R,h*=R,d*=R,p*=R}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[l],m=s[l+1],_=s[l+2],y=s[l+3];return e[t]=c*y+d*p+u*_-h*m,e[t+1]=u*y+d*m+h*p-c*_,e[t+2]=h*y+d*_+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),_=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"YXZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"ZXY":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"ZYX":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"YZX":this._x=m*d*p+h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p-m*_*y;break;case"XZY":this._x=m*d*p-h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p+m*_*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const _=.5/Math.sqrt(m+1);this._w=.25/_,this._x=(d-u)*_,this._y=(s-h)*_,this._z=(l-i)*_}else if(n>c&&n>p){const _=2*Math.sqrt(1+n-c-p);this._w=(d-u)/_,this._x=.25*_,this._y=(i+l)/_,this._z=(s+h)/_}else if(c>p){const _=2*Math.sqrt(1+c-n-p);this._w=(s-h)/_,this._x=(i+l)/_,this._y=.25*_,this._z=(u+d)/_}else{const _=2*Math.sqrt(1+p-n-c);this._w=(l-i)/_,this._x=(s+h)/_,this._y=(u+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Gt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+l*c+i*h-s*u,this._y=i*d+l*u+s*c-n*h,this._z=s*d+l*h+n*u-i*c,this._w=l*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*l+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(gm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(gm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=u*t+l*i-c*n,d=u*n+c*t-s*i,p=u*i+s*n-l*t,m=-s*t-l*n-c*i;return this.x=h*u+m*-s+d*-c-p*-l,this.y=d*u+m*-l+p*-s-h*-c,this.z=p*u+m*-c+h*-l-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return vh.copy(this).projectOnVector(e),this.sub(vh)}reflect(e){return this.sub(vh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Gt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const vh=new U,gm=new Fn;class Di{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Xi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Xi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Xi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Us.copy(e.boundingBox),Us.applyMatrix4(e.matrixWorld),this.union(Us);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let l=0,c=s.count;l<c;l++)Xi.fromBufferAttribute(s,l).applyMatrix4(e.matrixWorld),this.expandByPoint(Xi)}else i.boundingBox===null&&i.computeBoundingBox(),Us.copy(i.boundingBox),Us.applyMatrix4(e.matrixWorld),this.union(Us)}const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Xi),Xi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Wo),Xl.subVectors(this.max,Wo),Ds.subVectors(e.a,Wo),Ns.subVectors(e.b,Wo),Fs.subVectors(e.c,Wo),pr.subVectors(Ns,Ds),mr.subVectors(Fs,Ns),Gr.subVectors(Ds,Fs);let t=[0,-pr.z,pr.y,0,-mr.z,mr.y,0,-Gr.z,Gr.y,pr.z,0,-pr.x,mr.z,0,-mr.x,Gr.z,0,-Gr.x,-pr.y,pr.x,0,-mr.y,mr.x,0,-Gr.y,Gr.x,0];return!yh(t,Ds,Ns,Fs,Xl)||(t=[1,0,0,0,1,0,0,0,1],!yh(t,Ds,Ns,Fs,Xl))?!1:(ql.crossVectors(pr,mr),t=[ql.x,ql.y,ql.z],yh(t,Ds,Ns,Fs,Xl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Xi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Xi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Wi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Wi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Wi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Wi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Wi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Wi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Wi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Wi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Wi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Wi=[new U,new U,new U,new U,new U,new U,new U,new U],Xi=new U,Us=new Di,Ds=new U,Ns=new U,Fs=new U,pr=new U,mr=new U,Gr=new U,Wo=new U,Xl=new U,ql=new U,Vr=new U;function yh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Vr.fromArray(r,s);const c=i.x*Math.abs(Vr.x)+i.y*Math.abs(Vr.y)+i.z*Math.abs(Vr.z),u=e.dot(Vr),h=t.dot(Vr),d=n.dot(Vr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const Dx=new Di,Xo=new U,xh=new U;class Ni{constructor(e=new U,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Dx.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Xo.subVectors(e,this.center);const t=Xo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Xo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(xh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Xo.copy(e.center).add(xh)),this.expandByPoint(Xo.copy(e.center).sub(xh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const qi=new U,Mh=new U,Yl=new U,gr=new U,Sh=new U,Zl=new U,Eh=new U;class Pa{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,qi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=qi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(qi.copy(this.origin).addScaledVector(this.direction,t),qi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Mh.copy(e).add(t).multiplyScalar(.5),Yl.copy(t).sub(e).normalize(),gr.copy(this.origin).sub(Mh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Yl),c=gr.dot(this.direction),u=-gr.dot(Yl),h=gr.lengthSq(),d=Math.abs(1-l*l);let p,m,_,y;if(d>0)if(p=l*u-c,m=l*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const S=1/d;p*=S,m*=S,_=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),_=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Mh).addScaledVector(Yl,m),_}intersectSphere(e,t){qi.subVectors(e.center,this.origin);const n=qi.dot(this.direction),i=qi.dot(qi)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,l=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,l=(e.min.y-m.y)*d),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,qi)!==null}intersectTriangle(e,t,n,i,s){Sh.subVectors(t,e),Zl.subVectors(n,e),Eh.crossVectors(Sh,Zl);let l=this.direction.dot(Eh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;gr.subVectors(this.origin,e);const u=c*this.direction.dot(Zl.crossVectors(gr,Zl));if(u<0)return null;const h=c*this.direction.dot(Sh.cross(gr));if(h<0||u+h>l)return null;const d=-c*gr.dot(Eh);return d<0?null:this.at(d/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class it{constructor(){it.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,S,M){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=d,v[10]=p,v[14]=m,v[3]=_,v[7]=y,v[11]=S,v[15]=M,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new it().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Os.setFromMatrixColumn(e,0).length(),s=1/Os.setFromMatrixColumn(e,1).length(),l=1/Os.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*d,_=l*p,y=c*d,S=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=_+y*h,t[5]=m-S*h,t[9]=-c*u,t[2]=S-m*h,t[6]=y+_*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*d,_=u*p,y=h*d,S=h*p;t[0]=m+S*c,t[4]=y*c-_,t[8]=l*h,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=_*c-y,t[6]=S+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*d,_=u*p,y=h*d,S=h*p;t[0]=m-S*c,t[4]=-l*p,t[8]=y+_*c,t[1]=_+y*c,t[5]=l*d,t[9]=S-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*d,_=l*p,y=c*d,S=c*p;t[0]=u*d,t[4]=y*h-_,t[8]=m*h+S,t[1]=u*p,t[5]=S*h+m,t[9]=_*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,_=l*h,y=c*u,S=c*h;t[0]=u*d,t[4]=S-m*p,t[8]=y*p+_,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-h*d,t[6]=_*p+y,t[10]=m-S*p}else if(e.order==="XZY"){const m=l*u,_=l*h,y=c*u,S=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+S,t[5]=l*d,t[9]=_*p-y,t[2]=y*p-_,t[6]=c*d,t[10]=S*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Nx,e,Fx)}lookAt(e,t,n){const i=this.elements;return Gn.subVectors(e,t),Gn.lengthSq()===0&&(Gn.z=1),Gn.normalize(),_r.crossVectors(n,Gn),_r.lengthSq()===0&&(Math.abs(n.z)===1?Gn.x+=1e-4:Gn.z+=1e-4,Gn.normalize(),_r.crossVectors(n,Gn)),_r.normalize(),Jl.crossVectors(Gn,_r),i[0]=_r.x,i[4]=Jl.x,i[8]=Gn.x,i[1]=_r.y,i[5]=Jl.y,i[9]=Gn.y,i[2]=_r.z,i[6]=Jl.z,i[10]=Gn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],_=n[13],y=n[2],S=n[6],M=n[10],v=n[14],w=n[3],E=n[7],b=n[11],R=n[15],C=i[0],N=i[4],O=i[8],A=i[12],L=i[1],z=i[5],K=i[9],V=i[13],Y=i[2],$=i[6],ue=i[10],ae=i[14],k=i[3],J=i[7],q=i[11],he=i[15];return s[0]=l*C+c*L+u*Y+h*k,s[4]=l*N+c*z+u*$+h*J,s[8]=l*O+c*K+u*ue+h*q,s[12]=l*A+c*V+u*ae+h*he,s[1]=d*C+p*L+m*Y+_*k,s[5]=d*N+p*z+m*$+_*J,s[9]=d*O+p*K+m*ue+_*q,s[13]=d*A+p*V+m*ae+_*he,s[2]=y*C+S*L+M*Y+v*k,s[6]=y*N+S*z+M*$+v*J,s[10]=y*O+S*K+M*ue+v*q,s[14]=y*A+S*V+M*ae+v*he,s[3]=w*C+E*L+b*Y+R*k,s[7]=w*N+E*z+b*$+R*J,s[11]=w*O+E*K+b*ue+R*q,s[15]=w*A+E*V+b*ae+R*he,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],_=e[14],y=e[3],S=e[7],M=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*_-n*u*_)+S*(+t*u*_-t*h*m+s*l*m-i*l*_+i*h*d-s*u*d)+M*(+t*h*p-t*c*_-s*l*p+n*l*_+s*c*d-n*h*d)+v*(-i*c*d-t*u*p+t*c*m+i*l*p-n*l*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],_=e[11],y=e[12],S=e[13],M=e[14],v=e[15],w=p*M*h-S*m*h+S*u*_-c*M*_-p*u*v+c*m*v,E=y*m*h-d*M*h-y*u*_+l*M*_+d*u*v-l*m*v,b=d*S*h-y*p*h+y*c*_-l*S*_-d*c*v+l*p*v,R=y*p*u-d*S*u-y*c*m+l*S*m+d*c*M-l*p*M,C=t*w+n*E+i*b+s*R;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/C;return e[0]=w*N,e[1]=(S*m*s-p*M*s-S*i*_+n*M*_+p*i*v-n*m*v)*N,e[2]=(c*M*s-S*u*s+S*i*h-n*M*h-c*i*v+n*u*v)*N,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*_-n*u*_)*N,e[4]=E*N,e[5]=(d*M*s-y*m*s+y*i*_-t*M*_-d*i*v+t*m*v)*N,e[6]=(y*u*s-l*M*s-y*i*h+t*M*h+l*i*v-t*u*v)*N,e[7]=(l*m*s-d*u*s+d*i*h-t*m*h-l*i*_+t*u*_)*N,e[8]=b*N,e[9]=(y*p*s-d*S*s-y*n*_+t*S*_+d*n*v-t*p*v)*N,e[10]=(l*S*s-y*c*s+y*n*h-t*S*h-l*n*v+t*c*v)*N,e[11]=(d*c*s-l*p*s-d*n*h+t*p*h+l*n*_-t*c*_)*N,e[12]=R*N,e[13]=(d*S*i-y*p*i+y*n*m-t*S*m-d*n*M+t*p*M)*N,e[14]=(y*c*i-l*S*i-y*n*u+t*S*u+l*n*M-t*c*M)*N,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*m+t*c*m)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,d=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*l,0,h*u-i*c,d*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,d=l+l,p=c+c,m=s*h,_=s*d,y=s*p,S=l*d,M=l*p,v=c*p,w=u*h,E=u*d,b=u*p,R=n.x,C=n.y,N=n.z;return i[0]=(1-(S+v))*R,i[1]=(_+b)*R,i[2]=(y-E)*R,i[3]=0,i[4]=(_-b)*C,i[5]=(1-(m+v))*C,i[6]=(M+w)*C,i[7]=0,i[8]=(y+E)*N,i[9]=(M-w)*N,i[10]=(1-(m+S))*N,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Os.set(i[0],i[1],i[2]).length();const l=Os.set(i[4],i[5],i[6]).length(),c=Os.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],fi.copy(this);const h=1/s,d=1/l,p=1/c;return fi.elements[0]*=h,fi.elements[1]*=h,fi.elements[2]*=h,fi.elements[4]*=d,fi.elements[5]*=d,fi.elements[6]*=d,fi.elements[8]*=p,fi.elements[9]*=p,fi.elements[10]*=p,t.setFromRotationMatrix(fi),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l){const c=this.elements,u=2*s/(t-e),h=2*s/(n-i),d=(t+e)/(t-e),p=(n+i)/(n-i),m=-(l+s)/(l-s),_=-2*l*s/(l-s);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=p,c[13]=0,c[2]=0,c[6]=0,c[10]=m,c[14]=_,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,s,l){const c=this.elements,u=1/(t-e),h=1/(n-i),d=1/(l-s),p=(t+e)*u,m=(n+i)*h,_=(l+s)*d;return c[0]=2*u,c[4]=0,c[8]=0,c[12]=-p,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=-2*d,c[14]=-_,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Os=new U,fi=new it,Nx=new U(0,0,0),Fx=new U(1,1,1),_r=new U,Jl=new U,Gn=new U,_m=new it,vm=new Fn;class La{constructor(e=0,t=0,n=0,i=La.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Gt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Gt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Gt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,_),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Gt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Gt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-Gt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return _m.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_m,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return vm.setFromEuler(this),this.setFromQuaternion(vm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}La.DEFAULT_ORDER="XYZ";class ls{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Ox=0;const ym=new U,zs=new Fn,Yi=new it,jl=new U,qo=new U,zx=new U,Bx=new Fn,xm=new U(1,0,0),Mm=new U(0,1,0),Sm=new U(0,0,1),kx={type:"added"},Em={type:"removed"};class Et extends ir{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ox++}),this.uuid=Xn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Et.DEFAULT_UP.clone();const e=new U,t=new La,n=new Fn,i=new U(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new it},normalMatrix:{value:new gt}}),this.matrix=new it,this.matrixWorld=new it,this.matrixAutoUpdate=Et.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new ls,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return zs.setFromAxisAngle(e,t),this.quaternion.multiply(zs),this}rotateOnWorldAxis(e,t){return zs.setFromAxisAngle(e,t),this.quaternion.premultiply(zs),this}rotateX(e){return this.rotateOnAxis(xm,e)}rotateY(e){return this.rotateOnAxis(Mm,e)}rotateZ(e){return this.rotateOnAxis(Sm,e)}translateOnAxis(e,t){return ym.copy(e).applyQuaternion(this.quaternion),this.position.add(ym.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(xm,e)}translateY(e){return this.translateOnAxis(Mm,e)}translateZ(e){return this.translateOnAxis(Sm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Yi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?jl.copy(e):jl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),qo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yi.lookAt(qo,jl,this.up):Yi.lookAt(jl,qo,this.up),this.quaternion.setFromRotationMatrix(Yi),i&&(Yi.extractRotation(i.matrixWorld),zs.setFromRotationMatrix(Yi),this.quaternion.premultiply(zs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(kx)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Em)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Em)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Yi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Yi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Yi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const l=this.children[i].getObjectsByProperty(e,t);l.length>0&&(n=n.concat(l))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qo,e,zx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qo,Bx,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),d=l(e.images),p=l(e.shapes),m=l(e.skeletons),_=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Et.DEFAULT_UP=new U(0,1,0);Et.DEFAULT_MATRIX_AUTO_UPDATE=!0;Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const di=new U,Zi=new U,wh=new U,Ji=new U,Bs=new U,ks=new U,wm=new U,Th=new U,Ah=new U,bh=new U;let Kl=!1;class Dn{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),di.subVectors(e,t),i.cross(di);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){di.subVectors(i,t),Zi.subVectors(n,t),wh.subVectors(e,t);const l=di.dot(di),c=di.dot(Zi),u=di.dot(wh),h=Zi.dot(Zi),d=Zi.dot(wh),p=l*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,_=(h*u-c*d)*m,y=(l*d-c*u)*m;return s.set(1-_-y,y,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ji),Ji.x>=0&&Ji.y>=0&&Ji.x+Ji.y<=1}static getUV(e,t,n,i,s,l,c,u){return Kl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Kl=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,Ji),u.setScalar(0),u.addScaledVector(s,Ji.x),u.addScaledVector(l,Ji.y),u.addScaledVector(c,Ji.z),u}static isFrontFacing(e,t,n,i){return di.subVectors(n,t),Zi.subVectors(e,t),di.cross(Zi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return di.subVectors(this.c,this.b),Zi.subVectors(this.a,this.b),di.cross(Zi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Dn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Dn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Kl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Kl=!0),Dn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Dn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Dn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Dn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;Bs.subVectors(i,n),ks.subVectors(s,n),Th.subVectors(e,n);const u=Bs.dot(Th),h=ks.dot(Th);if(u<=0&&h<=0)return t.copy(n);Ah.subVectors(e,i);const d=Bs.dot(Ah),p=ks.dot(Ah);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(Bs,l);bh.subVectors(e,s);const _=Bs.dot(bh),y=ks.dot(bh);if(y>=0&&_<=y)return t.copy(s);const S=_*h-u*y;if(S<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(ks,c);const M=d*y-_*p;if(M<=0&&p-d>=0&&_-y>=0)return wm.subVectors(s,i),c=(p-d)/(p-d+(_-y)),t.copy(i).addScaledVector(wm,c);const v=1/(M+S+m);return l=S*v,c=m*v,t.copy(n).addScaledVector(Bs,l).addScaledVector(ks,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Hx=0;class Mn extends ir{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Hx++}),this.uuid=Xn(),this.name="",this.type="Material",this.blending=rs,this.side=er,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Wf,this.blendDst=Xf,this.blendEquation=Qr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Vc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=$0,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=kc,this.stencilZFail=kc,this.stencilZPass=kc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==rs&&(n.blending=this.blending),this.side!==er&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const i_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},pi={h:0,s:0,l:0},Ql={h:0,s:0,l:0};function Rh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ot){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ii.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=ii.workingColorSpace){return this.r=e,this.g=t,this.b=n,ii.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=ii.workingColorSpace){if(e=Qf(e,1),t=Gt(t,0,1),n=Gt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Rh(l,s,e+1/3),this.g=Rh(l,s,e),this.b=Rh(l,s,e-1/3)}return ii.toWorkingColorSpace(this,i),this}setStyle(e,t=ot){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ot){const n=i_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=co(e.r),this.g=co(e.g),this.b=co(e.b),this}copyLinearToSRGB(e){return this.r=gh(e.r),this.g=gh(e.g),this.b=gh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ot){return ii.fromWorkingColorSpace(yn.copy(this),e),Math.round(Gt(yn.r*255,0,255))*65536+Math.round(Gt(yn.g*255,0,255))*256+Math.round(Gt(yn.b*255,0,255))}getHexString(e=ot){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ii.workingColorSpace){ii.fromWorkingColorSpace(yn.copy(this),t);const n=yn.r,i=yn.g,s=yn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=ii.workingColorSpace){return ii.fromWorkingColorSpace(yn.copy(this),t),e.r=yn.r,e.g=yn.g,e.b=yn.b,e}getStyle(e=ot){ii.fromWorkingColorSpace(yn.copy(this),e);const t=yn.r,n=yn.g,i=yn.b;return e!==ot?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(pi),pi.h+=e,pi.s+=t,pi.l+=n,this.setHSL(pi.h,pi.s,pi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(pi),e.getHSL(Ql);const n=aa(pi.h,Ql.h,t),i=aa(pi.s,Ql.s,t),s=aa(pi.l,Ql.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const yn=new Le;Le.NAMES=i_;class Cr extends Mn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ki=Gx();function Gx(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Un(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Gt(r,-65504,65504),Ki.floatView[0]=r;const e=Ki.uint32View[0],t=e>>23&511;return Ki.baseTable[t]+((e&8388607)>>Ki.shiftTable[t])}function ia(r){const e=r>>10;return Ki.uint32View[0]=Ki.mantissaTable[Ki.offsetTable[e]+(r&1023)]+Ki.exponentTable[e],Ki.floatView[0]}const Vx={toHalfFloat:Un,fromHalfFloat:ia},Qt=new U,$l=new de;class It{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=va,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)$l.fromBufferAttribute(this,t),$l.applyMatrix3(e),this.setXY(t,$l.x,$l.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix3(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix4(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.applyNormalMatrix(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.transformDirection(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Wn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Wn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Wn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Wn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==va&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Wx extends It{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Xx extends It{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class qx extends It{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Yx extends It{constructor(e,t,n){super(new Int16Array(e),t,n)}}class td extends It{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Zx extends It{constructor(e,t,n){super(new Int32Array(e),t,n)}}class nd extends It{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Jx extends It{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ia(this.array[e*this.itemSize]);return this.normalized&&(t=Wn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=Un(t),this}getY(e){let t=ia(this.array[e*this.itemSize+1]);return this.normalized&&(t=Wn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=Un(t),this}getZ(e){let t=ia(this.array[e*this.itemSize+2]);return this.normalized&&(t=Wn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=Un(t),this}getW(e){let t=ia(this.array[e*this.itemSize+3]);return this.normalized&&(t=Wn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=Un(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=Un(t),this.array[e+1]=Un(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=Un(t),this.array[e+1]=Un(n),this.array[e+2]=Un(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.array[e+0]=Un(t),this.array[e+1]=Un(n),this.array[e+2]=Un(i),this.array[e+3]=Un(s),this}}class Fe extends It{constructor(e,t,n){super(new Float32Array(e),t,n)}}class jx extends It{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Kx=0;const ni=new it,Ch=new Et,Hs=new U,Vn=new Di,Yo=new Di,an=new U;class dt extends ir{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Kx++}),this.uuid=Xn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(n_(e)?nd:td)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new gt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ni.makeRotationFromQuaternion(e),this.applyMatrix4(ni),this}rotateX(e){return ni.makeRotationX(e),this.applyMatrix4(ni),this}rotateY(e){return ni.makeRotationY(e),this.applyMatrix4(ni),this}rotateZ(e){return ni.makeRotationZ(e),this.applyMatrix4(ni),this}translate(e,t,n){return ni.makeTranslation(e,t,n),this.applyMatrix4(ni),this}scale(e,t,n){return ni.makeScale(e,t,n),this.applyMatrix4(ni),this}lookAt(e){return Ch.lookAt(e),Ch.updateMatrix(),this.applyMatrix4(Ch.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hs).negate(),this.translate(Hs.x,Hs.y,Hs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Fe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Di);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Vn.setFromBufferAttribute(s),this.morphTargetsRelative?(an.addVectors(this.boundingBox.min,Vn.min),this.boundingBox.expandByPoint(an),an.addVectors(this.boundingBox.max,Vn.max),this.boundingBox.expandByPoint(an)):(this.boundingBox.expandByPoint(Vn.min),this.boundingBox.expandByPoint(Vn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ni);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if(Vn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];Yo.setFromBufferAttribute(c),this.morphTargetsRelative?(an.addVectors(Vn.min,Yo.min),Vn.expandByPoint(an),an.addVectors(Vn.max,Yo.max),Vn.expandByPoint(an)):(Vn.expandByPoint(Yo.min),Vn.expandByPoint(Yo.max))}Vn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)an.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(an));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)an.fromBufferAttribute(c,h),u&&(Hs.fromBufferAttribute(e,h),an.add(Hs)),i=Math.max(i,n.distanceToSquared(an))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new It(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let L=0;L<c;L++)h[L]=new U,d[L]=new U;const p=new U,m=new U,_=new U,y=new de,S=new de,M=new de,v=new U,w=new U;function E(L,z,K){p.fromArray(i,L*3),m.fromArray(i,z*3),_.fromArray(i,K*3),y.fromArray(l,L*2),S.fromArray(l,z*2),M.fromArray(l,K*2),m.sub(p),_.sub(p),S.sub(y),M.sub(y);const V=1/(S.x*M.y-M.x*S.y);isFinite(V)&&(v.copy(m).multiplyScalar(M.y).addScaledVector(_,-S.y).multiplyScalar(V),w.copy(_).multiplyScalar(S.x).addScaledVector(m,-M.x).multiplyScalar(V),h[L].add(v),h[z].add(v),h[K].add(v),d[L].add(w),d[z].add(w),d[K].add(w))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let L=0,z=b.length;L<z;++L){const K=b[L],V=K.start,Y=K.count;for(let $=V,ue=V+Y;$<ue;$+=3)E(n[$+0],n[$+1],n[$+2])}const R=new U,C=new U,N=new U,O=new U;function A(L){N.fromArray(s,L*3),O.copy(N);const z=h[L];R.copy(z),R.sub(N.multiplyScalar(N.dot(z))).normalize(),C.crossVectors(O,z);const V=C.dot(d[L])<0?-1:1;u[L*4]=R.x,u[L*4+1]=R.y,u[L*4+2]=R.z,u[L*4+3]=V}for(let L=0,z=b.length;L<z;++L){const K=b[L],V=K.start,Y=K.count;for(let $=V,ue=V+Y;$<ue;$+=3)A(n[$+0]),A(n[$+1]),A(n[$+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new It(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,_=n.count;m<_;m++)n.setXYZ(m,0,0,0);const i=new U,s=new U,l=new U,c=new U,u=new U,h=new U,d=new U,p=new U;if(e)for(let m=0,_=e.count;m<_;m+=3){const y=e.getX(m+0),S=e.getX(m+1),M=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),l.fromBufferAttribute(t,M),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,S),h.fromBufferAttribute(n,M),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(S,u.x,u.y,u.z),n.setXYZ(M,h.x,h.y,h.z)}else for(let m=0,_=t.count;m<_;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)an.fromBufferAttribute(e,t),an.normalize(),e.setXYZ(t,an.x,an.y,an.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let _=0,y=0;for(let S=0,M=u.length;S<M;S++){c.isInterleavedBufferAttribute?_=u[S]*c.data.stride+c.offset:_=u[S]*d;for(let v=0;v<d;v++)m[y++]=h[_++]}return new It(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new dt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],_=e(m,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p];d.push(_.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,_=p.length;m<_;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,d=l.length;h<d;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Tm=new it,Pi=new Pa,ec=new Ni,Am=new U,Gs=new U,Vs=new U,Ws=new U,Ph=new U,tc=new U,nc=new de,ic=new de,rc=new de,bm=new U,Rm=new U,Cm=new U,sc=new U,oc=new U;class fn extends Et{constructor(e=new dt,t=new Cr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){tc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(Ph.fromBufferAttribute(p,e),l?tc.addScaledVector(Ph,d):tc.addScaledVector(Ph.sub(t),d))}t.add(tc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ec.copy(n.boundingSphere),ec.applyMatrix4(s),Pi.copy(e.ray).recast(e.near),!(ec.containsPoint(Pi.origin)===!1&&(Pi.intersectSphere(ec,Am)===null||Pi.origin.distanceToSquared(Am)>(e.far-e.near)**2))&&(Tm.copy(s).invert(),Pi.copy(e.ray).applyMatrix4(Tm),!(n.boundingBox!==null&&Pi.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t)))}_computeIntersections(e,t){let n;const i=this.geometry,s=this.material,l=i.index,c=i.attributes.position,u=i.attributes.uv,h=i.attributes.uv1,d=i.attributes.normal,p=i.groups,m=i.drawRange;if(l!==null)if(Array.isArray(s))for(let _=0,y=p.length;_<y;_++){const S=p[_],M=s[S.materialIndex],v=Math.max(S.start,m.start),w=Math.min(l.count,Math.min(S.start+S.count,m.start+m.count));for(let E=v,b=w;E<b;E+=3){const R=l.getX(E),C=l.getX(E+1),N=l.getX(E+2);n=ac(this,M,e,Pi,u,h,d,R,C,N),n&&(n.faceIndex=Math.floor(E/3),n.face.materialIndex=S.materialIndex,t.push(n))}}else{const _=Math.max(0,m.start),y=Math.min(l.count,m.start+m.count);for(let S=_,M=y;S<M;S+=3){const v=l.getX(S),w=l.getX(S+1),E=l.getX(S+2);n=ac(this,s,e,Pi,u,h,d,v,w,E),n&&(n.faceIndex=Math.floor(S/3),t.push(n))}}else if(c!==void 0)if(Array.isArray(s))for(let _=0,y=p.length;_<y;_++){const S=p[_],M=s[S.materialIndex],v=Math.max(S.start,m.start),w=Math.min(c.count,Math.min(S.start+S.count,m.start+m.count));for(let E=v,b=w;E<b;E+=3){const R=E,C=E+1,N=E+2;n=ac(this,M,e,Pi,u,h,d,R,C,N),n&&(n.faceIndex=Math.floor(E/3),n.face.materialIndex=S.materialIndex,t.push(n))}}else{const _=Math.max(0,m.start),y=Math.min(c.count,m.start+m.count);for(let S=_,M=y;S<M;S+=3){const v=S,w=S+1,E=S+2;n=ac(this,s,e,Pi,u,h,d,v,w,E),n&&(n.faceIndex=Math.floor(S/3),t.push(n))}}}}function Qx(r,e,t,n,i,s,l,c){let u;if(e.side===bn?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===er,c),u===null)return null;oc.copy(c),oc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(oc);return h<t.near||h>t.far?null:{distance:h,point:oc.clone(),object:r}}function ac(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Gs),r.getVertexPosition(u,Vs),r.getVertexPosition(h,Ws);const d=Qx(r,e,t,n,Gs,Vs,Ws,sc);if(d){i&&(nc.fromBufferAttribute(i,c),ic.fromBufferAttribute(i,u),rc.fromBufferAttribute(i,h),d.uv=Dn.getInterpolation(sc,Gs,Vs,Ws,nc,ic,rc,new de)),s&&(nc.fromBufferAttribute(s,c),ic.fromBufferAttribute(s,u),rc.fromBufferAttribute(s,h),d.uv1=Dn.getInterpolation(sc,Gs,Vs,Ws,nc,ic,rc,new de),d.uv2=d.uv1),l&&(bm.fromBufferAttribute(l,c),Rm.fromBufferAttribute(l,u),Cm.fromBufferAttribute(l,h),d.normal=Dn.getInterpolation(sc,Gs,Vs,Ws,bm,Rm,Cm,new U),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new U,materialIndex:0};Dn.getNormal(Gs,Vs,Ws,p.normal),d.face=p}return d}class Pr extends dt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],d=[],p=[];let m=0,_=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Fe(h,3)),this.setAttribute("normal",new Fe(d,3)),this.setAttribute("uv",new Fe(p,2));function y(S,M,v,w,E,b,R,C,N,O,A){const L=b/N,z=R/O,K=b/2,V=R/2,Y=C/2,$=N+1,ue=O+1;let ae=0,k=0;const J=new U;for(let q=0;q<ue;q++){const he=q*z-V;for(let pe=0;pe<$;pe++){const Z=pe*L-K;J[S]=Z*w,J[M]=he*E,J[v]=Y,h.push(J.x,J.y,J.z),J[S]=0,J[M]=0,J[v]=C>0?1:-1,d.push(J.x,J.y,J.z),p.push(pe/N),p.push(1-q/O),ae+=1}}for(let q=0;q<O;q++)for(let he=0;he<N;he++){const pe=m+he+$*q,Z=m+he+$*(q+1),le=m+(he+1)+$*(q+1),xe=m+(he+1)+$*q;u.push(pe,Z,xe),u.push(Z,le,xe),k+=6}c.addGroup(_,k,A),_+=k,m+=ae}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function po(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function An(r){const e={};for(let t=0;t<r.length;t++){const n=po(r[t]);for(const i in n)e[i]=n[i]}return e}function $x(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function r_(r){return r.getRenderTarget()===null?r.outputColorSpace:yi}const s_={clone:po,merge:An};var eM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,tM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ui extends Mn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=eM,this.fragmentShader=tM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=po(e.uniforms),this.uniformsGroups=$x(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ia extends Et{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new it,this.projectionMatrix=new it,this.projectionMatrixInverse=new it}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class ln extends Ia{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=fo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(as*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return fo*2*Math.atan(Math.tan(as*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(as*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Xs=-90,qs=1;class o_ extends Et{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new ln(Xs,qs,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const s=new ln(Xs,qs,e,t);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(-1,0,0),this.add(s);const l=new ln(Xs,qs,e,t);l.layers=this.layers,l.up.set(0,0,-1),l.lookAt(0,1,0),this.add(l);const c=new ln(Xs,qs,e,t);c.layers=this.layers,c.up.set(0,0,1),c.lookAt(0,-1,0),this.add(c);const u=new ln(Xs,qs,e,t);u.layers=this.layers,u.up.set(0,1,0),u.lookAt(0,0,1),this.add(u);const h=new ln(Xs,qs,e,t);h.layers=this.layers,h.up.set(0,1,0),h.lookAt(0,0,-1),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,l,c,u,h]=this.children,d=e.getRenderTarget(),p=e.toneMapping,m=e.xr.enabled;e.toneMapping=vi,e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,l),e.setRenderTarget(n,3),e.render(t,c),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=_,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(d),e.toneMapping=p,e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class Ua extends Yt{constructor(e,t,n,i,s,l,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:wr,super(e,t,n,i,s,l,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class a_ extends xi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(la("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Sr?ot:Er),this.texture=new Ua(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:qt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Pr(5,5,5),s=new Ui({name:"CubemapFromEquirect",uniforms:po(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:bn,blending:$i});s.uniforms.tEquirect.value=t;const l=new fn(i,s),c=t.minFilter;return t.minFilter===Ar&&(t.minFilter=qt),new o_(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Lh=new U,nM=new U,iM=new gt;class yr{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Lh.subVectors(n,t).cross(nM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Lh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||iM.getNormalMatrix(e),i=this.coplanarPoint(Lh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Wr=new Ni,lc=new U;class Qc{constructor(e=new yr,t=new yr,n=new yr,i=new yr,s=new yr,l=new yr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],l=n[2],c=n[3],u=n[4],h=n[5],d=n[6],p=n[7],m=n[8],_=n[9],y=n[10],S=n[11],M=n[12],v=n[13],w=n[14],E=n[15];return t[0].setComponents(c-i,p-u,S-m,E-M).normalize(),t[1].setComponents(c+i,p+u,S+m,E+M).normalize(),t[2].setComponents(c+s,p+h,S+_,E+v).normalize(),t[3].setComponents(c-s,p-h,S-_,E-v).normalize(),t[4].setComponents(c-l,p-d,S-y,E-w).normalize(),t[5].setComponents(c+l,p+d,S+y,E+w).normalize(),this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Wr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Wr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Wr)}intersectsSprite(e){return Wr.center.set(0,0,0),Wr.radius=.7071067811865476,Wr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Wr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(lc.x=i.normal.x>0?e.max.x:e.min.x,lc.y=i.normal.y>0?e.max.y:e.min.y,lc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(lc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function l_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function rM(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,_=r.createBuffer();r.bindBuffer(d,_),r.bufferData(d,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=r.SHORT;else if(p instanceof Uint32Array)y=r.UNSIGNED_INT;else if(p instanceof Int32Array)y=r.INT;else if(p instanceof Int8Array)y=r.BYTE;else if(p instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:_,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function s(h,d,p){const m=d.array,_=d.updateRange;r.bindBuffer(p,h),_.count===-1?r.bufferSubData(p,0,m):(t?r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m,_.offset,_.count):r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m.subarray(_.offset,_.offset+_.count)),_.count=-1),d.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,d)):p.version<h.version&&(s(p.buffer,h,d),p.version=h.version)}return{get:l,remove:c,update:u}}class vo extends dt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,_=[],y=[],S=[],M=[];for(let v=0;v<d;v++){const w=v*m-l;for(let E=0;E<h;E++){const b=E*p-s;y.push(b,-w,0),S.push(0,0,1),M.push(E/c),M.push(1-v/u)}}for(let v=0;v<u;v++)for(let w=0;w<c;w++){const E=w+h*v,b=w+h*(v+1),R=w+1+h*(v+1),C=w+1+h*v;_.push(E,b,C),_.push(b,R,C)}this.setIndex(_),this.setAttribute("position",new Fe(y,3)),this.setAttribute("normal",new Fe(S,3)),this.setAttribute("uv",new Fe(M,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vo(e.width,e.height,e.widthSegments,e.heightSegments)}}var sM=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,oM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,aM=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,lM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,cM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,uM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,hM="vec3 transformed = vec3( position );",fM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,dM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,pM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,mM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,gM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,_M=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,vM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,yM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,xM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,MM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,SM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,EM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,wM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,TM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,AM=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,bM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,RM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,CM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,PM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,LM="gl_FragColor = linearToOutputTexel( gl_FragColor );",IM=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,UM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,DM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,NM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,FM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,OM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,zM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,BM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,kM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,HM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,GM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,VM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,WM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,XM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,qM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,YM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,ZM=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,JM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,jM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,KM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,QM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,$M=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif`,eS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,tS=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,nS=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,iS=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,rS=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,sS=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,oS=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,aS=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,lS=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,cS=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,uS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,hS=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,fS=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,dS=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,pS=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,mS=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,gS=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,_S=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,vS=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#ifdef USE_NORMALMAP_TANGENTSPACE
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,yS=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,xS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,MS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,SS=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,ES=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,wS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,TS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,AS=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,bS=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,RS=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,CS=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,PS=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,LS=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,IS=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,US=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,DS=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,NS=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,FS=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,OS=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,zS=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,BS=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,kS=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,HS=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,GS=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,VS=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,WS=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,XS=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,qS=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,YS=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ZS=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,JS=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,jS=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,KS=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,QS=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,$S=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const eE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,tE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,nE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,iE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,rE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,sE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,oE=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,aE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,lE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,cE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,uE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,hE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,fE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,dE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pE=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,mE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_E=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,yE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,ME=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,SE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,EE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,TE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,RE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,CE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,PE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,LE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,IE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,UE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,lt={alphamap_fragment:sM,alphamap_pars_fragment:oM,alphatest_fragment:aM,alphatest_pars_fragment:lM,aomap_fragment:cM,aomap_pars_fragment:uM,begin_vertex:hM,beginnormal_vertex:fM,bsdfs:dM,iridescence_fragment:pM,bumpmap_pars_fragment:mM,clipping_planes_fragment:gM,clipping_planes_pars_fragment:_M,clipping_planes_pars_vertex:vM,clipping_planes_vertex:yM,color_fragment:xM,color_pars_fragment:MM,color_pars_vertex:SM,color_vertex:EM,common:wM,cube_uv_reflection_fragment:TM,defaultnormal_vertex:AM,displacementmap_pars_vertex:bM,displacementmap_vertex:RM,emissivemap_fragment:CM,emissivemap_pars_fragment:PM,encodings_fragment:LM,encodings_pars_fragment:IM,envmap_fragment:UM,envmap_common_pars_fragment:DM,envmap_pars_fragment:NM,envmap_pars_vertex:FM,envmap_physical_pars_fragment:ZM,envmap_vertex:OM,fog_vertex:zM,fog_pars_vertex:BM,fog_fragment:kM,fog_pars_fragment:HM,gradientmap_pars_fragment:GM,lightmap_fragment:VM,lightmap_pars_fragment:WM,lights_lambert_fragment:XM,lights_lambert_pars_fragment:qM,lights_pars_begin:YM,lights_toon_fragment:JM,lights_toon_pars_fragment:jM,lights_phong_fragment:KM,lights_phong_pars_fragment:QM,lights_physical_fragment:$M,lights_physical_pars_fragment:eS,lights_fragment_begin:tS,lights_fragment_maps:nS,lights_fragment_end:iS,logdepthbuf_fragment:rS,logdepthbuf_pars_fragment:sS,logdepthbuf_pars_vertex:oS,logdepthbuf_vertex:aS,map_fragment:lS,map_pars_fragment:cS,map_particle_fragment:uS,map_particle_pars_fragment:hS,metalnessmap_fragment:fS,metalnessmap_pars_fragment:dS,morphcolor_vertex:pS,morphnormal_vertex:mS,morphtarget_pars_vertex:gS,morphtarget_vertex:_S,normal_fragment_begin:vS,normal_fragment_maps:yS,normal_pars_fragment:xS,normal_pars_vertex:MS,normal_vertex:SS,normalmap_pars_fragment:ES,clearcoat_normal_fragment_begin:wS,clearcoat_normal_fragment_maps:TS,clearcoat_pars_fragment:AS,iridescence_pars_fragment:bS,output_fragment:RS,packing:CS,premultiplied_alpha_fragment:PS,project_vertex:LS,dithering_fragment:IS,dithering_pars_fragment:US,roughnessmap_fragment:DS,roughnessmap_pars_fragment:NS,shadowmap_pars_fragment:FS,shadowmap_pars_vertex:OS,shadowmap_vertex:zS,shadowmask_pars_fragment:BS,skinbase_vertex:kS,skinning_pars_vertex:HS,skinning_vertex:GS,skinnormal_vertex:VS,specularmap_fragment:WS,specularmap_pars_fragment:XS,tonemapping_fragment:qS,tonemapping_pars_fragment:YS,transmission_fragment:ZS,transmission_pars_fragment:JS,uv_pars_fragment:jS,uv_pars_vertex:KS,uv_vertex:QS,worldpos_vertex:$S,background_vert:eE,background_frag:tE,backgroundCube_vert:nE,backgroundCube_frag:iE,cube_vert:rE,cube_frag:sE,depth_vert:oE,depth_frag:aE,distanceRGBA_vert:lE,distanceRGBA_frag:cE,equirect_vert:uE,equirect_frag:hE,linedashed_vert:fE,linedashed_frag:dE,meshbasic_vert:pE,meshbasic_frag:mE,meshlambert_vert:gE,meshlambert_frag:_E,meshmatcap_vert:vE,meshmatcap_frag:yE,meshnormal_vert:xE,meshnormal_frag:ME,meshphong_vert:SE,meshphong_frag:EE,meshphysical_vert:wE,meshphysical_frag:TE,meshtoon_vert:AE,meshtoon_frag:bE,points_vert:RE,points_frag:CE,shadow_vert:PE,shadow_frag:LE,sprite_vert:IE,sprite_frag:UE},we={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new gt},alphaMap:{value:null},alphaMapTransform:{value:new gt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new gt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new gt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new gt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new gt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new gt},normalScale:{value:new de(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new gt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new gt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new gt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new gt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new gt}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new de(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new gt},alphaMap:{value:null},alphaTest:{value:0}}},_i={basic:{uniforms:An([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.fog]),vertexShader:lt.meshbasic_vert,fragmentShader:lt.meshbasic_frag},lambert:{uniforms:An([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new Le(0)}}]),vertexShader:lt.meshlambert_vert,fragmentShader:lt.meshlambert_frag},phong:{uniforms:An([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:lt.meshphong_vert,fragmentShader:lt.meshphong_frag},standard:{uniforms:An([we.common,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.roughnessmap,we.metalnessmap,we.fog,we.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag},toon:{uniforms:An([we.common,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.gradientmap,we.fog,we.lights,{emissive:{value:new Le(0)}}]),vertexShader:lt.meshtoon_vert,fragmentShader:lt.meshtoon_frag},matcap:{uniforms:An([we.common,we.bumpmap,we.normalmap,we.displacementmap,we.fog,{matcap:{value:null}}]),vertexShader:lt.meshmatcap_vert,fragmentShader:lt.meshmatcap_frag},points:{uniforms:An([we.points,we.fog]),vertexShader:lt.points_vert,fragmentShader:lt.points_frag},dashed:{uniforms:An([we.common,we.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:lt.linedashed_vert,fragmentShader:lt.linedashed_frag},depth:{uniforms:An([we.common,we.displacementmap]),vertexShader:lt.depth_vert,fragmentShader:lt.depth_frag},normal:{uniforms:An([we.common,we.bumpmap,we.normalmap,we.displacementmap,{opacity:{value:1}}]),vertexShader:lt.meshnormal_vert,fragmentShader:lt.meshnormal_frag},sprite:{uniforms:An([we.sprite,we.fog]),vertexShader:lt.sprite_vert,fragmentShader:lt.sprite_frag},background:{uniforms:{uvTransform:{value:new gt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:lt.background_vert,fragmentShader:lt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:lt.backgroundCube_vert,fragmentShader:lt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:lt.cube_vert,fragmentShader:lt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:lt.equirect_vert,fragmentShader:lt.equirect_frag},distanceRGBA:{uniforms:An([we.common,we.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:lt.distanceRGBA_vert,fragmentShader:lt.distanceRGBA_frag},shadow:{uniforms:An([we.lights,we.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:lt.shadow_vert,fragmentShader:lt.shadow_frag}};_i.physical={uniforms:An([_i.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new gt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new gt},clearcoatNormalScale:{value:new de(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new gt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new gt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new gt},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new gt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new gt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new gt},transmissionSamplerSize:{value:new de},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new gt},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new gt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new gt}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag};const cc={r:0,b:0,g:0};function DE(r,e,t,n,i,s,l){const c=new Le(0);let u=s===!0?0:1,h,d,p=null,m=0,_=null;function y(M,v){let w=!1,E=v.isScene===!0?v.background:null;switch(E&&E.isTexture&&(E=(v.backgroundBlurriness>0?t:e).get(E)),E===null?S(c,u):E&&E.isColor&&(S(E,1),w=!0),r.xr.getEnvironmentBlendMode()){case"opaque":w=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,l),w=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,l),w=!0;break}(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),E&&(E.isCubeTexture||E.mapping===_o)?(d===void 0&&(d=new fn(new Pr(1,1,1),new Ui({name:"BackgroundCubeMaterial",uniforms:po(_i.backgroundCube.uniforms),vertexShader:_i.backgroundCube.vertexShader,fragmentShader:_i.backgroundCube.fragmentShader,side:bn,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(C,N,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=E,d.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,d.material.toneMapped=E.colorSpace!==ot,(p!==E||m!==E.version||_!==r.toneMapping)&&(d.material.needsUpdate=!0,p=E,m=E.version,_=r.toneMapping),d.layers.enableAll(),M.unshift(d,d.geometry,d.material,0,0,null)):E&&E.isTexture&&(h===void 0&&(h=new fn(new vo(2,2),new Ui({name:"BackgroundMaterial",uniforms:po(_i.background.uniforms),vertexShader:_i.background.vertexShader,fragmentShader:_i.background.fragmentShader,side:er,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=E,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.toneMapped=E.colorSpace!==ot,E.matrixAutoUpdate===!0&&E.updateMatrix(),h.material.uniforms.uvTransform.value.copy(E.matrix),(p!==E||m!==E.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,p=E,m=E.version,_=r.toneMapping),h.layers.enableAll(),M.unshift(h,h.geometry,h.material,0,0,null))}function S(M,v){M.getRGB(cc,r_(r)),n.buffers.color.setClear(cc.r,cc.g,cc.b,v,l)}return{getClearColor:function(){return c},setClearColor:function(M,v=1){c.set(M),u=v,S(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(M){u=M,S(c,u)},render:y}}function NE(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=M(null);let h=u,d=!1;function p(Y,$,ue,ae,k){let J=!1;if(l){const q=S(ae,ue,$);h!==q&&(h=q,_(h.object)),J=v(Y,ae,ue,k),J&&w(Y,ae,ue,k)}else{const q=$.wireframe===!0;(h.geometry!==ae.id||h.program!==ue.id||h.wireframe!==q)&&(h.geometry=ae.id,h.program=ue.id,h.wireframe=q,J=!0)}k!==null&&t.update(k,r.ELEMENT_ARRAY_BUFFER),(J||d)&&(d=!1,O(Y,$,ue,ae),k!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(k).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function _(Y){return n.isWebGL2?r.bindVertexArray(Y):s.bindVertexArrayOES(Y)}function y(Y){return n.isWebGL2?r.deleteVertexArray(Y):s.deleteVertexArrayOES(Y)}function S(Y,$,ue){const ae=ue.wireframe===!0;let k=c[Y.id];k===void 0&&(k={},c[Y.id]=k);let J=k[$.id];J===void 0&&(J={},k[$.id]=J);let q=J[ae];return q===void 0&&(q=M(m()),J[ae]=q),q}function M(Y){const $=[],ue=[],ae=[];for(let k=0;k<i;k++)$[k]=0,ue[k]=0,ae[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:$,enabledAttributes:ue,attributeDivisors:ae,object:Y,attributes:{},index:null}}function v(Y,$,ue,ae){const k=h.attributes,J=$.attributes;let q=0;const he=ue.getAttributes();for(const pe in he)if(he[pe].location>=0){const le=k[pe];let xe=J[pe];if(xe===void 0&&(pe==="instanceMatrix"&&Y.instanceMatrix&&(xe=Y.instanceMatrix),pe==="instanceColor"&&Y.instanceColor&&(xe=Y.instanceColor)),le===void 0||le.attribute!==xe||xe&&le.data!==xe.data)return!0;q++}return h.attributesNum!==q||h.index!==ae}function w(Y,$,ue,ae){const k={},J=$.attributes;let q=0;const he=ue.getAttributes();for(const pe in he)if(he[pe].location>=0){let le=J[pe];le===void 0&&(pe==="instanceMatrix"&&Y.instanceMatrix&&(le=Y.instanceMatrix),pe==="instanceColor"&&Y.instanceColor&&(le=Y.instanceColor));const xe={};xe.attribute=le,le&&le.data&&(xe.data=le.data),k[pe]=xe,q++}h.attributes=k,h.attributesNum=q,h.index=ae}function E(){const Y=h.newAttributes;for(let $=0,ue=Y.length;$<ue;$++)Y[$]=0}function b(Y){R(Y,0)}function R(Y,$){const ue=h.newAttributes,ae=h.enabledAttributes,k=h.attributeDivisors;ue[Y]=1,ae[Y]===0&&(r.enableVertexAttribArray(Y),ae[Y]=1),k[Y]!==$&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](Y,$),k[Y]=$)}function C(){const Y=h.newAttributes,$=h.enabledAttributes;for(let ue=0,ae=$.length;ue<ae;ue++)$[ue]!==Y[ue]&&(r.disableVertexAttribArray(ue),$[ue]=0)}function N(Y,$,ue,ae,k,J){n.isWebGL2===!0&&(ue===r.INT||ue===r.UNSIGNED_INT)?r.vertexAttribIPointer(Y,$,ue,k,J):r.vertexAttribPointer(Y,$,ue,ae,k,J)}function O(Y,$,ue,ae){if(n.isWebGL2===!1&&(Y.isInstancedMesh||ae.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;E();const k=ae.attributes,J=ue.getAttributes(),q=$.defaultAttributeValues;for(const he in J){const pe=J[he];if(pe.location>=0){let Z=k[he];if(Z===void 0&&(he==="instanceMatrix"&&Y.instanceMatrix&&(Z=Y.instanceMatrix),he==="instanceColor"&&Y.instanceColor&&(Z=Y.instanceColor)),Z!==void 0){const le=Z.normalized,xe=Z.itemSize,Se=t.get(Z);if(Se===void 0)continue;const B=Se.buffer,Qe=Se.type,je=Se.bytesPerElement;if(Z.isInterleavedBufferAttribute){const ye=Z.data,Ce=ye.stride,fe=Z.offset;if(ye.isInstancedInterleavedBuffer){for(let ne=0;ne<pe.locationSize;ne++)R(pe.location+ne,ye.meshPerAttribute);Y.isInstancedMesh!==!0&&ae._maxInstanceCount===void 0&&(ae._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let ne=0;ne<pe.locationSize;ne++)b(pe.location+ne);r.bindBuffer(r.ARRAY_BUFFER,B);for(let ne=0;ne<pe.locationSize;ne++)N(pe.location+ne,xe/pe.locationSize,Qe,le,Ce*je,(fe+xe/pe.locationSize*ne)*je)}else{if(Z.isInstancedBufferAttribute){for(let ye=0;ye<pe.locationSize;ye++)R(pe.location+ye,Z.meshPerAttribute);Y.isInstancedMesh!==!0&&ae._maxInstanceCount===void 0&&(ae._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let ye=0;ye<pe.locationSize;ye++)b(pe.location+ye);r.bindBuffer(r.ARRAY_BUFFER,B);for(let ye=0;ye<pe.locationSize;ye++)N(pe.location+ye,xe/pe.locationSize,Qe,le,xe*je,xe/pe.locationSize*ye*je)}}else if(q!==void 0){const le=q[he];if(le!==void 0)switch(le.length){case 2:r.vertexAttrib2fv(pe.location,le);break;case 3:r.vertexAttrib3fv(pe.location,le);break;case 4:r.vertexAttrib4fv(pe.location,le);break;default:r.vertexAttrib1fv(pe.location,le)}}}}C()}function A(){K();for(const Y in c){const $=c[Y];for(const ue in $){const ae=$[ue];for(const k in ae)y(ae[k].object),delete ae[k];delete $[ue]}delete c[Y]}}function L(Y){if(c[Y.id]===void 0)return;const $=c[Y.id];for(const ue in $){const ae=$[ue];for(const k in ae)y(ae[k].object),delete ae[k];delete $[ue]}delete c[Y.id]}function z(Y){for(const $ in c){const ue=c[$];if(ue[Y.id]===void 0)continue;const ae=ue[Y.id];for(const k in ae)y(ae[k].object),delete ae[k];delete ue[Y.id]}}function K(){V(),d=!0,h!==u&&(h=u,_(h.object))}function V(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:K,resetDefaultState:V,dispose:A,releaseStatesOfGeometry:L,releaseStatesOfProgram:z,initAttributes:E,enableAttribute:b,disableUnusedAttributes:C}}function FE(r,e,t,n){const i=n.isWebGL2;let s;function l(h){s=h}function c(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function u(h,d,p){if(p===0)return;let m,_;if(i)m=r,_="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[_](s,h,d,p),t.update(d,s,p)}this.setMode=l,this.render=c,this.renderInstances=u}function OE(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(N){if(N==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";N="mediump"}return N==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),S=r.getParameter(r.MAX_VERTEX_ATTRIBS),M=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),v=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),E=m>0,b=l||e.has("OES_texture_float"),R=E&&b,C=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:y,maxAttributes:S,maxVertexUniforms:M,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:E,floatFragmentTextures:b,floatVertexTextures:R,maxSamples:C}}function zE(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new yr,c=new gt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const _=p.length!==0||m||n!==0||i;return i=m,n=p.length,_},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,_){const y=p.clippingPlanes,S=p.clipIntersection,M=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!M)s?d(null):h();else{const w=s?0:n,E=w*4;let b=v.clippingState||null;u.value=b,b=d(y,m,E,_);for(let R=0;R!==E;++R)b[R]=t[R];v.clippingState=b,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,_,y){const S=p!==null?p.length:0;let M=null;if(S!==0){if(M=u.value,y!==!0||M===null){const v=_+S*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(M===null||M.length<v)&&(M=new Float32Array(v));for(let E=0,b=_;E!==S;++E,b+=4)l.copy(p[E]).applyMatrix4(w,c),l.normal.toArray(M,b),M[b+3]=l.constant}u.value=M,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,M}}function BE(r){let e=new WeakMap;function t(l,c){return c===ha?l.mapping=wr:c===fa&&(l.mapping=Tr),l}function n(l){if(l&&l.isTexture&&l.isRenderTargetTexture===!1){const c=l.mapping;if(c===ha||c===fa)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new a_(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Da extends Ia{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const so=4,Pm=[.125,.215,.35,.446,.526,.582],$r=20,Ih=new Da,Lm=new Le;let Uh=null;const Kr=(1+Math.sqrt(5))/2,Ys=1/Kr,Im=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,Kr,Ys),new U(0,Kr,-Ys),new U(Ys,0,Kr),new U(-Ys,0,Kr),new U(Kr,Ys,0),new U(-Kr,Ys,0)];class Uf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Uh=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Nm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Dm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Uh),e.scissorTest=!1,uc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===wr||e.mapping===Tr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Uh=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:qt,minFilter:qt,generateMipmaps:!1,type:ho,format:Nn,colorSpace:yi,depthBuffer:!1},i=Um(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Um(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=kE(s)),this._blurMaterial=HE(s,e,t)}return i}_compileMaterial(e){const t=new fn(this._lodPlanes[0],e);this._renderer.compile(t,Ih)}_sceneToCubeUV(e,t,n,i){const c=new ln(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(Lm),d.toneMapping=vi,d.autoClear=!1;const _=new Cr({name:"PMREM.Background",side:bn,depthWrite:!1,depthTest:!1}),y=new fn(new Pr,_);let S=!1;const M=e.background;M?M.isColor&&(_.color.copy(M),e.background=null,S=!0):(_.color.copy(Lm),S=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):w===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const E=this._cubeSize;uc(i,w*E,v>2?E:0,E,E),d.setRenderTarget(i),S&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=M}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===wr||e.mapping===Tr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Nm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Dm());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new fn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;uc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,Ih)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=Im[(i-1)%Im.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new fn(this._lodPlanes[i],h),m=h.uniforms,_=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*$r-1),S=s/y,M=isFinite(s)?1+Math.floor(d*S):$r;M>$r&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${M} samples when the maximum is set to ${$r}`);const v=[];let w=0;for(let N=0;N<$r;++N){const O=N/S,A=Math.exp(-O*O/2);v.push(A),N===0?w+=A:N<M&&(w+=2*A)}for(let N=0;N<v.length;N++)v[N]=v[N]/w;m.envMap.value=e.texture,m.samples.value=M,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:E}=this;m.dTheta.value=y,m.mipInt.value=E-n;const b=this._sizeLods[i],R=3*b*(i>E-so?i-E+so:0),C=4*(this._cubeSize-b);uc(t,R,C,3*b,2*b),u.setRenderTarget(t),u.render(p,Ih)}}function kE(r){const e=[],t=[],n=[];let i=r;const s=r-so+1+Pm.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-so?u=Pm[l-r+so-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],_=6,y=6,S=3,M=2,v=1,w=new Float32Array(S*y*_),E=new Float32Array(M*y*_),b=new Float32Array(v*y*_);for(let C=0;C<_;C++){const N=C%3*2/3-1,O=C>2?0:-1,A=[N,O,0,N+2/3,O,0,N+2/3,O+1,0,N,O,0,N+2/3,O+1,0,N,O+1,0];w.set(A,S*y*C),E.set(m,M*y*C);const L=[C,C,C,C,C,C];b.set(L,v*y*C)}const R=new dt;R.setAttribute("position",new It(w,S)),R.setAttribute("uv",new It(E,M)),R.setAttribute("faceIndex",new It(b,v)),e.push(R),i>so&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Um(r,e,t){const n=new xi(r,e,t);return n.texture.mapping=_o,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function uc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function HE(r,e,t){const n=new Float32Array($r),i=new U(0,1,0);return new Ui({name:"SphericalGaussianBlur",defines:{n:$r,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:id(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function Dm(){return new Ui({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:id(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function Nm(){return new Ui({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:id(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function id(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function GE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ha||u===fa,d=u===wr||u===Tr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new Uf(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new Uf(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function VE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function WE(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);m.removeEventListener("dispose",l),delete i[m.id];const _=s.get(m);_&&(e.remove(_),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const _=p.morphAttributes;for(const y in _){const S=_[y];for(let M=0,v=S.length;M<v;M++)e.update(S[M],r.ARRAY_BUFFER)}}function h(p){const m=[],_=p.index,y=p.attributes.position;let S=0;if(_!==null){const w=_.array;S=_.version;for(let E=0,b=w.length;E<b;E+=3){const R=w[E+0],C=w[E+1],N=w[E+2];m.push(R,C,C,N,N,R)}}else{const w=y.array;S=y.version;for(let E=0,b=w.length/3-1;E<b;E+=3){const R=E+0,C=E+1,N=E+2;m.push(R,C,C,N,N,R)}}const M=new(n_(m)?nd:td)(m,1);M.version=S;const v=s.get(p);v&&e.remove(v),s.set(p,M)}function d(p){const m=s.get(p);if(m){const _=p.index;_!==null&&m.version<_.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function XE(r,e,t,n){const i=n.isWebGL2;let s;function l(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function d(m,_){r.drawElements(s,_,c,m*u),t.update(_,s,1)}function p(m,_,y){if(y===0)return;let S,M;if(i)S=r,M="drawElementsInstanced";else if(S=e.get("ANGLE_instanced_arrays"),M="drawElementsInstancedANGLE",S===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}S[M](s,_,c,m*u,y),t.update(_,s,y)}this.setMode=l,this.setIndex=h,this.render=d,this.renderInstances=p}function qE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function YE(r,e){return r[0]-e[0]}function ZE(r,e){return Math.abs(e[1])-Math.abs(r[1])}function JE(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new Ct,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,y=_!==void 0?_.length:0;let S=s.get(d);if(S===void 0||S.count!==y){let Y=function(){K.dispose(),s.delete(d),d.removeEventListener("dispose",Y)};S!==void 0&&S.texture.dispose();const w=d.morphAttributes.position!==void 0,E=d.morphAttributes.normal!==void 0,b=d.morphAttributes.color!==void 0,R=d.morphAttributes.position||[],C=d.morphAttributes.normal||[],N=d.morphAttributes.color||[];let O=0;w===!0&&(O=1),E===!0&&(O=2),b===!0&&(O=3);let A=d.attributes.position.count*O,L=1;A>e.maxTextureSize&&(L=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const z=new Float32Array(A*L*4*y),K=new Kc(z,A,L,y);K.type=Qi,K.needsUpdate=!0;const V=O*4;for(let $=0;$<y;$++){const ue=R[$],ae=C[$],k=N[$],J=A*L*4*$;for(let q=0;q<ue.count;q++){const he=q*V;w===!0&&(l.fromBufferAttribute(ue,q),z[J+he+0]=l.x,z[J+he+1]=l.y,z[J+he+2]=l.z,z[J+he+3]=0),E===!0&&(l.fromBufferAttribute(ae,q),z[J+he+4]=l.x,z[J+he+5]=l.y,z[J+he+6]=l.z,z[J+he+7]=0),b===!0&&(l.fromBufferAttribute(k,q),z[J+he+8]=l.x,z[J+he+9]=l.y,z[J+he+10]=l.z,z[J+he+11]=k.itemSize===4?l.w:1)}}S={count:y,texture:K,size:new de(A,L)},s.set(d,S),d.addEventListener("dispose",Y)}let M=0;for(let w=0;w<m.length;w++)M+=m[w];const v=d.morphTargetsRelative?1:1-M;p.getUniforms().setValue(r,"morphTargetBaseInfluence",v),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",S.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",S.size)}else{const _=m===void 0?0:m.length;let y=n[d.id];if(y===void 0||y.length!==_){y=[];for(let E=0;E<_;E++)y[E]=[E,0];n[d.id]=y}for(let E=0;E<_;E++){const b=y[E];b[0]=E,b[1]=m[E]}y.sort(ZE);for(let E=0;E<8;E++)E<_&&y[E][1]?(c[E][0]=y[E][0],c[E][1]=y[E][1]):(c[E][0]=Number.MAX_SAFE_INTEGER,c[E][1]=0);c.sort(YE);const S=d.morphAttributes.position,M=d.morphAttributes.normal;let v=0;for(let E=0;E<8;E++){const b=c[E],R=b[0],C=b[1];R!==Number.MAX_SAFE_INTEGER&&C?(S&&d.getAttribute("morphTarget"+E)!==S[R]&&d.setAttribute("morphTarget"+E,S[R]),M&&d.getAttribute("morphNormal"+E)!==M[R]&&d.setAttribute("morphNormal"+E,M[R]),i[E]=C,v+=C):(S&&d.hasAttribute("morphTarget"+E)===!0&&d.deleteAttribute("morphTarget"+E),M&&d.hasAttribute("morphNormal"+E)===!0&&d.deleteAttribute("morphNormal"+E),i[E]=0)}const w=d.morphTargetsRelative?1:1-v;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function jE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);return i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER)),p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}const c_=new Yt,u_=new Kc,h_=new ed,f_=new Ua,Fm=[],Om=[],zm=new Float32Array(16),Bm=new Float32Array(9),km=new Float32Array(4);function yo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Fm[i];if(s===void 0&&(s=new Float32Array(i),Fm[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function en(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function tn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function $c(r,e){let t=Om[e];t===void 0&&(t=new Int32Array(e),Om[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function KE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function QE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(en(t,e))return;r.uniform2fv(this.addr,e),tn(t,e)}}function $E(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(en(t,e))return;r.uniform3fv(this.addr,e),tn(t,e)}}function e1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(en(t,e))return;r.uniform4fv(this.addr,e),tn(t,e)}}function t1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;km.set(n),r.uniformMatrix2fv(this.addr,!1,km),tn(t,n)}}function n1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;Bm.set(n),r.uniformMatrix3fv(this.addr,!1,Bm),tn(t,n)}}function i1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;zm.set(n),r.uniformMatrix4fv(this.addr,!1,zm),tn(t,n)}}function r1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function s1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(en(t,e))return;r.uniform2iv(this.addr,e),tn(t,e)}}function o1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(en(t,e))return;r.uniform3iv(this.addr,e),tn(t,e)}}function a1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(en(t,e))return;r.uniform4iv(this.addr,e),tn(t,e)}}function l1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function c1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(en(t,e))return;r.uniform2uiv(this.addr,e),tn(t,e)}}function u1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(en(t,e))return;r.uniform3uiv(this.addr,e),tn(t,e)}}function h1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(en(t,e))return;r.uniform4uiv(this.addr,e),tn(t,e)}}function f1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||c_,i)}function d1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||h_,i)}function p1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||f_,i)}function m1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||u_,i)}function g1(r){switch(r){case 5126:return KE;case 35664:return QE;case 35665:return $E;case 35666:return e1;case 35674:return t1;case 35675:return n1;case 35676:return i1;case 5124:case 35670:return r1;case 35667:case 35671:return s1;case 35668:case 35672:return o1;case 35669:case 35673:return a1;case 5125:return l1;case 36294:return c1;case 36295:return u1;case 36296:return h1;case 35678:case 36198:case 36298:case 36306:case 35682:return f1;case 35679:case 36299:case 36307:return d1;case 35680:case 36300:case 36308:case 36293:return p1;case 36289:case 36303:case 36311:case 36292:return m1}}function _1(r,e){r.uniform1fv(this.addr,e)}function v1(r,e){const t=yo(e,this.size,2);r.uniform2fv(this.addr,t)}function y1(r,e){const t=yo(e,this.size,3);r.uniform3fv(this.addr,t)}function x1(r,e){const t=yo(e,this.size,4);r.uniform4fv(this.addr,t)}function M1(r,e){const t=yo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function S1(r,e){const t=yo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function E1(r,e){const t=yo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function w1(r,e){r.uniform1iv(this.addr,e)}function T1(r,e){r.uniform2iv(this.addr,e)}function A1(r,e){r.uniform3iv(this.addr,e)}function b1(r,e){r.uniform4iv(this.addr,e)}function R1(r,e){r.uniform1uiv(this.addr,e)}function C1(r,e){r.uniform2uiv(this.addr,e)}function P1(r,e){r.uniform3uiv(this.addr,e)}function L1(r,e){r.uniform4uiv(this.addr,e)}function I1(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);en(n,s)||(r.uniform1iv(this.addr,s),tn(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||c_,s[l])}function U1(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);en(n,s)||(r.uniform1iv(this.addr,s),tn(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||h_,s[l])}function D1(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);en(n,s)||(r.uniform1iv(this.addr,s),tn(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||f_,s[l])}function N1(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);en(n,s)||(r.uniform1iv(this.addr,s),tn(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||u_,s[l])}function F1(r){switch(r){case 5126:return _1;case 35664:return v1;case 35665:return y1;case 35666:return x1;case 35674:return M1;case 35675:return S1;case 35676:return E1;case 5124:case 35670:return w1;case 35667:case 35671:return T1;case 35668:case 35672:return A1;case 35669:case 35673:return b1;case 5125:return R1;case 36294:return C1;case 36295:return P1;case 36296:return L1;case 35678:case 36198:case 36298:case 36306:case 35682:return I1;case 35679:case 36299:case 36307:return U1;case 35680:case 36300:case 36308:case 36293:return D1;case 36289:case 36303:case 36311:case 36292:return N1}}class O1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=g1(t.type)}}class z1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=F1(t.type)}}class B1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const Dh=/(\w+)(\])?(\[|\.)?/g;function Hm(r,e){r.seq.push(e),r.map[e.id]=e}function k1(r,e,t){const n=r.name,i=n.length;for(Dh.lastIndex=0;;){const s=Dh.exec(n),l=Dh.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){Hm(t,h===void 0?new O1(c,r,e):new z1(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new B1(c),Hm(t,p)),t=p}}}class Hc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);k1(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function Gm(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let H1=0;function G1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function V1(r){switch(r){case yi:return["Linear","( value )"];case ot:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),["Linear","( value )"]}}function Vm(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+G1(r.getShaderSource(e),l)}else return i}function W1(r,e){const t=V1(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function X1(r,e){let t;switch(e){case R0:t="Linear";break;case C0:t="Reinhard";break;case P0:t="OptimizedCineon";break;case qf:t="ACESFilmic";break;case L0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function q1(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ra).join(`
`)}function Y1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Z1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function ra(r){return r!==""}function Wm(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Xm(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const J1=/^[ \t]*#include +<([\w\d./]+)>/gm;function Df(r){return r.replace(J1,j1)}function j1(r,e){const t=lt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Df(t)}const K1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function qm(r){return r.replace(K1,Q1)}function Q1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Ym(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function $1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Zc?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===sa?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===mi&&(e="SHADOWMAP_TYPE_VSM"),e}function ew(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case wr:case Tr:e="ENVMAP_TYPE_CUBE";break;case _o:e="ENVMAP_TYPE_CUBE_UV";break}return e}function tw(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Tr:e="ENVMAP_MODE_REFRACTION";break}return e}function nw(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ca:e="ENVMAP_BLENDING_MULTIPLY";break;case A0:e="ENVMAP_BLENDING_MIX";break;case b0:e="ENVMAP_BLENDING_ADD";break}return e}function iw(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function rw(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=$1(t),h=ew(t),d=tw(t),p=nw(t),m=iw(t),_=t.isWebGL2?"":q1(t),y=Y1(s),S=i.createProgram();let M,v,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(M=[y].filter(ra).join(`
`),M.length>0&&(M+=`
`),v=[_,y].filter(ra).join(`
`),v.length>0&&(v+=`
`)):(M=[Ym(t),"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ra).join(`
`),v=[_,Ym(t),"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==vi?"#define TONE_MAPPING":"",t.toneMapping!==vi?lt.tonemapping_pars_fragment:"",t.toneMapping!==vi?X1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",lt.encodings_pars_fragment,W1("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ra).join(`
`)),l=Df(l),l=Wm(l,t),l=Xm(l,t),c=Df(c),c=Wm(c,t),c=Xm(c,t),l=qm(l),c=qm(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,M=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+M,v=["#define varying in",t.glslVersion===Lf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Lf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const E=w+M+l,b=w+v+c,R=Gm(i,i.VERTEX_SHADER,E),C=Gm(i,i.FRAGMENT_SHADER,b);if(i.attachShader(S,R),i.attachShader(S,C),t.index0AttributeName!==void 0?i.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(S,0,"position"),i.linkProgram(S),r.debug.checkShaderErrors){const A=i.getProgramInfoLog(S).trim(),L=i.getShaderInfoLog(R).trim(),z=i.getShaderInfoLog(C).trim();let K=!0,V=!0;if(i.getProgramParameter(S,i.LINK_STATUS)===!1)if(K=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,S,R,C);else{const Y=Vm(i,R,"vertex"),$=Vm(i,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(S,i.VALIDATE_STATUS)+`

Program Info Log: `+A+`
`+Y+`
`+$)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(L===""||z==="")&&(V=!1);V&&(this.diagnostics={runnable:K,programLog:A,vertexShader:{log:L,prefix:M},fragmentShader:{log:z,prefix:v}})}i.deleteShader(R),i.deleteShader(C);let N;this.getUniforms=function(){return N===void 0&&(N=new Hc(i,S)),N};let O;return this.getAttributes=function(){return O===void 0&&(O=Z1(i,S)),O},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(S),this.program=void 0},this.name=t.shaderName,this.id=H1++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=R,this.fragmentShader=C,this}let sw=0;class ow{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new aw(e),t.set(e,n)),n}}class aw{constructor(e){this.id=sw++,this.code=e,this.usedTimes=0}}function lw(r,e,t,n,i,s,l){const c=new ls,u=new ow,h=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let _=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(A){return A===1?"uv1":A===2?"uv2":A===3?"uv3":"uv"}function M(A,L,z,K,V){const Y=K.fog,$=V.geometry,ue=A.isMeshStandardMaterial?K.environment:null,ae=(A.isMeshStandardMaterial?t:e).get(A.envMap||ue),k=ae&&ae.mapping===_o?ae.image.height:null,J=y[A.type];A.precision!==null&&(_=i.getMaxPrecision(A.precision),_!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",_,"instead."));const q=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,he=q!==void 0?q.length:0;let pe=0;$.morphAttributes.position!==void 0&&(pe=1),$.morphAttributes.normal!==void 0&&(pe=2),$.morphAttributes.color!==void 0&&(pe=3);let Z,le,xe,Se;if(J){const Tt=_i[J];Z=Tt.vertexShader,le=Tt.fragmentShader}else Z=A.vertexShader,le=A.fragmentShader,u.update(A),xe=u.getVertexShaderID(A),Se=u.getFragmentShaderID(A);const B=r.getRenderTarget(),Qe=V.isInstancedMesh===!0,je=!!A.map,ye=!!A.matcap,Ce=!!ae,fe=!!A.aoMap,ne=!!A.lightMap,me=!!A.bumpMap,Ue=!!A.normalMap,Te=!!A.displacementMap,qe=!!A.emissiveMap,Ye=!!A.metalnessMap,Ge=!!A.roughnessMap,et=A.clearcoat>0,vt=A.iridescence>0,F=A.sheen>0,P=A.transmission>0,ee=et&&!!A.clearcoatMap,ge=et&&!!A.clearcoatNormalMap,ve=et&&!!A.clearcoatRoughnessMap,Ae=vt&&!!A.iridescenceMap,Ke=vt&&!!A.iridescenceThicknessMap,Ie=F&&!!A.sheenColorMap,oe=F&&!!A.sheenRoughnessMap,Oe=!!A.specularMap,Ve=!!A.specularColorMap,Ze=!!A.specularIntensityMap,De=P&&!!A.transmissionMap,ke=P&&!!A.thicknessMap,_t=!!A.gradientMap,wt=!!A.alphaMap,Ot=A.alphaTest>0,H=!!A.extensions,re=!!$.attributes.uv1,_e=!!$.attributes.uv2,Pe=!!$.attributes.uv3;return{isWebGL2:d,shaderID:J,shaderName:A.type,vertexShader:Z,fragmentShader:le,defines:A.defines,customVertexShaderID:xe,customFragmentShaderID:Se,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:_,instancing:Qe,instancingColor:Qe&&V.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:B===null?r.outputColorSpace:B.isXRRenderTarget===!0?B.texture.colorSpace:yi,map:je,matcap:ye,envMap:Ce,envMapMode:Ce&&ae.mapping,envMapCubeUVHeight:k,aoMap:fe,lightMap:ne,bumpMap:me,normalMap:Ue,displacementMap:m&&Te,emissiveMap:qe,normalMapObjectSpace:Ue&&A.normalMapType===Q0,normalMapTangentSpace:Ue&&A.normalMapType===Rr,metalnessMap:Ye,roughnessMap:Ge,clearcoat:et,clearcoatMap:ee,clearcoatNormalMap:ge,clearcoatRoughnessMap:ve,iridescence:vt,iridescenceMap:Ae,iridescenceThicknessMap:Ke,sheen:F,sheenColorMap:Ie,sheenRoughnessMap:oe,specularMap:Oe,specularColorMap:Ve,specularIntensityMap:Ze,transmission:P,transmissionMap:De,thicknessMap:ke,gradientMap:_t,opaque:A.transparent===!1&&A.blending===rs,alphaMap:wt,alphaTest:Ot,combine:A.combine,mapUv:je&&S(A.map.channel),aoMapUv:fe&&S(A.aoMap.channel),lightMapUv:ne&&S(A.lightMap.channel),bumpMapUv:me&&S(A.bumpMap.channel),normalMapUv:Ue&&S(A.normalMap.channel),displacementMapUv:Te&&S(A.displacementMap.channel),emissiveMapUv:qe&&S(A.emissiveMap.channel),metalnessMapUv:Ye&&S(A.metalnessMap.channel),roughnessMapUv:Ge&&S(A.roughnessMap.channel),clearcoatMapUv:ee&&S(A.clearcoatMap.channel),clearcoatNormalMapUv:ge&&S(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ve&&S(A.clearcoatRoughnessMap.channel),iridescenceMapUv:Ae&&S(A.iridescenceMap.channel),iridescenceThicknessMapUv:Ke&&S(A.iridescenceThicknessMap.channel),sheenColorMapUv:Ie&&S(A.sheenColorMap.channel),sheenRoughnessMapUv:oe&&S(A.sheenRoughnessMap.channel),specularMapUv:Oe&&S(A.specularMap.channel),specularColorMapUv:Ve&&S(A.specularColorMap.channel),specularIntensityMapUv:Ze&&S(A.specularIntensityMap.channel),transmissionMapUv:De&&S(A.transmissionMap.channel),thicknessMapUv:ke&&S(A.thicknessMap.channel),alphaMapUv:wt&&S(A.alphaMap.channel),vertexTangents:Ue&&!!$.attributes.tangent,vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,vertexUv1s:re,vertexUv2s:_e,vertexUv3s:Pe,pointsUvs:V.isPoints===!0&&!!$.attributes.uv&&(je||wt),fog:!!Y,useFog:A.fog===!0,fogExp2:Y&&Y.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:V.isSkinnedMesh===!0,morphTargets:$.morphAttributes.position!==void 0,morphNormals:$.morphAttributes.normal!==void 0,morphColors:$.morphAttributes.color!==void 0,morphTargetsCount:he,morphTextureStride:pe,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:A.dithering,shadowMapEnabled:r.shadowMap.enabled&&z.length>0,shadowMapType:r.shadowMap.type,toneMapping:A.toneMapped?r.toneMapping:vi,useLegacyLights:r.useLegacyLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Li,flipSided:A.side===bn,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:H&&A.extensions.derivatives===!0,extensionFragDepth:H&&A.extensions.fragDepth===!0,extensionDrawBuffers:H&&A.extensions.drawBuffers===!0,extensionShaderTextureLOD:H&&A.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function v(A){const L=[];if(A.shaderID?L.push(A.shaderID):(L.push(A.customVertexShaderID),L.push(A.customFragmentShaderID)),A.defines!==void 0)for(const z in A.defines)L.push(z),L.push(A.defines[z]);return A.isRawShaderMaterial===!1&&(w(L,A),E(L,A),L.push(r.outputColorSpace)),L.push(A.customProgramCacheKey),L.join()}function w(A,L){A.push(L.precision),A.push(L.outputColorSpace),A.push(L.envMapMode),A.push(L.envMapCubeUVHeight),A.push(L.mapUv),A.push(L.alphaMapUv),A.push(L.lightMapUv),A.push(L.aoMapUv),A.push(L.bumpMapUv),A.push(L.normalMapUv),A.push(L.displacementMapUv),A.push(L.emissiveMapUv),A.push(L.metalnessMapUv),A.push(L.roughnessMapUv),A.push(L.clearcoatMapUv),A.push(L.clearcoatNormalMapUv),A.push(L.clearcoatRoughnessMapUv),A.push(L.iridescenceMapUv),A.push(L.iridescenceThicknessMapUv),A.push(L.sheenColorMapUv),A.push(L.sheenRoughnessMapUv),A.push(L.specularMapUv),A.push(L.specularColorMapUv),A.push(L.specularIntensityMapUv),A.push(L.transmissionMapUv),A.push(L.thicknessMapUv),A.push(L.combine),A.push(L.fogExp2),A.push(L.sizeAttenuation),A.push(L.morphTargetsCount),A.push(L.morphAttributeCount),A.push(L.numDirLights),A.push(L.numPointLights),A.push(L.numSpotLights),A.push(L.numSpotLightMaps),A.push(L.numHemiLights),A.push(L.numRectAreaLights),A.push(L.numDirLightShadows),A.push(L.numPointLightShadows),A.push(L.numSpotLightShadows),A.push(L.numSpotLightShadowsWithMaps),A.push(L.shadowMapType),A.push(L.toneMapping),A.push(L.numClippingPlanes),A.push(L.numClipIntersection),A.push(L.depthPacking)}function E(A,L){c.disableAll(),L.isWebGL2&&c.enable(0),L.supportsVertexTextures&&c.enable(1),L.instancing&&c.enable(2),L.instancingColor&&c.enable(3),L.matcap&&c.enable(4),L.envMap&&c.enable(5),L.normalMapObjectSpace&&c.enable(6),L.normalMapTangentSpace&&c.enable(7),L.clearcoat&&c.enable(8),L.iridescence&&c.enable(9),L.alphaTest&&c.enable(10),L.vertexColors&&c.enable(11),L.vertexAlphas&&c.enable(12),L.vertexUv1s&&c.enable(13),L.vertexUv2s&&c.enable(14),L.vertexUv3s&&c.enable(15),L.vertexTangents&&c.enable(16),A.push(c.mask),c.disableAll(),L.fog&&c.enable(0),L.useFog&&c.enable(1),L.flatShading&&c.enable(2),L.logarithmicDepthBuffer&&c.enable(3),L.skinning&&c.enable(4),L.morphTargets&&c.enable(5),L.morphNormals&&c.enable(6),L.morphColors&&c.enable(7),L.premultipliedAlpha&&c.enable(8),L.shadowMapEnabled&&c.enable(9),L.useLegacyLights&&c.enable(10),L.doubleSided&&c.enable(11),L.flipSided&&c.enable(12),L.useDepthPacking&&c.enable(13),L.dithering&&c.enable(14),L.transmission&&c.enable(15),L.sheen&&c.enable(16),L.opaque&&c.enable(17),L.pointsUvs&&c.enable(18),A.push(c.mask)}function b(A){const L=y[A.type];let z;if(L){const K=_i[L];z=s_.clone(K.uniforms)}else z=A.uniforms;return z}function R(A,L){let z;for(let K=0,V=h.length;K<V;K++){const Y=h[K];if(Y.cacheKey===L){z=Y,++z.usedTimes;break}}return z===void 0&&(z=new rw(r,L,A,s),h.push(z)),z}function C(A){if(--A.usedTimes===0){const L=h.indexOf(A);h[L]=h[h.length-1],h.pop(),A.destroy()}}function N(A){u.remove(A)}function O(){u.dispose()}return{getParameters:M,getProgramCacheKey:v,getUniforms:b,acquireProgram:R,releaseProgram:C,releaseShaderCache:N,programs:h,dispose:O}}function cw(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function uw(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Zm(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Jm(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,_,y,S,M){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:_,groupOrder:y,renderOrder:p.renderOrder,z:S,group:M},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=_,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=S,v.group=M),e++,v}function c(p,m,_,y,S,M){const v=l(p,m,_,y,S,M);_.transmission>0?n.push(v):_.transparent===!0?i.push(v):t.push(v)}function u(p,m,_,y,S,M){const v=l(p,m,_,y,S,M);_.transmission>0?n.unshift(v):_.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||uw),n.length>1&&n.sort(m||Zm),i.length>1&&i.sort(m||Zm)}function d(){for(let p=e,m=r.length;p<m;p++){const _=r[p];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function hw(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Jm,r.set(n,[l])):i>=s.length?(l=new Jm,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function fw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Le};break;case"SpotLight":t={position:new U,direction:new U,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new U,halfWidth:new U,halfHeight:new U};break}return r[e.id]=t,t}}}function dw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let pw=0;function mw(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function gw(r,e){const t=new fw,n=dw(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)i.probe.push(new U);const s=new U,l=new it,c=new it;function u(d,p){let m=0,_=0,y=0;for(let z=0;z<9;z++)i.probe[z].set(0,0,0);let S=0,M=0,v=0,w=0,E=0,b=0,R=0,C=0,N=0,O=0;d.sort(mw);const A=p===!0?Math.PI:1;for(let z=0,K=d.length;z<K;z++){const V=d[z],Y=V.color,$=V.intensity,ue=V.distance,ae=V.shadow&&V.shadow.map?V.shadow.map.texture:null;if(V.isAmbientLight)m+=Y.r*$*A,_+=Y.g*$*A,y+=Y.b*$*A;else if(V.isLightProbe)for(let k=0;k<9;k++)i.probe[k].addScaledVector(V.sh.coefficients[k],$);else if(V.isDirectionalLight){const k=t.get(V);if(k.color.copy(V.color).multiplyScalar(V.intensity*A),V.castShadow){const J=V.shadow,q=n.get(V);q.shadowBias=J.bias,q.shadowNormalBias=J.normalBias,q.shadowRadius=J.radius,q.shadowMapSize=J.mapSize,i.directionalShadow[S]=q,i.directionalShadowMap[S]=ae,i.directionalShadowMatrix[S]=V.shadow.matrix,b++}i.directional[S]=k,S++}else if(V.isSpotLight){const k=t.get(V);k.position.setFromMatrixPosition(V.matrixWorld),k.color.copy(Y).multiplyScalar($*A),k.distance=ue,k.coneCos=Math.cos(V.angle),k.penumbraCos=Math.cos(V.angle*(1-V.penumbra)),k.decay=V.decay,i.spot[v]=k;const J=V.shadow;if(V.map&&(i.spotLightMap[N]=V.map,N++,J.updateMatrices(V),V.castShadow&&O++),i.spotLightMatrix[v]=J.matrix,V.castShadow){const q=n.get(V);q.shadowBias=J.bias,q.shadowNormalBias=J.normalBias,q.shadowRadius=J.radius,q.shadowMapSize=J.mapSize,i.spotShadow[v]=q,i.spotShadowMap[v]=ae,C++}v++}else if(V.isRectAreaLight){const k=t.get(V);k.color.copy(Y).multiplyScalar($),k.halfWidth.set(V.width*.5,0,0),k.halfHeight.set(0,V.height*.5,0),i.rectArea[w]=k,w++}else if(V.isPointLight){const k=t.get(V);if(k.color.copy(V.color).multiplyScalar(V.intensity*A),k.distance=V.distance,k.decay=V.decay,V.castShadow){const J=V.shadow,q=n.get(V);q.shadowBias=J.bias,q.shadowNormalBias=J.normalBias,q.shadowRadius=J.radius,q.shadowMapSize=J.mapSize,q.shadowCameraNear=J.camera.near,q.shadowCameraFar=J.camera.far,i.pointShadow[M]=q,i.pointShadowMap[M]=ae,i.pointShadowMatrix[M]=V.shadow.matrix,R++}i.point[M]=k,M++}else if(V.isHemisphereLight){const k=t.get(V);k.skyColor.copy(V.color).multiplyScalar($*A),k.groundColor.copy(V.groundColor).multiplyScalar($*A),i.hemi[E]=k,E++}}w>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=we.LTC_FLOAT_1,i.rectAreaLTC2=we.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=we.LTC_HALF_1,i.rectAreaLTC2=we.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=_,i.ambient[2]=y;const L=i.hash;(L.directionalLength!==S||L.pointLength!==M||L.spotLength!==v||L.rectAreaLength!==w||L.hemiLength!==E||L.numDirectionalShadows!==b||L.numPointShadows!==R||L.numSpotShadows!==C||L.numSpotMaps!==N)&&(i.directional.length=S,i.spot.length=v,i.rectArea.length=w,i.point.length=M,i.hemi.length=E,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=C+N-O,i.spotLightMap.length=N,i.numSpotLightShadowsWithMaps=O,L.directionalLength=S,L.pointLength=M,L.spotLength=v,L.rectAreaLength=w,L.hemiLength=E,L.numDirectionalShadows=b,L.numPointShadows=R,L.numSpotShadows=C,L.numSpotMaps=N,i.version=pw++)}function h(d,p){let m=0,_=0,y=0,S=0,M=0;const v=p.matrixWorldInverse;for(let w=0,E=d.length;w<E;w++){const b=d[w];if(b.isDirectionalLight){const R=i.directional[m];R.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),m++}else if(b.isSpotLight){const R=i.spot[y];R.position.setFromMatrixPosition(b.matrixWorld),R.position.applyMatrix4(v),R.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),y++}else if(b.isRectAreaLight){const R=i.rectArea[S];R.position.setFromMatrixPosition(b.matrixWorld),R.position.applyMatrix4(v),c.identity(),l.copy(b.matrixWorld),l.premultiply(v),c.extractRotation(l),R.halfWidth.set(b.width*.5,0,0),R.halfHeight.set(0,b.height*.5,0),R.halfWidth.applyMatrix4(c),R.halfHeight.applyMatrix4(c),S++}else if(b.isPointLight){const R=i.point[_];R.position.setFromMatrixPosition(b.matrixWorld),R.position.applyMatrix4(v),_++}else if(b.isHemisphereLight){const R=i.hemi[M];R.direction.setFromMatrixPosition(b.matrixWorld),R.direction.transformDirection(v),M++}}}return{setup:u,setupView:h,state:i}}function jm(r,e){const t=new gw(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function _w(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new jm(r,e),t.set(s,[u])):l>=c.length?(u=new jm(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class rd extends Mn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=j0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class sd extends Mn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const vw=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,yw=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function xw(r,e,t){let n=new Qc;const i=new de,s=new de,l=new Ct,c=new rd({depthPacking:K0}),u=new sd,h={},d=t.maxTextureSize,p={[er]:bn,[bn]:er,[Li]:Li},m=new Ui({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new de},radius:{value:4}},vertexShader:vw,fragmentShader:yw}),_=m.clone();_.defines.HORIZONTAL_PASS=1;const y=new dt;y.setAttribute("position",new It(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new fn(y,m),M=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Zc;let v=this.type;this.render=function(R,C,N){if(M.enabled===!1||M.autoUpdate===!1&&M.needsUpdate===!1||R.length===0)return;const O=r.getRenderTarget(),A=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),z=r.state;z.setBlending($i),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);const K=v!==mi&&this.type===mi,V=v===mi&&this.type!==mi;for(let Y=0,$=R.length;Y<$;Y++){const ue=R[Y],ae=ue.shadow;if(ae===void 0){console.warn("THREE.WebGLShadowMap:",ue,"has no shadow.");continue}if(ae.autoUpdate===!1&&ae.needsUpdate===!1)continue;i.copy(ae.mapSize);const k=ae.getFrameExtents();if(i.multiply(k),s.copy(ae.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/k.x),i.x=s.x*k.x,ae.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/k.y),i.y=s.y*k.y,ae.mapSize.y=s.y)),ae.map===null||K===!0||V===!0){const q=this.type!==mi?{minFilter:Xt,magFilter:Xt}:{};ae.map!==null&&ae.map.dispose(),ae.map=new xi(i.x,i.y,q),ae.map.texture.name=ue.name+".shadowMap",ae.camera.updateProjectionMatrix()}r.setRenderTarget(ae.map),r.clear();const J=ae.getViewportCount();for(let q=0;q<J;q++){const he=ae.getViewport(q);l.set(s.x*he.x,s.y*he.y,s.x*he.z,s.y*he.w),z.viewport(l),ae.updateMatrices(ue,q),n=ae.getFrustum(),b(C,N,ae.camera,ue,this.type)}ae.isPointLightShadow!==!0&&this.type===mi&&w(ae,N),ae.needsUpdate=!1}v=this.type,M.needsUpdate=!1,r.setRenderTarget(O,A,L)};function w(R,C){const N=e.update(S);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,_.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,_.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new xi(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(C,null,N,m,S,null),_.uniforms.shadow_pass.value=R.mapPass.texture,_.uniforms.resolution.value=R.mapSize,_.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(C,null,N,_,S,null)}function E(R,C,N,O){let A=null;const L=N.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(L!==void 0)A=L;else if(A=N.isPointLight===!0?u:c,r.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const z=A.uuid,K=C.uuid;let V=h[z];V===void 0&&(V={},h[z]=V);let Y=V[K];Y===void 0&&(Y=A.clone(),V[K]=Y),A=Y}if(A.visible=C.visible,A.wireframe=C.wireframe,O===mi?A.side=C.shadowSide!==null?C.shadowSide:C.side:A.side=C.shadowSide!==null?C.shadowSide:p[C.side],A.alphaMap=C.alphaMap,A.alphaTest=C.alphaTest,A.map=C.map,A.clipShadows=C.clipShadows,A.clippingPlanes=C.clippingPlanes,A.clipIntersection=C.clipIntersection,A.displacementMap=C.displacementMap,A.displacementScale=C.displacementScale,A.displacementBias=C.displacementBias,A.wireframeLinewidth=C.wireframeLinewidth,A.linewidth=C.linewidth,N.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const z=r.properties.get(A);z.light=N}return A}function b(R,C,N,O,A){if(R.visible===!1)return;if(R.layers.test(C.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&A===mi)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,R.matrixWorld);const K=e.update(R),V=R.material;if(Array.isArray(V)){const Y=K.groups;for(let $=0,ue=Y.length;$<ue;$++){const ae=Y[$],k=V[ae.materialIndex];if(k&&k.visible){const J=E(R,k,O,A);r.renderBufferDirect(N,null,K,J,R,ae)}}}else if(V.visible){const Y=E(R,V,O,A);r.renderBufferDirect(N,null,K,Y,R,null)}}const z=R.children;for(let K=0,V=z.length;K<V;K++)b(z[K],C,N,O,A)}}function Mw(r,e,t){const n=t.isWebGL2;function i(){let H=!1;const re=new Ct;let _e=null;const Pe=new Ct(0,0,0,0);return{setMask:function(ze){_e!==ze&&!H&&(r.colorMask(ze,ze,ze,ze),_e=ze)},setLocked:function(ze){H=ze},setClear:function(ze,Tt,At,nn,si){si===!0&&(ze*=nn,Tt*=nn,At*=nn),re.set(ze,Tt,At,nn),Pe.equals(re)===!1&&(r.clearColor(ze,Tt,At,nn),Pe.copy(re))},reset:function(){H=!1,_e=null,Pe.set(-1,0,0,0)}}}function s(){let H=!1,re=null,_e=null,Pe=null;return{setTest:function(ze){ze?B(r.DEPTH_TEST):Qe(r.DEPTH_TEST)},setMask:function(ze){re!==ze&&!H&&(r.depthMask(ze),re=ze)},setFunc:function(ze){if(_e!==ze){switch(ze){case y0:r.depthFunc(r.NEVER);break;case x0:r.depthFunc(r.ALWAYS);break;case M0:r.depthFunc(r.LESS);break;case Vc:r.depthFunc(r.LEQUAL);break;case S0:r.depthFunc(r.EQUAL);break;case E0:r.depthFunc(r.GEQUAL);break;case w0:r.depthFunc(r.GREATER);break;case T0:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}_e=ze}},setLocked:function(ze){H=ze},setClear:function(ze){Pe!==ze&&(r.clearDepth(ze),Pe=ze)},reset:function(){H=!1,re=null,_e=null,Pe=null}}}function l(){let H=!1,re=null,_e=null,Pe=null,ze=null,Tt=null,At=null,nn=null,si=null;return{setTest:function(Nt){H||(Nt?B(r.STENCIL_TEST):Qe(r.STENCIL_TEST))},setMask:function(Nt){re!==Nt&&!H&&(r.stencilMask(Nt),re=Nt)},setFunc:function(Nt,Sn,Yn){(_e!==Nt||Pe!==Sn||ze!==Yn)&&(r.stencilFunc(Nt,Sn,Yn),_e=Nt,Pe=Sn,ze=Yn)},setOp:function(Nt,Sn,Yn){(Tt!==Nt||At!==Sn||nn!==Yn)&&(r.stencilOp(Nt,Sn,Yn),Tt=Nt,At=Sn,nn=Yn)},setLocked:function(Nt){H=Nt},setClear:function(Nt){si!==Nt&&(r.clearStencil(Nt),si=Nt)},reset:function(){H=!1,re=null,_e=null,Pe=null,ze=null,Tt=null,At=null,nn=null,si=null}}}const c=new i,u=new s,h=new l,d=new WeakMap,p=new WeakMap;let m={},_={},y=new WeakMap,S=[],M=null,v=!1,w=null,E=null,b=null,R=null,C=null,N=null,O=null,A=!1,L=null,z=null,K=null,V=null,Y=null;const $=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ue=!1,ae=0;const k=r.getParameter(r.VERSION);k.indexOf("WebGL")!==-1?(ae=parseFloat(/^WebGL (\d)/.exec(k)[1]),ue=ae>=1):k.indexOf("OpenGL ES")!==-1&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(k)[1]),ue=ae>=2);let J=null,q={};const he=r.getParameter(r.SCISSOR_BOX),pe=r.getParameter(r.VIEWPORT),Z=new Ct().fromArray(he),le=new Ct().fromArray(pe);function xe(H,re,_e,Pe){const ze=new Uint8Array(4),Tt=r.createTexture();r.bindTexture(H,Tt),r.texParameteri(H,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(H,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let At=0;At<_e;At++)n&&(H===r.TEXTURE_3D||H===r.TEXTURE_2D_ARRAY)?r.texImage3D(re,0,r.RGBA,1,1,Pe,0,r.RGBA,r.UNSIGNED_BYTE,ze):r.texImage2D(re+At,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,ze);return Tt}const Se={};Se[r.TEXTURE_2D]=xe(r.TEXTURE_2D,r.TEXTURE_2D,1),Se[r.TEXTURE_CUBE_MAP]=xe(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Se[r.TEXTURE_2D_ARRAY]=xe(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Se[r.TEXTURE_3D]=xe(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),B(r.DEPTH_TEST),u.setFunc(Vc),Te(!1),qe(tf),B(r.CULL_FACE),me($i);function B(H){m[H]!==!0&&(r.enable(H),m[H]=!0)}function Qe(H){m[H]!==!1&&(r.disable(H),m[H]=!1)}function je(H,re){return _[H]!==re?(r.bindFramebuffer(H,re),_[H]=re,n&&(H===r.DRAW_FRAMEBUFFER&&(_[r.FRAMEBUFFER]=re),H===r.FRAMEBUFFER&&(_[r.DRAW_FRAMEBUFFER]=re)),!0):!1}function ye(H,re){let _e=S,Pe=!1;if(H)if(_e=y.get(re),_e===void 0&&(_e=[],y.set(re,_e)),H.isWebGLMultipleRenderTargets){const ze=H.texture;if(_e.length!==ze.length||_e[0]!==r.COLOR_ATTACHMENT0){for(let Tt=0,At=ze.length;Tt<At;Tt++)_e[Tt]=r.COLOR_ATTACHMENT0+Tt;_e.length=ze.length,Pe=!0}}else _e[0]!==r.COLOR_ATTACHMENT0&&(_e[0]=r.COLOR_ATTACHMENT0,Pe=!0);else _e[0]!==r.BACK&&(_e[0]=r.BACK,Pe=!0);Pe&&(t.isWebGL2?r.drawBuffers(_e):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(_e))}function Ce(H){return M!==H?(r.useProgram(H),M=H,!0):!1}const fe={[Qr]:r.FUNC_ADD,[l0]:r.FUNC_SUBTRACT,[c0]:r.FUNC_REVERSE_SUBTRACT};if(n)fe[of]=r.MIN,fe[af]=r.MAX;else{const H=e.get("EXT_blend_minmax");H!==null&&(fe[of]=H.MIN_EXT,fe[af]=H.MAX_EXT)}const ne={[u0]:r.ZERO,[h0]:r.ONE,[f0]:r.SRC_COLOR,[Wf]:r.SRC_ALPHA,[v0]:r.SRC_ALPHA_SATURATE,[g0]:r.DST_COLOR,[p0]:r.DST_ALPHA,[d0]:r.ONE_MINUS_SRC_COLOR,[Xf]:r.ONE_MINUS_SRC_ALPHA,[_0]:r.ONE_MINUS_DST_COLOR,[m0]:r.ONE_MINUS_DST_ALPHA};function me(H,re,_e,Pe,ze,Tt,At,nn){if(H===$i){v===!0&&(Qe(r.BLEND),v=!1);return}if(v===!1&&(B(r.BLEND),v=!0),H!==a0){if(H!==w||nn!==A){if((E!==Qr||C!==Qr)&&(r.blendEquation(r.FUNC_ADD),E=Qr,C=Qr),nn)switch(H){case rs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case nf:r.blendFunc(r.ONE,r.ONE);break;case rf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case sf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case rs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case nf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case rf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case sf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}b=null,R=null,N=null,O=null,w=H,A=nn}return}ze=ze||re,Tt=Tt||_e,At=At||Pe,(re!==E||ze!==C)&&(r.blendEquationSeparate(fe[re],fe[ze]),E=re,C=ze),(_e!==b||Pe!==R||Tt!==N||At!==O)&&(r.blendFuncSeparate(ne[_e],ne[Pe],ne[Tt],ne[At]),b=_e,R=Pe,N=Tt,O=At),w=H,A=!1}function Ue(H,re){H.side===Li?Qe(r.CULL_FACE):B(r.CULL_FACE);let _e=H.side===bn;re&&(_e=!_e),Te(_e),H.blending===rs&&H.transparent===!1?me($i):me(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),u.setFunc(H.depthFunc),u.setTest(H.depthTest),u.setMask(H.depthWrite),c.setMask(H.colorWrite);const Pe=H.stencilWrite;h.setTest(Pe),Pe&&(h.setMask(H.stencilWriteMask),h.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),h.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),Ge(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?B(r.SAMPLE_ALPHA_TO_COVERAGE):Qe(r.SAMPLE_ALPHA_TO_COVERAGE)}function Te(H){L!==H&&(H?r.frontFace(r.CW):r.frontFace(r.CCW),L=H)}function qe(H){H!==r0?(B(r.CULL_FACE),H!==z&&(H===tf?r.cullFace(r.BACK):H===s0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Qe(r.CULL_FACE),z=H}function Ye(H){H!==K&&(ue&&r.lineWidth(H),K=H)}function Ge(H,re,_e){H?(B(r.POLYGON_OFFSET_FILL),(V!==re||Y!==_e)&&(r.polygonOffset(re,_e),V=re,Y=_e)):Qe(r.POLYGON_OFFSET_FILL)}function et(H){H?B(r.SCISSOR_TEST):Qe(r.SCISSOR_TEST)}function vt(H){H===void 0&&(H=r.TEXTURE0+$-1),J!==H&&(r.activeTexture(H),J=H)}function F(H,re,_e){_e===void 0&&(J===null?_e=r.TEXTURE0+$-1:_e=J);let Pe=q[_e];Pe===void 0&&(Pe={type:void 0,texture:void 0},q[_e]=Pe),(Pe.type!==H||Pe.texture!==re)&&(J!==_e&&(r.activeTexture(_e),J=_e),r.bindTexture(H,re||Se[H]),Pe.type=H,Pe.texture=re)}function P(){const H=q[J];H!==void 0&&H.type!==void 0&&(r.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function ee(){try{r.compressedTexImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ge(){try{r.compressedTexImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ve(){try{r.texSubImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ae(){try{r.texSubImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ke(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ie(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function oe(){try{r.texStorage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Oe(){try{r.texStorage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ve(){try{r.texImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ze(){try{r.texImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function De(H){Z.equals(H)===!1&&(r.scissor(H.x,H.y,H.z,H.w),Z.copy(H))}function ke(H){le.equals(H)===!1&&(r.viewport(H.x,H.y,H.z,H.w),le.copy(H))}function _t(H,re){let _e=p.get(re);_e===void 0&&(_e=new WeakMap,p.set(re,_e));let Pe=_e.get(H);Pe===void 0&&(Pe=r.getUniformBlockIndex(re,H.name),_e.set(H,Pe))}function wt(H,re){const Pe=p.get(re).get(H);d.get(re)!==Pe&&(r.uniformBlockBinding(re,Pe,H.__bindingPointIndex),d.set(re,Pe))}function Ot(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},J=null,q={},_={},y=new WeakMap,S=[],M=null,v=!1,w=null,E=null,b=null,R=null,C=null,N=null,O=null,A=!1,L=null,z=null,K=null,V=null,Y=null,Z.set(0,0,r.canvas.width,r.canvas.height),le.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:B,disable:Qe,bindFramebuffer:je,drawBuffers:ye,useProgram:Ce,setBlending:me,setMaterial:Ue,setFlipSided:Te,setCullFace:qe,setLineWidth:Ye,setPolygonOffset:Ge,setScissorTest:et,activeTexture:vt,bindTexture:F,unbindTexture:P,compressedTexImage2D:ee,compressedTexImage3D:ge,texImage2D:Ve,texImage3D:Ze,updateUBOMapping:_t,uniformBlockBinding:wt,texStorage2D:oe,texStorage3D:Oe,texSubImage2D:ve,texSubImage3D:Ae,compressedTexSubImage2D:Ke,compressedTexSubImage3D:Ie,scissor:De,viewport:ke,reset:Ot}}function Sw(r,e,t,n,i,s,l){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,_=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let S;const M=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(F,P){return v?new OffscreenCanvas(F,P):ya("canvas")}function E(F,P,ee,ge){let ve=1;if((F.width>ge||F.height>ge)&&(ve=ge/Math.max(F.width,F.height)),ve<1||P===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const Ae=P?t_:Math.floor,Ke=Ae(ve*F.width),Ie=Ae(ve*F.height);S===void 0&&(S=w(Ke,Ie));const oe=ee?w(Ke,Ie):S;return oe.width=Ke,oe.height=Ie,oe.getContext("2d").drawImage(F,0,0,Ke,Ie),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+Ke+"x"+Ie+")."),oe}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function b(F){return If(F.width)&&If(F.height)}function R(F){return c?!1:F.wrapS!==xn||F.wrapT!==xn||F.minFilter!==Xt&&F.minFilter!==qt}function C(F,P){return F.generateMipmaps&&P&&F.minFilter!==Xt&&F.minFilter!==qt}function N(F){r.generateMipmap(F)}function O(F,P,ee,ge,ve=!1){if(c===!1)return P;if(F!==null){if(r[F]!==void 0)return r[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let Ae=P;return P===r.RED&&(ee===r.FLOAT&&(Ae=r.R32F),ee===r.HALF_FLOAT&&(Ae=r.R16F),ee===r.UNSIGNED_BYTE&&(Ae=r.R8)),P===r.RG&&(ee===r.FLOAT&&(Ae=r.RG32F),ee===r.HALF_FLOAT&&(Ae=r.RG16F),ee===r.UNSIGNED_BYTE&&(Ae=r.RG8)),P===r.RGBA&&(ee===r.FLOAT&&(Ae=r.RGBA32F),ee===r.HALF_FLOAT&&(Ae=r.RGBA16F),ee===r.UNSIGNED_BYTE&&(Ae=ge===ot&&ve===!1?r.SRGB8_ALPHA8:r.RGBA8),ee===r.UNSIGNED_SHORT_4_4_4_4&&(Ae=r.RGBA4),ee===r.UNSIGNED_SHORT_5_5_5_1&&(Ae=r.RGB5_A1)),(Ae===r.R16F||Ae===r.R32F||Ae===r.RG16F||Ae===r.RG32F||Ae===r.RGBA16F||Ae===r.RGBA32F)&&e.get("EXT_color_buffer_float"),Ae}function A(F,P,ee){return C(F,ee)===!0||F.isFramebufferTexture&&F.minFilter!==Xt&&F.minFilter!==qt?Math.log2(Math.max(P.width,P.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?P.mipmaps.length:1}function L(F){return F===Xt||F===Wc||F===oa?r.NEAREST:r.LINEAR}function z(F){const P=F.target;P.removeEventListener("dispose",z),V(P),P.isVideoTexture&&y.delete(P)}function K(F){const P=F.target;P.removeEventListener("dispose",K),$(P)}function V(F){const P=n.get(F);if(P.__webglInit===void 0)return;const ee=F.source,ge=M.get(ee);if(ge){const ve=ge[P.__cacheKey];ve.usedTimes--,ve.usedTimes===0&&Y(F),Object.keys(ge).length===0&&M.delete(ee)}n.remove(F)}function Y(F){const P=n.get(F);r.deleteTexture(P.__webglTexture);const ee=F.source,ge=M.get(ee);delete ge[P.__cacheKey],l.memory.textures--}function $(F){const P=F.texture,ee=n.get(F),ge=n.get(P);if(ge.__webglTexture!==void 0&&(r.deleteTexture(ge.__webglTexture),l.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let ve=0;ve<6;ve++)r.deleteFramebuffer(ee.__webglFramebuffer[ve]),ee.__webglDepthbuffer&&r.deleteRenderbuffer(ee.__webglDepthbuffer[ve]);else{if(r.deleteFramebuffer(ee.__webglFramebuffer),ee.__webglDepthbuffer&&r.deleteRenderbuffer(ee.__webglDepthbuffer),ee.__webglMultisampledFramebuffer&&r.deleteFramebuffer(ee.__webglMultisampledFramebuffer),ee.__webglColorRenderbuffer)for(let ve=0;ve<ee.__webglColorRenderbuffer.length;ve++)ee.__webglColorRenderbuffer[ve]&&r.deleteRenderbuffer(ee.__webglColorRenderbuffer[ve]);ee.__webglDepthRenderbuffer&&r.deleteRenderbuffer(ee.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let ve=0,Ae=P.length;ve<Ae;ve++){const Ke=n.get(P[ve]);Ke.__webglTexture&&(r.deleteTexture(Ke.__webglTexture),l.memory.textures--),n.remove(P[ve])}n.remove(P),n.remove(F)}let ue=0;function ae(){ue=0}function k(){const F=ue;return F>=u&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+u),ue+=1,F}function J(F){const P=[];return P.push(F.wrapS),P.push(F.wrapT),P.push(F.wrapR||0),P.push(F.magFilter),P.push(F.minFilter),P.push(F.anisotropy),P.push(F.internalFormat),P.push(F.format),P.push(F.type),P.push(F.generateMipmaps),P.push(F.premultiplyAlpha),P.push(F.flipY),P.push(F.unpackAlignment),P.push(F.colorSpace),P.join()}function q(F,P){const ee=n.get(F);if(F.isVideoTexture&&et(F),F.isRenderTargetTexture===!1&&F.version>0&&ee.__version!==F.version){const ge=F.image;if(ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Qe(ee,F,P);return}}t.bindTexture(r.TEXTURE_2D,ee.__webglTexture,r.TEXTURE0+P)}function he(F,P){const ee=n.get(F);if(F.version>0&&ee.__version!==F.version){Qe(ee,F,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,ee.__webglTexture,r.TEXTURE0+P)}function pe(F,P){const ee=n.get(F);if(F.version>0&&ee.__version!==F.version){Qe(ee,F,P);return}t.bindTexture(r.TEXTURE_3D,ee.__webglTexture,r.TEXTURE0+P)}function Z(F,P){const ee=n.get(F);if(F.version>0&&ee.__version!==F.version){je(ee,F,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,ee.__webglTexture,r.TEXTURE0+P)}const le={[da]:r.REPEAT,[xn]:r.CLAMP_TO_EDGE,[pa]:r.MIRRORED_REPEAT},xe={[Xt]:r.NEAREST,[Wc]:r.NEAREST_MIPMAP_NEAREST,[oa]:r.NEAREST_MIPMAP_LINEAR,[qt]:r.LINEAR,[Yf]:r.LINEAR_MIPMAP_NEAREST,[Ar]:r.LINEAR_MIPMAP_LINEAR};function Se(F,P,ee){if(ee?(r.texParameteri(F,r.TEXTURE_WRAP_S,le[P.wrapS]),r.texParameteri(F,r.TEXTURE_WRAP_T,le[P.wrapT]),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,le[P.wrapR]),r.texParameteri(F,r.TEXTURE_MAG_FILTER,xe[P.magFilter]),r.texParameteri(F,r.TEXTURE_MIN_FILTER,xe[P.minFilter])):(r.texParameteri(F,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(F,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==xn||P.wrapT!==xn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(F,r.TEXTURE_MAG_FILTER,L(P.magFilter)),r.texParameteri(F,r.TEXTURE_MIN_FILTER,L(P.minFilter)),P.minFilter!==Xt&&P.minFilter!==qt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ge=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===Xt||P.minFilter!==oa&&P.minFilter!==Ar||P.type===Qi&&e.has("OES_texture_float_linear")===!1||c===!1&&P.type===ho&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(F,ge.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function B(F,P){let ee=!1;F.__webglInit===void 0&&(F.__webglInit=!0,P.addEventListener("dispose",z));const ge=P.source;let ve=M.get(ge);ve===void 0&&(ve={},M.set(ge,ve));const Ae=J(P);if(Ae!==F.__cacheKey){ve[Ae]===void 0&&(ve[Ae]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,ee=!0),ve[Ae].usedTimes++;const Ke=ve[F.__cacheKey];Ke!==void 0&&(ve[F.__cacheKey].usedTimes--,Ke.usedTimes===0&&Y(P)),F.__cacheKey=Ae,F.__webglTexture=ve[Ae].texture}return ee}function Qe(F,P,ee){let ge=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(ge=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(ge=r.TEXTURE_3D);const ve=B(F,P),Ae=P.source;t.bindTexture(ge,F.__webglTexture,r.TEXTURE0+ee);const Ke=n.get(Ae);if(Ae.version!==Ke.__version||ve===!0){t.activeTexture(r.TEXTURE0+ee),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Ie=R(P)&&b(P.image)===!1;let oe=E(P.image,Ie,!1,d);oe=vt(P,oe);const Oe=b(oe)||c,Ve=s.convert(P.format,P.colorSpace);let Ze=s.convert(P.type),De=O(P.internalFormat,Ve,Ze,P.colorSpace);Se(ge,P,Oe);let ke;const _t=P.mipmaps,wt=c&&P.isVideoTexture!==!0,Ot=Ke.__version===void 0||ve===!0,H=A(P,oe,Oe);if(P.isDepthTexture)De=r.DEPTH_COMPONENT,c?P.type===Qi?De=r.DEPTH_COMPONENT32F:P.type===xr?De=r.DEPTH_COMPONENT24:P.type===ss?De=r.DEPTH24_STENCIL8:De=r.DEPTH_COMPONENT16:P.type===Qi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===Mr&&De===r.DEPTH_COMPONENT&&P.type!==Zf&&P.type!==xr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=xr,Ze=s.convert(P.type)),P.format===us&&De===r.DEPTH_COMPONENT&&(De=r.DEPTH_STENCIL,P.type!==ss&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=ss,Ze=s.convert(P.type))),Ot&&(wt?t.texStorage2D(r.TEXTURE_2D,1,De,oe.width,oe.height):t.texImage2D(r.TEXTURE_2D,0,De,oe.width,oe.height,0,Ve,Ze,null));else if(P.isDataTexture)if(_t.length>0&&Oe){wt&&Ot&&t.texStorage2D(r.TEXTURE_2D,H,De,_t[0].width,_t[0].height);for(let re=0,_e=_t.length;re<_e;re++)ke=_t[re],wt?t.texSubImage2D(r.TEXTURE_2D,re,0,0,ke.width,ke.height,Ve,Ze,ke.data):t.texImage2D(r.TEXTURE_2D,re,De,ke.width,ke.height,0,Ve,Ze,ke.data);P.generateMipmaps=!1}else wt?(Ot&&t.texStorage2D(r.TEXTURE_2D,H,De,oe.width,oe.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,oe.width,oe.height,Ve,Ze,oe.data)):t.texImage2D(r.TEXTURE_2D,0,De,oe.width,oe.height,0,Ve,Ze,oe.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){wt&&Ot&&t.texStorage3D(r.TEXTURE_2D_ARRAY,H,De,_t[0].width,_t[0].height,oe.depth);for(let re=0,_e=_t.length;re<_e;re++)ke=_t[re],P.format!==Nn?Ve!==null?wt?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,re,0,0,0,ke.width,ke.height,oe.depth,Ve,ke.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,re,De,ke.width,ke.height,oe.depth,0,ke.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):wt?t.texSubImage3D(r.TEXTURE_2D_ARRAY,re,0,0,0,ke.width,ke.height,oe.depth,Ve,Ze,ke.data):t.texImage3D(r.TEXTURE_2D_ARRAY,re,De,ke.width,ke.height,oe.depth,0,Ve,Ze,ke.data)}else{wt&&Ot&&t.texStorage2D(r.TEXTURE_2D,H,De,_t[0].width,_t[0].height);for(let re=0,_e=_t.length;re<_e;re++)ke=_t[re],P.format!==Nn?Ve!==null?wt?t.compressedTexSubImage2D(r.TEXTURE_2D,re,0,0,ke.width,ke.height,Ve,ke.data):t.compressedTexImage2D(r.TEXTURE_2D,re,De,ke.width,ke.height,0,ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):wt?t.texSubImage2D(r.TEXTURE_2D,re,0,0,ke.width,ke.height,Ve,Ze,ke.data):t.texImage2D(r.TEXTURE_2D,re,De,ke.width,ke.height,0,Ve,Ze,ke.data)}else if(P.isDataArrayTexture)wt?(Ot&&t.texStorage3D(r.TEXTURE_2D_ARRAY,H,De,oe.width,oe.height,oe.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,oe.width,oe.height,oe.depth,Ve,Ze,oe.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,De,oe.width,oe.height,oe.depth,0,Ve,Ze,oe.data);else if(P.isData3DTexture)wt?(Ot&&t.texStorage3D(r.TEXTURE_3D,H,De,oe.width,oe.height,oe.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,oe.width,oe.height,oe.depth,Ve,Ze,oe.data)):t.texImage3D(r.TEXTURE_3D,0,De,oe.width,oe.height,oe.depth,0,Ve,Ze,oe.data);else if(P.isFramebufferTexture){if(Ot)if(wt)t.texStorage2D(r.TEXTURE_2D,H,De,oe.width,oe.height);else{let re=oe.width,_e=oe.height;for(let Pe=0;Pe<H;Pe++)t.texImage2D(r.TEXTURE_2D,Pe,De,re,_e,0,Ve,Ze,null),re>>=1,_e>>=1}}else if(_t.length>0&&Oe){wt&&Ot&&t.texStorage2D(r.TEXTURE_2D,H,De,_t[0].width,_t[0].height);for(let re=0,_e=_t.length;re<_e;re++)ke=_t[re],wt?t.texSubImage2D(r.TEXTURE_2D,re,0,0,Ve,Ze,ke):t.texImage2D(r.TEXTURE_2D,re,De,Ve,Ze,ke);P.generateMipmaps=!1}else wt?(Ot&&t.texStorage2D(r.TEXTURE_2D,H,De,oe.width,oe.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ve,Ze,oe)):t.texImage2D(r.TEXTURE_2D,0,De,Ve,Ze,oe);C(P,Oe)&&N(ge),Ke.__version=Ae.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function je(F,P,ee){if(P.image.length!==6)return;const ge=B(F,P),ve=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+ee);const Ae=n.get(ve);if(ve.version!==Ae.__version||ge===!0){t.activeTexture(r.TEXTURE0+ee),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Ke=P.isCompressedTexture||P.image[0].isCompressedTexture,Ie=P.image[0]&&P.image[0].isDataTexture,oe=[];for(let re=0;re<6;re++)!Ke&&!Ie?oe[re]=E(P.image[re],!1,!0,h):oe[re]=Ie?P.image[re].image:P.image[re],oe[re]=vt(P,oe[re]);const Oe=oe[0],Ve=b(Oe)||c,Ze=s.convert(P.format,P.colorSpace),De=s.convert(P.type),ke=O(P.internalFormat,Ze,De,P.colorSpace),_t=c&&P.isVideoTexture!==!0,wt=Ae.__version===void 0||ge===!0;let Ot=A(P,Oe,Ve);Se(r.TEXTURE_CUBE_MAP,P,Ve);let H;if(Ke){_t&&wt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ot,ke,Oe.width,Oe.height);for(let re=0;re<6;re++){H=oe[re].mipmaps;for(let _e=0;_e<H.length;_e++){const Pe=H[_e];P.format!==Nn?Ze!==null?_t?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e,0,0,Pe.width,Pe.height,Ze,Pe.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e,ke,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_t?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e,0,0,Pe.width,Pe.height,Ze,De,Pe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e,ke,Pe.width,Pe.height,0,Ze,De,Pe.data)}}}else{H=P.mipmaps,_t&&wt&&(H.length>0&&Ot++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Ot,ke,oe[0].width,oe[0].height));for(let re=0;re<6;re++)if(Ie){_t?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,0,0,0,oe[re].width,oe[re].height,Ze,De,oe[re].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,0,ke,oe[re].width,oe[re].height,0,Ze,De,oe[re].data);for(let _e=0;_e<H.length;_e++){const ze=H[_e].image[re].image;_t?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e+1,0,0,ze.width,ze.height,Ze,De,ze.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e+1,ke,ze.width,ze.height,0,Ze,De,ze.data)}}else{_t?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,0,0,0,Ze,De,oe[re]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,0,ke,Ze,De,oe[re]);for(let _e=0;_e<H.length;_e++){const Pe=H[_e];_t?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e+1,0,0,Ze,De,Pe.image[re]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+re,_e+1,ke,Ze,De,Pe.image[re])}}}C(P,Ve)&&N(r.TEXTURE_CUBE_MAP),Ae.__version=ve.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function ye(F,P,ee,ge,ve){const Ae=s.convert(ee.format,ee.colorSpace),Ke=s.convert(ee.type),Ie=O(ee.internalFormat,Ae,Ke,ee.colorSpace);n.get(P).__hasExternalTextures||(ve===r.TEXTURE_3D||ve===r.TEXTURE_2D_ARRAY?t.texImage3D(ve,0,Ie,P.width,P.height,P.depth,0,Ae,Ke,null):t.texImage2D(ve,0,Ie,P.width,P.height,0,Ae,Ke,null)),t.bindFramebuffer(r.FRAMEBUFFER,F),Ge(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ge,ve,n.get(ee).__webglTexture,0,Ye(P)):(ve===r.TEXTURE_2D||ve>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ve<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ge,ve,n.get(ee).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ce(F,P,ee){if(r.bindRenderbuffer(r.RENDERBUFFER,F),P.depthBuffer&&!P.stencilBuffer){let ge=r.DEPTH_COMPONENT16;if(ee||Ge(P)){const ve=P.depthTexture;ve&&ve.isDepthTexture&&(ve.type===Qi?ge=r.DEPTH_COMPONENT32F:ve.type===xr&&(ge=r.DEPTH_COMPONENT24));const Ae=Ye(P);Ge(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ae,ge,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,Ae,ge,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,ge,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,F)}else if(P.depthBuffer&&P.stencilBuffer){const ge=Ye(P);ee&&Ge(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ge,r.DEPTH24_STENCIL8,P.width,P.height):Ge(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ge,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,F)}else{const ge=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let ve=0;ve<ge.length;ve++){const Ae=ge[ve],Ke=s.convert(Ae.format,Ae.colorSpace),Ie=s.convert(Ae.type),oe=O(Ae.internalFormat,Ke,Ie,Ae.colorSpace),Oe=Ye(P);ee&&Ge(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Oe,oe,P.width,P.height):Ge(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Oe,oe,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,oe,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function fe(F,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,F),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),q(P.depthTexture,0);const ge=n.get(P.depthTexture).__webglTexture,ve=Ye(P);if(P.depthTexture.format===Mr)Ge(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ge,0,ve):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ge,0);else if(P.depthTexture.format===us)Ge(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ge,0,ve):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ge,0);else throw new Error("Unknown depthTexture format")}function ne(F){const P=n.get(F),ee=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!P.__autoAllocateDepthBuffer){if(ee)throw new Error("target.depthTexture not supported in Cube render targets");fe(P.__webglFramebuffer,F)}else if(ee){P.__webglDepthbuffer=[];for(let ge=0;ge<6;ge++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[ge]),P.__webglDepthbuffer[ge]=r.createRenderbuffer(),Ce(P.__webglDepthbuffer[ge],F,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),Ce(P.__webglDepthbuffer,F,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function me(F,P,ee){const ge=n.get(F);P!==void 0&&ye(ge.__webglFramebuffer,F,F.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),ee!==void 0&&ne(F)}function Ue(F){const P=F.texture,ee=n.get(F),ge=n.get(P);F.addEventListener("dispose",K),F.isWebGLMultipleRenderTargets!==!0&&(ge.__webglTexture===void 0&&(ge.__webglTexture=r.createTexture()),ge.__version=P.version,l.memory.textures++);const ve=F.isWebGLCubeRenderTarget===!0,Ae=F.isWebGLMultipleRenderTargets===!0,Ke=b(F)||c;if(ve){ee.__webglFramebuffer=[];for(let Ie=0;Ie<6;Ie++)ee.__webglFramebuffer[Ie]=r.createFramebuffer()}else{if(ee.__webglFramebuffer=r.createFramebuffer(),Ae)if(i.drawBuffers){const Ie=F.texture;for(let oe=0,Oe=Ie.length;oe<Oe;oe++){const Ve=n.get(Ie[oe]);Ve.__webglTexture===void 0&&(Ve.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&F.samples>0&&Ge(F)===!1){const Ie=Ae?P:[P];ee.__webglMultisampledFramebuffer=r.createFramebuffer(),ee.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,ee.__webglMultisampledFramebuffer);for(let oe=0;oe<Ie.length;oe++){const Oe=Ie[oe];ee.__webglColorRenderbuffer[oe]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,ee.__webglColorRenderbuffer[oe]);const Ve=s.convert(Oe.format,Oe.colorSpace),Ze=s.convert(Oe.type),De=O(Oe.internalFormat,Ve,Ze,Oe.colorSpace,F.isXRRenderTarget===!0),ke=Ye(F);r.renderbufferStorageMultisample(r.RENDERBUFFER,ke,De,F.width,F.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+oe,r.RENDERBUFFER,ee.__webglColorRenderbuffer[oe])}r.bindRenderbuffer(r.RENDERBUFFER,null),F.depthBuffer&&(ee.__webglDepthRenderbuffer=r.createRenderbuffer(),Ce(ee.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ve){t.bindTexture(r.TEXTURE_CUBE_MAP,ge.__webglTexture),Se(r.TEXTURE_CUBE_MAP,P,Ke);for(let Ie=0;Ie<6;Ie++)ye(ee.__webglFramebuffer[Ie],F,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ie);C(P,Ke)&&N(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ae){const Ie=F.texture;for(let oe=0,Oe=Ie.length;oe<Oe;oe++){const Ve=Ie[oe],Ze=n.get(Ve);t.bindTexture(r.TEXTURE_2D,Ze.__webglTexture),Se(r.TEXTURE_2D,Ve,Ke),ye(ee.__webglFramebuffer,F,Ve,r.COLOR_ATTACHMENT0+oe,r.TEXTURE_2D),C(Ve,Ke)&&N(r.TEXTURE_2D)}t.unbindTexture()}else{let Ie=r.TEXTURE_2D;(F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(c?Ie=F.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ie,ge.__webglTexture),Se(Ie,P,Ke),ye(ee.__webglFramebuffer,F,P,r.COLOR_ATTACHMENT0,Ie),C(P,Ke)&&N(Ie),t.unbindTexture()}F.depthBuffer&&ne(F)}function Te(F){const P=b(F)||c,ee=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let ge=0,ve=ee.length;ge<ve;ge++){const Ae=ee[ge];if(C(Ae,P)){const Ke=F.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Ie=n.get(Ae).__webglTexture;t.bindTexture(Ke,Ie),N(Ke),t.unbindTexture()}}}function qe(F){if(c&&F.samples>0&&Ge(F)===!1){const P=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],ee=F.width,ge=F.height;let ve=r.COLOR_BUFFER_BIT;const Ae=[],Ke=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ie=n.get(F),oe=F.isWebGLMultipleRenderTargets===!0;if(oe)for(let Oe=0;Oe<P.length;Oe++)t.bindFramebuffer(r.FRAMEBUFFER,Ie.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Oe,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Ie.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Oe,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Ie.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ie.__webglFramebuffer);for(let Oe=0;Oe<P.length;Oe++){Ae.push(r.COLOR_ATTACHMENT0+Oe),F.depthBuffer&&Ae.push(Ke);const Ve=Ie.__ignoreDepthValues!==void 0?Ie.__ignoreDepthValues:!1;if(Ve===!1&&(F.depthBuffer&&(ve|=r.DEPTH_BUFFER_BIT),F.stencilBuffer&&(ve|=r.STENCIL_BUFFER_BIT)),oe&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ie.__webglColorRenderbuffer[Oe]),Ve===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[Ke]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[Ke])),oe){const Ze=n.get(P[Oe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Ze,0)}r.blitFramebuffer(0,0,ee,ge,0,0,ee,ge,ve,r.NEAREST),_&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Ae)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),oe)for(let Oe=0;Oe<P.length;Oe++){t.bindFramebuffer(r.FRAMEBUFFER,Ie.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Oe,r.RENDERBUFFER,Ie.__webglColorRenderbuffer[Oe]);const Ve=n.get(P[Oe]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Ie.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Oe,r.TEXTURE_2D,Ve,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ie.__webglMultisampledFramebuffer)}}function Ye(F){return Math.min(p,F.samples)}function Ge(F){const P=n.get(F);return c&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function et(F){const P=l.render.frame;y.get(F)!==P&&(y.set(F,P),F.update())}function vt(F,P){const ee=F.colorSpace,ge=F.format,ve=F.type;return F.isCompressedTexture===!0||F.format===Xc||ee!==yi&&ee!==Er&&(ee===ot?c===!1?e.has("EXT_sRGB")===!0&&ge===Nn?(F.format=Xc,F.minFilter=qt,F.generateMipmaps=!1):P=$f.sRGBToLinear(P):(ge!==Nn||ve!==tr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ee)),P}this.allocateTextureUnit=k,this.resetTextureUnits=ae,this.setTexture2D=q,this.setTexture2DArray=he,this.setTexture3D=pe,this.setTextureCube=Z,this.rebindTextures=me,this.setupRenderTarget=Ue,this.updateRenderTargetMipmap=Te,this.updateMultisampleRenderTarget=qe,this.setupDepthRenderbuffer=ne,this.setupFrameBufferTexture=ye,this.useMultisampledRTT=Ge}function d_(r,e,t){const n=t.isWebGL2;function i(s,l=Er){let c;if(s===tr)return r.UNSIGNED_BYTE;if(s===N0)return r.UNSIGNED_SHORT_4_4_4_4;if(s===F0)return r.UNSIGNED_SHORT_5_5_5_1;if(s===I0)return r.BYTE;if(s===U0)return r.SHORT;if(s===Zf)return r.UNSIGNED_SHORT;if(s===D0)return r.INT;if(s===xr)return r.UNSIGNED_INT;if(s===Qi)return r.FLOAT;if(s===ho)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===O0)return r.ALPHA;if(s===Nn)return r.RGBA;if(s===z0)return r.LUMINANCE;if(s===B0)return r.LUMINANCE_ALPHA;if(s===Mr)return r.DEPTH_COMPONENT;if(s===us)return r.DEPTH_STENCIL;if(s===Xc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===k0)return r.RED;if(s===H0)return r.RED_INTEGER;if(s===G0)return r.RG;if(s===V0)return r.RG_INTEGER;if(s===W0)return r.RGBA_INTEGER;if(s===Dc||s===Nc||s===Fc||s===Oc)if(l===ot)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Dc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Nc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Fc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Oc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Dc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Nc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Fc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Oc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===lf||s===cf||s===uf||s===hf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===lf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===cf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===uf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===hf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===X0)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===ff||s===df)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===ff)return l===ot?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===df)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===pf||s===mf||s===gf||s===_f||s===vf||s===yf||s===xf||s===Mf||s===Sf||s===Ef||s===wf||s===Tf||s===Af||s===bf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===pf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===mf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===gf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===_f)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===vf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===yf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===xf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Mf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Sf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Ef)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===wf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Tf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Af)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===bf)return l===ot?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===zc)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===zc)return l===ot?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===q0||s===Rf||s===Cf||s===Pf)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===zc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===Rf)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===Cf)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Pf)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===ss?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class p_ extends ln{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class oo extends Et{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Ew={type:"move"};class Nh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new oo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new oo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new oo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const S of e.hand.values()){const M=t.getJointPose(S,n),v=this._getHandJoint(h,S);M!==null&&(v.matrix.fromArray(M.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=M.radius),v.visible=M!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),_=.02,y=.005;h.inputState.pinching&&m>_+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=_-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(Ew)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new oo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class m_ extends Yt{constructor(e,t,n,i,s,l,c,u,h,d){if(d=d!==void 0?d:Mr,d!==Mr&&d!==us)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Mr&&(n=xr),n===void 0&&d===us&&(n=ss),super(null,i,s,l,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Xt,this.minFilter=u!==void 0?u:Xt,this.flipY=!1,this.generateMipmaps=!1}}class ww extends ir{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,_=null,y=null;const S=t.getContextAttributes();let M=null,v=null;const w=[],E=[],b=new Set,R=new Map,C=new ln;C.layers.enable(1),C.viewport=new Ct;const N=new ln;N.layers.enable(2),N.viewport=new Ct;const O=[C,N],A=new p_;A.layers.enable(1),A.layers.enable(2);let L=null,z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Z){let le=w[Z];return le===void 0&&(le=new Nh,w[Z]=le),le.getTargetRaySpace()},this.getControllerGrip=function(Z){let le=w[Z];return le===void 0&&(le=new Nh,w[Z]=le),le.getGripSpace()},this.getHand=function(Z){let le=w[Z];return le===void 0&&(le=new Nh,w[Z]=le),le.getHandSpace()};function K(Z){const le=E.indexOf(Z.inputSource);if(le===-1)return;const xe=w[le];xe!==void 0&&(xe.update(Z.inputSource,Z.frame,h||l),xe.dispatchEvent({type:Z.type,data:Z.inputSource}))}function V(){i.removeEventListener("select",K),i.removeEventListener("selectstart",K),i.removeEventListener("selectend",K),i.removeEventListener("squeeze",K),i.removeEventListener("squeezestart",K),i.removeEventListener("squeezeend",K),i.removeEventListener("end",V),i.removeEventListener("inputsourceschange",Y);for(let Z=0;Z<w.length;Z++){const le=E[Z];le!==null&&(E[Z]=null,w[Z].disconnect(le))}L=null,z=null,e.setRenderTarget(M),_=null,m=null,p=null,i=null,v=null,pe.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Z){s=Z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Z){c=Z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(Z){h=Z},this.getBaseLayer=function(){return m!==null?m:_},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(Z){if(i=Z,i!==null){if(M=e.getRenderTarget(),i.addEventListener("select",K),i.addEventListener("selectstart",K),i.addEventListener("selectend",K),i.addEventListener("squeeze",K),i.addEventListener("squeezestart",K),i.addEventListener("squeezeend",K),i.addEventListener("end",V),i.addEventListener("inputsourceschange",Y),S.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const le={antialias:i.renderState.layers===void 0?S.antialias:!0,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,le),i.updateRenderState({baseLayer:_}),v=new xi(_.framebufferWidth,_.framebufferHeight,{format:Nn,type:tr,colorSpace:e.outputColorSpace,stencilBuffer:S.stencil})}else{let le=null,xe=null,Se=null;S.depth&&(Se=S.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,le=S.stencil?us:Mr,xe=S.stencil?ss:xr);const B={colorFormat:t.RGBA8,depthFormat:Se,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(B),i.updateRenderState({layers:[m]}),v=new xi(m.textureWidth,m.textureHeight,{format:Nn,type:tr,depthTexture:new m_(m.textureWidth,m.textureHeight,xe,void 0,void 0,void 0,void 0,void 0,void 0,le),stencilBuffer:S.stencil,colorSpace:e.outputColorSpace,samples:S.antialias?4:0});const Qe=e.properties.get(v);Qe.__ignoreDepthValues=m.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),pe.setContext(i),pe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function Y(Z){for(let le=0;le<Z.removed.length;le++){const xe=Z.removed[le],Se=E.indexOf(xe);Se>=0&&(E[Se]=null,w[Se].disconnect(xe))}for(let le=0;le<Z.added.length;le++){const xe=Z.added[le];let Se=E.indexOf(xe);if(Se===-1){for(let Qe=0;Qe<w.length;Qe++)if(Qe>=E.length){E.push(xe),Se=Qe;break}else if(E[Qe]===null){E[Qe]=xe,Se=Qe;break}if(Se===-1)break}const B=w[Se];B&&B.connect(xe)}}const $=new U,ue=new U;function ae(Z,le,xe){$.setFromMatrixPosition(le.matrixWorld),ue.setFromMatrixPosition(xe.matrixWorld);const Se=$.distanceTo(ue),B=le.projectionMatrix.elements,Qe=xe.projectionMatrix.elements,je=B[14]/(B[10]-1),ye=B[14]/(B[10]+1),Ce=(B[9]+1)/B[5],fe=(B[9]-1)/B[5],ne=(B[8]-1)/B[0],me=(Qe[8]+1)/Qe[0],Ue=je*ne,Te=je*me,qe=Se/(-ne+me),Ye=qe*-ne;le.matrixWorld.decompose(Z.position,Z.quaternion,Z.scale),Z.translateX(Ye),Z.translateZ(qe),Z.matrixWorld.compose(Z.position,Z.quaternion,Z.scale),Z.matrixWorldInverse.copy(Z.matrixWorld).invert();const Ge=je+qe,et=ye+qe,vt=Ue-Ye,F=Te+(Se-Ye),P=Ce*ye/et*Ge,ee=fe*ye/et*Ge;Z.projectionMatrix.makePerspective(vt,F,P,ee,Ge,et),Z.projectionMatrixInverse.copy(Z.projectionMatrix).invert()}function k(Z,le){le===null?Z.matrixWorld.copy(Z.matrix):Z.matrixWorld.multiplyMatrices(le.matrixWorld,Z.matrix),Z.matrixWorldInverse.copy(Z.matrixWorld).invert()}this.updateCamera=function(Z){if(i===null)return;A.near=N.near=C.near=Z.near,A.far=N.far=C.far=Z.far,(L!==A.near||z!==A.far)&&(i.updateRenderState({depthNear:A.near,depthFar:A.far}),L=A.near,z=A.far);const le=Z.parent,xe=A.cameras;k(A,le);for(let Se=0;Se<xe.length;Se++)k(xe[Se],le);xe.length===2?ae(A,C,N):A.projectionMatrix.copy(C.projectionMatrix),J(Z,A,le)};function J(Z,le,xe){xe===null?Z.matrix.copy(le.matrixWorld):(Z.matrix.copy(xe.matrixWorld),Z.matrix.invert(),Z.matrix.multiply(le.matrixWorld)),Z.matrix.decompose(Z.position,Z.quaternion,Z.scale),Z.updateMatrixWorld(!0);const Se=Z.children;for(let B=0,Qe=Se.length;B<Qe;B++)Se[B].updateMatrixWorld(!0);Z.projectionMatrix.copy(le.projectionMatrix),Z.projectionMatrixInverse.copy(le.projectionMatrixInverse),Z.isPerspectiveCamera&&(Z.fov=fo*2*Math.atan(1/Z.projectionMatrix.elements[5]),Z.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(m===null&&_===null))return u},this.setFoveation=function(Z){u=Z,m!==null&&(m.fixedFoveation=Z),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=Z)},this.getPlanes=function(){return b};let q=null;function he(Z,le){if(d=le.getViewerPose(h||l),y=le,d!==null){const xe=d.views;_!==null&&(e.setRenderTargetFramebuffer(v,_.framebuffer),e.setRenderTarget(v));let Se=!1;xe.length!==A.cameras.length&&(A.cameras.length=0,Se=!0);for(let B=0;B<xe.length;B++){const Qe=xe[B];let je=null;if(_!==null)je=_.getViewport(Qe);else{const Ce=p.getViewSubImage(m,Qe);je=Ce.viewport,B===0&&(e.setRenderTargetTextures(v,Ce.colorTexture,m.ignoreDepthValues?void 0:Ce.depthStencilTexture),e.setRenderTarget(v))}let ye=O[B];ye===void 0&&(ye=new ln,ye.layers.enable(B),ye.viewport=new Ct,O[B]=ye),ye.matrix.fromArray(Qe.transform.matrix),ye.matrix.decompose(ye.position,ye.quaternion,ye.scale),ye.projectionMatrix.fromArray(Qe.projectionMatrix),ye.projectionMatrixInverse.copy(ye.projectionMatrix).invert(),ye.viewport.set(je.x,je.y,je.width,je.height),B===0&&(A.matrix.copy(ye.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),Se===!0&&A.cameras.push(ye)}}for(let xe=0;xe<w.length;xe++){const Se=E[xe],B=w[xe];Se!==null&&B!==void 0&&B.update(Se,le,h||l)}if(q&&q(Z,le),le.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:le.detectedPlanes});let xe=null;for(const Se of b)le.detectedPlanes.has(Se)||(xe===null&&(xe=[]),xe.push(Se));if(xe!==null)for(const Se of xe)b.delete(Se),R.delete(Se),n.dispatchEvent({type:"planeremoved",data:Se});for(const Se of le.detectedPlanes)if(!b.has(Se))b.add(Se),R.set(Se,le.lastChangedTime),n.dispatchEvent({type:"planeadded",data:Se});else{const B=R.get(Se);Se.lastChangedTime>B&&(R.set(Se,Se.lastChangedTime),n.dispatchEvent({type:"planechanged",data:Se}))}}y=null}const pe=new l_;pe.setAnimationLoop(he),this.setAnimationLoop=function(Z){q=Z},this.dispose=function(){}}}function Tw(r,e){function t(M,v){M.matrixAutoUpdate===!0&&M.updateMatrix(),v.value.copy(M.matrix)}function n(M,v){v.color.getRGB(M.fogColor.value,r_(r)),v.isFog?(M.fogNear.value=v.near,M.fogFar.value=v.far):v.isFogExp2&&(M.fogDensity.value=v.density)}function i(M,v,w,E,b){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(M,v):v.isMeshToonMaterial?(s(M,v),p(M,v)):v.isMeshPhongMaterial?(s(M,v),d(M,v)):v.isMeshStandardMaterial?(s(M,v),m(M,v),v.isMeshPhysicalMaterial&&_(M,v,b)):v.isMeshMatcapMaterial?(s(M,v),y(M,v)):v.isMeshDepthMaterial?s(M,v):v.isMeshDistanceMaterial?(s(M,v),S(M,v)):v.isMeshNormalMaterial?s(M,v):v.isLineBasicMaterial?(l(M,v),v.isLineDashedMaterial&&c(M,v)):v.isPointsMaterial?u(M,v,w,E):v.isSpriteMaterial?h(M,v):v.isShadowMaterial?(M.color.value.copy(v.color),M.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(M,v){M.opacity.value=v.opacity,v.color&&M.diffuse.value.copy(v.color),v.emissive&&M.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(M.map.value=v.map,t(v.map,M.mapTransform)),v.alphaMap&&(M.alphaMap.value=v.alphaMap,t(v.alphaMap,M.alphaMapTransform)),v.bumpMap&&(M.bumpMap.value=v.bumpMap,t(v.bumpMap,M.bumpMapTransform),M.bumpScale.value=v.bumpScale,v.side===bn&&(M.bumpScale.value*=-1)),v.normalMap&&(M.normalMap.value=v.normalMap,t(v.normalMap,M.normalMapTransform),M.normalScale.value.copy(v.normalScale),v.side===bn&&M.normalScale.value.negate()),v.displacementMap&&(M.displacementMap.value=v.displacementMap,t(v.displacementMap,M.displacementMapTransform),M.displacementScale.value=v.displacementScale,M.displacementBias.value=v.displacementBias),v.emissiveMap&&(M.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,M.emissiveMapTransform)),v.specularMap&&(M.specularMap.value=v.specularMap,t(v.specularMap,M.specularMapTransform)),v.alphaTest>0&&(M.alphaTest.value=v.alphaTest);const w=e.get(v).envMap;if(w&&(M.envMap.value=w,M.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,M.reflectivity.value=v.reflectivity,M.ior.value=v.ior,M.refractionRatio.value=v.refractionRatio),v.lightMap){M.lightMap.value=v.lightMap;const E=r.useLegacyLights===!0?Math.PI:1;M.lightMapIntensity.value=v.lightMapIntensity*E,t(v.lightMap,M.lightMapTransform)}v.aoMap&&(M.aoMap.value=v.aoMap,M.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,M.aoMapTransform))}function l(M,v){M.diffuse.value.copy(v.color),M.opacity.value=v.opacity,v.map&&(M.map.value=v.map,t(v.map,M.mapTransform))}function c(M,v){M.dashSize.value=v.dashSize,M.totalSize.value=v.dashSize+v.gapSize,M.scale.value=v.scale}function u(M,v,w,E){M.diffuse.value.copy(v.color),M.opacity.value=v.opacity,M.size.value=v.size*w,M.scale.value=E*.5,v.map&&(M.map.value=v.map,t(v.map,M.uvTransform)),v.alphaMap&&(M.alphaMap.value=v.alphaMap),v.alphaTest>0&&(M.alphaTest.value=v.alphaTest)}function h(M,v){M.diffuse.value.copy(v.color),M.opacity.value=v.opacity,M.rotation.value=v.rotation,v.map&&(M.map.value=v.map,t(v.map,M.mapTransform)),v.alphaMap&&(M.alphaMap.value=v.alphaMap),v.alphaTest>0&&(M.alphaTest.value=v.alphaTest)}function d(M,v){M.specular.value.copy(v.specular),M.shininess.value=Math.max(v.shininess,1e-4)}function p(M,v){v.gradientMap&&(M.gradientMap.value=v.gradientMap)}function m(M,v){M.metalness.value=v.metalness,v.metalnessMap&&(M.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,M.metalnessMapTransform)),M.roughness.value=v.roughness,v.roughnessMap&&(M.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,M.roughnessMapTransform)),e.get(v).envMap&&(M.envMapIntensity.value=v.envMapIntensity)}function _(M,v,w){M.ior.value=v.ior,v.sheen>0&&(M.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),M.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(M.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,M.sheenColorMapTransform)),v.sheenRoughnessMap&&(M.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,M.sheenRoughnessMapTransform))),v.clearcoat>0&&(M.clearcoat.value=v.clearcoat,M.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(M.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,M.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(M.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,M.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(M.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,M.clearcoatNormalMapTransform),M.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===bn&&M.clearcoatNormalScale.value.negate())),v.iridescence>0&&(M.iridescence.value=v.iridescence,M.iridescenceIOR.value=v.iridescenceIOR,M.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],M.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(M.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,M.iridescenceMapTransform)),v.iridescenceThicknessMap&&(M.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,M.iridescenceThicknessMapTransform))),v.transmission>0&&(M.transmission.value=v.transmission,M.transmissionSamplerMap.value=w.texture,M.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(M.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,M.transmissionMapTransform)),M.thickness.value=v.thickness,v.thicknessMap&&(M.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,M.thicknessMapTransform)),M.attenuationDistance.value=v.attenuationDistance,M.attenuationColor.value.copy(v.attenuationColor)),M.specularIntensity.value=v.specularIntensity,M.specularColor.value.copy(v.specularColor),v.specularColorMap&&(M.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,M.specularColorMapTransform)),v.specularIntensityMap&&(M.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,M.specularIntensityMapTransform))}function y(M,v){v.matcap&&(M.matcap.value=v.matcap)}function S(M,v){const w=e.get(v).light;M.referencePosition.value.setFromMatrixPosition(w.matrixWorld),M.nearDistance.value=w.shadow.camera.near,M.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Aw(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,E){const b=E.program;n.uniformBlockBinding(w,b)}function h(w,E){let b=i[w.id];b===void 0&&(y(w),b=d(w),i[w.id]=b,w.addEventListener("dispose",M));const R=E.program;n.updateUBOMapping(w,R);const C=e.render.frame;s[w.id]!==C&&(m(w),s[w.id]=C)}function d(w){const E=p();w.__bindingPointIndex=E;const b=r.createBuffer(),R=w.__size,C=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,b),r.bufferData(r.UNIFORM_BUFFER,R,C),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,E,b),b}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const E=i[w.id],b=w.uniforms,R=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,E);for(let C=0,N=b.length;C<N;C++){const O=b[C];if(_(O,C,R)===!0){const A=O.__offset,L=Array.isArray(O.value)?O.value:[O.value];let z=0;for(let K=0;K<L.length;K++){const V=L[K],Y=S(V);typeof V=="number"?(O.__data[0]=V,r.bufferSubData(r.UNIFORM_BUFFER,A+z,O.__data)):V.isMatrix3?(O.__data[0]=V.elements[0],O.__data[1]=V.elements[1],O.__data[2]=V.elements[2],O.__data[3]=V.elements[0],O.__data[4]=V.elements[3],O.__data[5]=V.elements[4],O.__data[6]=V.elements[5],O.__data[7]=V.elements[0],O.__data[8]=V.elements[6],O.__data[9]=V.elements[7],O.__data[10]=V.elements[8],O.__data[11]=V.elements[0]):(V.toArray(O.__data,z),z+=Y.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,A,O.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(w,E,b){const R=w.value;if(b[E]===void 0){if(typeof R=="number")b[E]=R;else{const C=Array.isArray(R)?R:[R],N=[];for(let O=0;O<C.length;O++)N.push(C[O].clone());b[E]=N}return!0}else if(typeof R=="number"){if(b[E]!==R)return b[E]=R,!0}else{const C=Array.isArray(b[E])?b[E]:[b[E]],N=Array.isArray(R)?R:[R];for(let O=0;O<C.length;O++){const A=C[O];if(A.equals(N[O])===!1)return A.copy(N[O]),!0}}return!1}function y(w){const E=w.uniforms;let b=0;const R=16;let C=0;for(let N=0,O=E.length;N<O;N++){const A=E[N],L={boundary:0,storage:0},z=Array.isArray(A.value)?A.value:[A.value];for(let K=0,V=z.length;K<V;K++){const Y=z[K],$=S(Y);L.boundary+=$.boundary,L.storage+=$.storage}if(A.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=b,N>0){C=b%R;const K=R-C;C!==0&&K-L.boundary<0&&(b+=R-C,A.__offset=b)}b+=L.storage}return C=b%R,C>0&&(b+=R-C),w.__size=b,w.__cache={},this}function S(w){const E={boundary:0,storage:0};return typeof w=="number"?(E.boundary=4,E.storage=4):w.isVector2?(E.boundary=8,E.storage=8):w.isVector3||w.isColor?(E.boundary=16,E.storage=12):w.isVector4?(E.boundary=16,E.storage=16):w.isMatrix3?(E.boundary=48,E.storage=48):w.isMatrix4?(E.boundary=64,E.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),E}function M(w){const E=w.target;E.removeEventListener("dispose",M);const b=l.indexOf(E.__bindingPointIndex);l.splice(b,1),r.deleteBuffer(i[E.id]),delete i[E.id],delete s[E.id]}function v(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}function bw(){const r=ya("canvas");return r.style.display="block",r}class od{constructor(e={}){const{canvas:t=bw(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;let _=null,y=null;const S=[],M=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ot,this.useLegacyLights=!0,this.toneMapping=vi,this.toneMappingExposure=1;const v=this;let w=!1,E=0,b=0,R=null,C=-1,N=null;const O=new Ct,A=new Ct;let L=null,z=t.width,K=t.height,V=1,Y=null,$=null;const ue=new Ct(0,0,z,K),ae=new Ct(0,0,z,K);let k=!1;const J=new Qc;let q=!1,he=!1,pe=null;const Z=new it,le=new U,xe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Se(){return R===null?V:1}let B=n;function Qe(I,Q){for(let se=0;se<I.length;se++){const X=I[se],ce=t.getContext(X,Q);if(ce!==null)return ce}return null}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Ra}`),t.addEventListener("webglcontextlost",ke,!1),t.addEventListener("webglcontextrestored",_t,!1),t.addEventListener("webglcontextcreationerror",wt,!1),B===null){const Q=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&Q.shift(),B=Qe(Q,I),B===null)throw Qe(Q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let je,ye,Ce,fe,ne,me,Ue,Te,qe,Ye,Ge,et,vt,F,P,ee,ge,ve,Ae,Ke,Ie,oe,Oe,Ve;function Ze(){je=new VE(B),ye=new OE(B,je,e),je.init(ye),oe=new d_(B,je,ye),Ce=new Mw(B,je,ye),fe=new qE(B),ne=new cw,me=new Sw(B,je,Ce,ne,ye,oe,fe),Ue=new BE(v),Te=new GE(v),qe=new rM(B,ye),Oe=new NE(B,je,qe,ye),Ye=new WE(B,qe,fe,Oe),Ge=new jE(B,Ye,qe,fe),Ae=new JE(B,ye,me),ee=new zE(ne),et=new lw(v,Ue,Te,je,ye,Oe,ee),vt=new Tw(v,ne),F=new hw,P=new _w(je,ye),ve=new DE(v,Ue,Te,Ce,Ge,m,u),ge=new xw(v,Ge,ye),Ve=new Aw(B,fe,ye,Ce),Ke=new FE(B,je,fe,ye),Ie=new XE(B,je,fe,ye),fe.programs=et.programs,v.capabilities=ye,v.extensions=je,v.properties=ne,v.renderLists=F,v.shadowMap=ge,v.state=Ce,v.info=fe}Ze();const De=new ww(v,B);this.xr=De,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const I=je.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=je.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(I){I!==void 0&&(V=I,this.setSize(z,K,!1))},this.getSize=function(I){return I.set(z,K)},this.setSize=function(I,Q,se=!0){if(De.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=I,K=Q,t.width=Math.floor(I*V),t.height=Math.floor(Q*V),se===!0&&(t.style.width=I+"px",t.style.height=Q+"px"),this.setViewport(0,0,I,Q)},this.getDrawingBufferSize=function(I){return I.set(z*V,K*V).floor()},this.setDrawingBufferSize=function(I,Q,se){z=I,K=Q,V=se,t.width=Math.floor(I*se),t.height=Math.floor(Q*se),this.setViewport(0,0,I,Q)},this.getCurrentViewport=function(I){return I.copy(O)},this.getViewport=function(I){return I.copy(ue)},this.setViewport=function(I,Q,se,X){I.isVector4?ue.set(I.x,I.y,I.z,I.w):ue.set(I,Q,se,X),Ce.viewport(O.copy(ue).multiplyScalar(V).floor())},this.getScissor=function(I){return I.copy(ae)},this.setScissor=function(I,Q,se,X){I.isVector4?ae.set(I.x,I.y,I.z,I.w):ae.set(I,Q,se,X),Ce.scissor(A.copy(ae).multiplyScalar(V).floor())},this.getScissorTest=function(){return k},this.setScissorTest=function(I){Ce.setScissorTest(k=I)},this.setOpaqueSort=function(I){Y=I},this.setTransparentSort=function(I){$=I},this.getClearColor=function(I){return I.copy(ve.getClearColor())},this.setClearColor=function(){ve.setClearColor.apply(ve,arguments)},this.getClearAlpha=function(){return ve.getClearAlpha()},this.setClearAlpha=function(){ve.setClearAlpha.apply(ve,arguments)},this.clear=function(I=!0,Q=!0,se=!0){let X=0;I&&(X|=B.COLOR_BUFFER_BIT),Q&&(X|=B.DEPTH_BUFFER_BIT),se&&(X|=B.STENCIL_BUFFER_BIT),B.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ke,!1),t.removeEventListener("webglcontextrestored",_t,!1),t.removeEventListener("webglcontextcreationerror",wt,!1),F.dispose(),P.dispose(),ne.dispose(),Ue.dispose(),Te.dispose(),Ge.dispose(),Oe.dispose(),Ve.dispose(),et.dispose(),De.dispose(),De.removeEventListener("sessionstart",ze),De.removeEventListener("sessionend",Tt),pe&&(pe.dispose(),pe=null),At.stop()};function ke(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function _t(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const I=fe.autoReset,Q=ge.enabled,se=ge.autoUpdate,X=ge.needsUpdate,ce=ge.type;Ze(),fe.autoReset=I,ge.enabled=Q,ge.autoUpdate=se,ge.needsUpdate=X,ge.type=ce}function wt(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function Ot(I){const Q=I.target;Q.removeEventListener("dispose",Ot),H(Q)}function H(I){re(I),ne.remove(I)}function re(I){const Q=ne.get(I).programs;Q!==void 0&&(Q.forEach(function(se){et.releaseProgram(se)}),I.isShaderMaterial&&et.releaseShaderCache(I))}this.renderBufferDirect=function(I,Q,se,X,ce,We){Q===null&&(Q=xe);const Je=ce.isMesh&&ce.matrixWorld.determinant()<0,$e=ja(I,Q,se,X,ce);Ce.setMaterial(X,Je);let rt=se.index,ut=1;X.wireframe===!0&&(rt=Ye.getWireframeAttribute(se),ut=2);const ht=se.drawRange,pt=se.attributes.position;let bt=ht.start*ut,cn=(ht.start+ht.count)*ut;We!==null&&(bt=Math.max(bt,We.start*ut),cn=Math.min(cn,(We.start+We.count)*ut)),rt!==null?(bt=Math.max(bt,0),cn=Math.min(cn,rt.count)):pt!=null&&(bt=Math.max(bt,0),cn=Math.min(cn,pt.count));const On=cn-bt;if(On<0||On===1/0)return;Oe.setup(ce,X,$e,se,rt);let oi,Ut=Ke;if(rt!==null&&(oi=qe.get(rt),Ut=Ie,Ut.setIndex(oi)),ce.isMesh)X.wireframe===!0?(Ce.setLineWidth(X.wireframeLinewidth*Se()),Ut.setMode(B.LINES)):Ut.setMode(B.TRIANGLES);else if(ce.isLine){let mt=X.linewidth;mt===void 0&&(mt=1),Ce.setLineWidth(mt*Se()),ce.isLineSegments?Ut.setMode(B.LINES):ce.isLineLoop?Ut.setMode(B.LINE_LOOP):Ut.setMode(B.LINE_STRIP)}else ce.isPoints?Ut.setMode(B.POINTS):ce.isSprite&&Ut.setMode(B.TRIANGLES);if(ce.isInstancedMesh)Ut.renderInstances(bt,On,ce.count);else if(se.isInstancedBufferGeometry){const mt=se._maxInstanceCount!==void 0?se._maxInstanceCount:1/0,Ir=Math.min(se.instanceCount,mt);Ut.renderInstances(bt,On,Ir)}else Ut.render(bt,On)},this.compile=function(I,Q){function se(X,ce,We){X.transparent===!0&&X.side===Li&&X.forceSinglePass===!1?(X.side=bn,X.needsUpdate=!0,ys(X,ce,We),X.side=er,X.needsUpdate=!0,ys(X,ce,We),X.side=Li):ys(X,ce,We)}y=P.get(I),y.init(),M.push(y),I.traverseVisible(function(X){X.isLight&&X.layers.test(Q.layers)&&(y.pushLight(X),X.castShadow&&y.pushShadow(X))}),y.setupLights(v.useLegacyLights),I.traverse(function(X){const ce=X.material;if(ce)if(Array.isArray(ce))for(let We=0;We<ce.length;We++){const Je=ce[We];se(Je,I,X)}else se(ce,I,X)}),M.pop(),y=null};let _e=null;function Pe(I){_e&&_e(I)}function ze(){At.stop()}function Tt(){At.start()}const At=new l_;At.setAnimationLoop(Pe),typeof self<"u"&&At.setContext(self),this.setAnimationLoop=function(I){_e=I,De.setAnimationLoop(I),I===null?At.stop():At.start()},De.addEventListener("sessionstart",ze),De.addEventListener("sessionend",Tt),this.render=function(I,Q){if(Q!==void 0&&Q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),Q.parent===null&&Q.matrixWorldAutoUpdate===!0&&Q.updateMatrixWorld(),De.enabled===!0&&De.isPresenting===!0&&(De.cameraAutoUpdate===!0&&De.updateCamera(Q),Q=De.getCamera()),I.isScene===!0&&I.onBeforeRender(v,I,Q,R),y=P.get(I,M.length),y.init(),M.push(y),Z.multiplyMatrices(Q.projectionMatrix,Q.matrixWorldInverse),J.setFromProjectionMatrix(Z),he=this.localClippingEnabled,q=ee.init(this.clippingPlanes,he),_=F.get(I,S.length),_.init(),S.push(_),nn(I,Q,0,v.sortObjects),_.finish(),v.sortObjects===!0&&_.sort(Y,$),q===!0&&ee.beginShadows();const se=y.state.shadowsArray;if(ge.render(se,I,Q),q===!0&&ee.endShadows(),this.info.autoReset===!0&&this.info.reset(),ve.render(_,I),y.setupLights(v.useLegacyLights),Q.isArrayCamera){const X=Q.cameras;for(let ce=0,We=X.length;ce<We;ce++){const Je=X[ce];si(_,I,Je,Je.viewport)}}else si(_,I,Q);R!==null&&(me.updateMultisampleRenderTarget(R),me.updateRenderTargetMipmap(R)),I.isScene===!0&&I.onAfterRender(v,I,Q),Oe.resetDefaultState(),C=-1,N=null,M.pop(),M.length>0?y=M[M.length-1]:y=null,S.pop(),S.length>0?_=S[S.length-1]:_=null};function nn(I,Q,se,X){if(I.visible===!1)return;if(I.layers.test(Q.layers)){if(I.isGroup)se=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(Q);else if(I.isLight)y.pushLight(I),I.castShadow&&y.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||J.intersectsSprite(I)){X&&le.setFromMatrixPosition(I.matrixWorld).applyMatrix4(Z);const Je=Ge.update(I),$e=I.material;$e.visible&&_.push(I,Je,$e,se,le.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||J.intersectsObject(I))){I.isSkinnedMesh&&I.skeleton.frame!==fe.render.frame&&(I.skeleton.update(),I.skeleton.frame=fe.render.frame);const Je=Ge.update(I),$e=I.material;if(X&&(Je.boundingSphere===null&&Je.computeBoundingSphere(),le.copy(Je.boundingSphere.center).applyMatrix4(I.matrixWorld).applyMatrix4(Z)),Array.isArray($e)){const rt=Je.groups;for(let ut=0,ht=rt.length;ut<ht;ut++){const pt=rt[ut],bt=$e[pt.materialIndex];bt&&bt.visible&&_.push(I,Je,bt,se,le.z,pt)}}else $e.visible&&_.push(I,Je,$e,se,le.z,null)}}const We=I.children;for(let Je=0,$e=We.length;Je<$e;Je++)nn(We[Je],Q,se,X)}function si(I,Q,se,X){const ce=I.opaque,We=I.transmissive,Je=I.transparent;y.setupLightsView(se),q===!0&&ee.setGlobalState(v.clippingPlanes,se),We.length>0&&Nt(ce,We,Q,se),X&&Ce.viewport(O.copy(X)),ce.length>0&&Sn(ce,Q,se),We.length>0&&Sn(We,Q,se),Je.length>0&&Sn(Je,Q,se),Ce.buffers.depth.setTest(!0),Ce.buffers.depth.setMask(!0),Ce.buffers.color.setMask(!0),Ce.setPolygonOffset(!1)}function Nt(I,Q,se,X){if(pe===null){const $e=ye.isWebGL2;pe=new xi(1024,1024,{generateMipmaps:!0,type:je.has("EXT_color_buffer_half_float")?ho:tr,minFilter:Ar,samples:$e&&c===!0?4:0})}const ce=v.getRenderTarget();v.setRenderTarget(pe),v.clear();const We=v.toneMapping;v.toneMapping=vi,Sn(I,se,X),me.updateMultisampleRenderTarget(pe),me.updateRenderTargetMipmap(pe);let Je=!1;for(let $e=0,rt=Q.length;$e<rt;$e++){const ut=Q[$e],ht=ut.object,pt=ut.geometry,bt=ut.material,cn=ut.group;if(bt.side===Li&&ht.layers.test(X.layers)){const On=bt.side;bt.side=bn,bt.needsUpdate=!0,Yn(ht,se,X,pt,bt,cn),bt.side=On,bt.needsUpdate=!0,Je=!0}}Je===!0&&(me.updateMultisampleRenderTarget(pe),me.updateRenderTargetMipmap(pe)),v.setRenderTarget(ce),v.toneMapping=We}function Sn(I,Q,se){const X=Q.isScene===!0?Q.overrideMaterial:null;for(let ce=0,We=I.length;ce<We;ce++){const Je=I[ce],$e=Je.object,rt=Je.geometry,ut=X===null?Je.material:X,ht=Je.group;$e.layers.test(se.layers)&&Yn($e,Q,se,rt,ut,ht)}}function Yn(I,Q,se,X,ce,We){I.onBeforeRender(v,Q,se,X,ce,We),I.modelViewMatrix.multiplyMatrices(se.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),ce.onBeforeRender(v,Q,se,X,I,We),ce.transparent===!0&&ce.side===Li&&ce.forceSinglePass===!1?(ce.side=bn,ce.needsUpdate=!0,v.renderBufferDirect(se,Q,X,ce,I,We),ce.side=er,ce.needsUpdate=!0,v.renderBufferDirect(se,Q,X,ce,I,We),ce.side=Li):v.renderBufferDirect(se,Q,X,ce,I,We),I.onAfterRender(v,Q,se,X,ce,We)}function ys(I,Q,se){Q.isScene!==!0&&(Q=xe);const X=ne.get(I),ce=y.state.lights,We=y.state.shadowsArray,Je=ce.state.version,$e=et.getParameters(I,ce.state,We,Q,se),rt=et.getProgramCacheKey($e);let ut=X.programs;X.environment=I.isMeshStandardMaterial?Q.environment:null,X.fog=Q.fog,X.envMap=(I.isMeshStandardMaterial?Te:Ue).get(I.envMap||X.environment),ut===void 0&&(I.addEventListener("dispose",Ot),ut=new Map,X.programs=ut);let ht=ut.get(rt);if(ht!==void 0){if(X.currentProgram===ht&&X.lightsStateVersion===Je)return Ja(I,$e),ht}else $e.uniforms=et.getUniforms(I),I.onBuild(se,$e,v),I.onBeforeCompile($e,v),ht=et.acquireProgram($e,rt),ut.set(rt,ht),X.uniforms=$e.uniforms;const pt=X.uniforms;(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(pt.clippingPlanes=ee.uniform),Ja(I,$e),X.needsLights=uu(I),X.lightsStateVersion=Je,X.needsLights&&(pt.ambientLightColor.value=ce.state.ambient,pt.lightProbe.value=ce.state.probe,pt.directionalLights.value=ce.state.directional,pt.directionalLightShadows.value=ce.state.directionalShadow,pt.spotLights.value=ce.state.spot,pt.spotLightShadows.value=ce.state.spotShadow,pt.rectAreaLights.value=ce.state.rectArea,pt.ltc_1.value=ce.state.rectAreaLTC1,pt.ltc_2.value=ce.state.rectAreaLTC2,pt.pointLights.value=ce.state.point,pt.pointLightShadows.value=ce.state.pointShadow,pt.hemisphereLights.value=ce.state.hemi,pt.directionalShadowMap.value=ce.state.directionalShadowMap,pt.directionalShadowMatrix.value=ce.state.directionalShadowMatrix,pt.spotShadowMap.value=ce.state.spotShadowMap,pt.spotLightMatrix.value=ce.state.spotLightMatrix,pt.spotLightMap.value=ce.state.spotLightMap,pt.pointShadowMap.value=ce.state.pointShadowMap,pt.pointShadowMatrix.value=ce.state.pointShadowMatrix);const bt=ht.getUniforms(),cn=Hc.seqWithValue(bt.seq,pt);return X.currentProgram=ht,X.uniformsList=cn,ht}function Ja(I,Q){const se=ne.get(I);se.outputColorSpace=Q.outputColorSpace,se.instancing=Q.instancing,se.skinning=Q.skinning,se.morphTargets=Q.morphTargets,se.morphNormals=Q.morphNormals,se.morphColors=Q.morphColors,se.morphTargetsCount=Q.morphTargetsCount,se.numClippingPlanes=Q.numClippingPlanes,se.numIntersection=Q.numClipIntersection,se.vertexAlphas=Q.vertexAlphas,se.vertexTangents=Q.vertexTangents,se.toneMapping=Q.toneMapping}function ja(I,Q,se,X,ce){Q.isScene!==!0&&(Q=xe),me.resetTextureUnits();const We=Q.fog,Je=X.isMeshStandardMaterial?Q.environment:null,$e=R===null?v.outputColorSpace:R.isXRRenderTarget===!0?R.texture.colorSpace:yi,rt=(X.isMeshStandardMaterial?Te:Ue).get(X.envMap||Je),ut=X.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,ht=!!X.normalMap&&!!se.attributes.tangent,pt=!!se.morphAttributes.position,bt=!!se.morphAttributes.normal,cn=!!se.morphAttributes.color,On=X.toneMapped?v.toneMapping:vi,oi=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,Ut=oi!==void 0?oi.length:0,mt=ne.get(X),Ir=y.state.lights;if(q===!0&&(he===!0||I!==N)){const Pt=I===N&&X.id===C;ee.setState(X,I,Pt)}let Zt=!1;X.version===mt.__version?(mt.needsLights&&mt.lightsStateVersion!==Ir.state.version||mt.outputColorSpace!==$e||ce.isInstancedMesh&&mt.instancing===!1||!ce.isInstancedMesh&&mt.instancing===!0||ce.isSkinnedMesh&&mt.skinning===!1||!ce.isSkinnedMesh&&mt.skinning===!0||mt.envMap!==rt||X.fog===!0&&mt.fog!==We||mt.numClippingPlanes!==void 0&&(mt.numClippingPlanes!==ee.numPlanes||mt.numIntersection!==ee.numIntersection)||mt.vertexAlphas!==ut||mt.vertexTangents!==ht||mt.morphTargets!==pt||mt.morphNormals!==bt||mt.morphColors!==cn||mt.toneMapping!==On||ye.isWebGL2===!0&&mt.morphTargetsCount!==Ut)&&(Zt=!0):(Zt=!0,mt.__version=X.version);let ai=mt.currentProgram;Zt===!0&&(ai=ys(X,Q,ce));let Oi=!1,Cn=!1,Rt=!1;const st=ai.getUniforms(),dn=mt.uniforms;if(Ce.useProgram(ai.program)&&(Oi=!0,Cn=!0,Rt=!0),X.id!==C&&(C=X.id,Cn=!0),Oi||N!==I){if(st.setValue(B,"projectionMatrix",I.projectionMatrix),ye.logarithmicDepthBuffer&&st.setValue(B,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),N!==I&&(N=I,Cn=!0,Rt=!0),X.isShaderMaterial||X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshStandardMaterial||X.envMap){const Pt=st.map.cameraPosition;Pt!==void 0&&Pt.setValue(B,le.setFromMatrixPosition(I.matrixWorld))}(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&st.setValue(B,"isOrthographic",I.isOrthographicCamera===!0),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial||X.isShadowMaterial||ce.isSkinnedMesh)&&st.setValue(B,"viewMatrix",I.matrixWorldInverse)}if(ce.isSkinnedMesh){st.setOptional(B,ce,"bindMatrix"),st.setOptional(B,ce,"bindMatrixInverse");const Pt=ce.skeleton;Pt&&(ye.floatVertexTextures?(Pt.boneTexture===null&&Pt.computeBoneTexture(),st.setValue(B,"boneTexture",Pt.boneTexture,me),st.setValue(B,"boneTextureSize",Pt.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Jt=se.morphAttributes;if((Jt.position!==void 0||Jt.normal!==void 0||Jt.color!==void 0&&ye.isWebGL2===!0)&&Ae.update(ce,se,ai),(Cn||mt.receiveShadow!==ce.receiveShadow)&&(mt.receiveShadow=ce.receiveShadow,st.setValue(B,"receiveShadow",ce.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(dn.envMap.value=rt,dn.flipEnvMap.value=rt.isCubeTexture&&rt.isRenderTargetTexture===!1?-1:1),Cn&&(st.setValue(B,"toneMappingExposure",v.toneMappingExposure),mt.needsLights&&wo(dn,Rt),We&&X.fog===!0&&vt.refreshFogUniforms(dn,We),vt.refreshMaterialUniforms(dn,X,V,K,pe),Hc.upload(B,mt.uniformsList,dn,me)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(Hc.upload(B,mt.uniformsList,dn,me),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&st.setValue(B,"center",ce.center),st.setValue(B,"modelViewMatrix",ce.modelViewMatrix),st.setValue(B,"normalMatrix",ce.normalMatrix),st.setValue(B,"modelMatrix",ce.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const Pt=X.uniformsGroups;for(let li=0,sr=Pt.length;li<sr;li++)if(ye.isWebGL2){const un=Pt[li];Ve.update(un,ai),Ve.bind(un,ai)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return ai}function wo(I,Q){I.ambientLightColor.needsUpdate=Q,I.lightProbe.needsUpdate=Q,I.directionalLights.needsUpdate=Q,I.directionalLightShadows.needsUpdate=Q,I.pointLights.needsUpdate=Q,I.pointLightShadows.needsUpdate=Q,I.spotLights.needsUpdate=Q,I.spotLightShadows.needsUpdate=Q,I.rectAreaLights.needsUpdate=Q,I.hemisphereLights.needsUpdate=Q}function uu(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return R},this.setRenderTargetTextures=function(I,Q,se){ne.get(I.texture).__webglTexture=Q,ne.get(I.depthTexture).__webglTexture=se;const X=ne.get(I);X.__hasExternalTextures=!0,X.__hasExternalTextures&&(X.__autoAllocateDepthBuffer=se===void 0,X.__autoAllocateDepthBuffer||je.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),X.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,Q){const se=ne.get(I);se.__webglFramebuffer=Q,se.__useDefaultFramebuffer=Q===void 0},this.setRenderTarget=function(I,Q=0,se=0){R=I,E=Q,b=se;let X=!0,ce=null,We=!1,Je=!1;if(I){const rt=ne.get(I);rt.__useDefaultFramebuffer!==void 0?(Ce.bindFramebuffer(B.FRAMEBUFFER,null),X=!1):rt.__webglFramebuffer===void 0?me.setupRenderTarget(I):rt.__hasExternalTextures&&me.rebindTextures(I,ne.get(I.texture).__webglTexture,ne.get(I.depthTexture).__webglTexture);const ut=I.texture;(ut.isData3DTexture||ut.isDataArrayTexture||ut.isCompressedArrayTexture)&&(Je=!0);const ht=ne.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(ce=ht[Q],We=!0):ye.isWebGL2&&I.samples>0&&me.useMultisampledRTT(I)===!1?ce=ne.get(I).__webglMultisampledFramebuffer:ce=ht,O.copy(I.viewport),A.copy(I.scissor),L=I.scissorTest}else O.copy(ue).multiplyScalar(V).floor(),A.copy(ae).multiplyScalar(V).floor(),L=k;if(Ce.bindFramebuffer(B.FRAMEBUFFER,ce)&&ye.drawBuffers&&X&&Ce.drawBuffers(I,ce),Ce.viewport(O),Ce.scissor(A),Ce.setScissorTest(L),We){const rt=ne.get(I.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+Q,rt.__webglTexture,se)}else if(Je){const rt=ne.get(I.texture),ut=Q||0;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,rt.__webglTexture,se||0,ut)}C=-1},this.readRenderTargetPixels=function(I,Q,se,X,ce,We,Je){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let $e=ne.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Je!==void 0&&($e=$e[Je]),$e){Ce.bindFramebuffer(B.FRAMEBUFFER,$e);try{const rt=I.texture,ut=rt.format,ht=rt.type;if(ut!==Nn&&oe.convert(ut)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const pt=ht===ho&&(je.has("EXT_color_buffer_half_float")||ye.isWebGL2&&je.has("EXT_color_buffer_float"));if(ht!==tr&&oe.convert(ht)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ht===Qi&&(ye.isWebGL2||je.has("OES_texture_float")||je.has("WEBGL_color_buffer_float")))&&!pt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Q>=0&&Q<=I.width-X&&se>=0&&se<=I.height-ce&&B.readPixels(Q,se,X,ce,oe.convert(ut),oe.convert(ht),We)}finally{const rt=R!==null?ne.get(R).__webglFramebuffer:null;Ce.bindFramebuffer(B.FRAMEBUFFER,rt)}}},this.copyFramebufferToTexture=function(I,Q,se=0){const X=Math.pow(2,-se),ce=Math.floor(Q.image.width*X),We=Math.floor(Q.image.height*X);me.setTexture2D(Q,0),B.copyTexSubImage2D(B.TEXTURE_2D,se,0,0,I.x,I.y,ce,We),Ce.unbindTexture()},this.copyTextureToTexture=function(I,Q,se,X=0){const ce=Q.image.width,We=Q.image.height,Je=oe.convert(se.format),$e=oe.convert(se.type);me.setTexture2D(se,0),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,se.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,se.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,se.unpackAlignment),Q.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,X,I.x,I.y,ce,We,Je,$e,Q.image.data):Q.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,X,I.x,I.y,Q.mipmaps[0].width,Q.mipmaps[0].height,Je,Q.mipmaps[0].data):B.texSubImage2D(B.TEXTURE_2D,X,I.x,I.y,Je,$e,Q.image),X===0&&se.generateMipmaps&&B.generateMipmap(B.TEXTURE_2D),Ce.unbindTexture()},this.copyTextureToTexture3D=function(I,Q,se,X,ce=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const We=I.max.x-I.min.x+1,Je=I.max.y-I.min.y+1,$e=I.max.z-I.min.z+1,rt=oe.convert(X.format),ut=oe.convert(X.type);let ht;if(X.isData3DTexture)me.setTexture3D(X,0),ht=B.TEXTURE_3D;else if(X.isDataArrayTexture)me.setTexture2DArray(X,0),ht=B.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,X.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,X.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,X.unpackAlignment);const pt=B.getParameter(B.UNPACK_ROW_LENGTH),bt=B.getParameter(B.UNPACK_IMAGE_HEIGHT),cn=B.getParameter(B.UNPACK_SKIP_PIXELS),On=B.getParameter(B.UNPACK_SKIP_ROWS),oi=B.getParameter(B.UNPACK_SKIP_IMAGES),Ut=se.isCompressedTexture?se.mipmaps[0]:se.image;B.pixelStorei(B.UNPACK_ROW_LENGTH,Ut.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Ut.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,I.min.x),B.pixelStorei(B.UNPACK_SKIP_ROWS,I.min.y),B.pixelStorei(B.UNPACK_SKIP_IMAGES,I.min.z),se.isDataTexture||se.isData3DTexture?B.texSubImage3D(ht,ce,Q.x,Q.y,Q.z,We,Je,$e,rt,ut,Ut.data):se.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),B.compressedTexSubImage3D(ht,ce,Q.x,Q.y,Q.z,We,Je,$e,rt,Ut.data)):B.texSubImage3D(ht,ce,Q.x,Q.y,Q.z,We,Je,$e,rt,ut,Ut),B.pixelStorei(B.UNPACK_ROW_LENGTH,pt),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,bt),B.pixelStorei(B.UNPACK_SKIP_PIXELS,cn),B.pixelStorei(B.UNPACK_SKIP_ROWS,On),B.pixelStorei(B.UNPACK_SKIP_IMAGES,oi),ce===0&&X.generateMipmaps&&B.generateMipmap(ht),Ce.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?me.setTextureCube(I,0):I.isData3DTexture?me.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?me.setTexture2DArray(I,0):me.setTexture2D(I,0),Ce.unbindTexture()},this.resetState=function(){E=0,b=0,R=null,Ce.reset(),Oe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ot?Sr:jf}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Sr?ot:yi}}class g_ extends od{}g_.prototype.isWebGL1Renderer=!0;class eu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new eu(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class tu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new tu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class ad extends Et{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class nu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=va,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Xn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Xn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Xn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Tn=new U;class hs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.applyMatrix4(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.applyNormalMatrix(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Tn.fromBufferAttribute(this,t),Tn.transformDirection(e),this.setXYZ(t,Tn.x,Tn.y,Tn.z);return this}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Wn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Wn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Wn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Wn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new It(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new hs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ld extends Mn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Zs;const Zo=new U,Js=new U,js=new U,Ks=new de,Jo=new de,__=new it,hc=new U,jo=new U,fc=new U,Km=new de,Fh=new de,Qm=new de;class v_ extends Et{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Zs===void 0){Zs=new dt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new nu(t,5);Zs.setIndex([0,1,2,0,2,3]),Zs.setAttribute("position",new hs(n,3,0,!1)),Zs.setAttribute("uv",new hs(n,2,3,!1))}this.geometry=Zs,this.material=e!==void 0?e:new ld,this.center=new de(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Js.setFromMatrixScale(this.matrixWorld),__.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),js.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Js.multiplyScalar(-js.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;dc(hc.set(-.5,-.5,0),js,l,Js,i,s),dc(jo.set(.5,-.5,0),js,l,Js,i,s),dc(fc.set(.5,.5,0),js,l,Js,i,s),Km.set(0,0),Fh.set(1,0),Qm.set(1,1);let c=e.ray.intersectTriangle(hc,jo,fc,!1,Zo);if(c===null&&(dc(jo.set(-.5,.5,0),js,l,Js,i,s),Fh.set(0,1),c=e.ray.intersectTriangle(hc,fc,jo,!1,Zo),c===null))return;const u=e.ray.origin.distanceTo(Zo);u<e.near||u>e.far||t.push({distance:u,point:Zo.clone(),uv:Dn.getInterpolation(Zo,hc,jo,fc,Km,Fh,Qm,new de),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function dc(r,e,t,n,i,s){Ks.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Jo.x=s*Ks.x-i*Ks.y,Jo.y=i*Ks.x+s*Ks.y):Jo.copy(Ks),r.copy(e),r.x+=Jo.x,r.y+=Jo.y,r.applyMatrix4(__)}const pc=new U,$m=new U;class y_ extends Et{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){pc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(pc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){pc.setFromMatrixPosition(e.matrixWorld),$m.setFromMatrixPosition(this.matrixWorld);const n=pc.distanceTo($m)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const eg=new U,tg=new Ct,ng=new Ct,Rw=new U,ig=new it,Qs=new U;class x_ extends fn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new it,this.bindMatrixInverse=new it,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Di),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Qs.fromBufferAttribute(t,n),this.applyBoneTransform(n,Qs),this.boundingBox.expandByPoint(Qs)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Ni),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Qs.fromBufferAttribute(t,n),this.applyBoneTransform(n,Qs),this.boundingSphere.expandByPoint(Qs)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ct,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;tg.fromBufferAttribute(i.attributes.skinIndex,e),ng.fromBufferAttribute(i.attributes.skinWeight,e),eg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=ng.getComponent(s);if(l!==0){const c=tg.getComponent(s);ig.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(Rw.copy(eg).applyMatrix4(ig),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class cd extends Et{constructor(){super(),this.isBone=!0,this.type="Bone"}}class uo extends Yt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=Xt,d=Xt,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const rg=new it,Cw=new it;class iu{constructor(e=[],t=[]){this.uuid=Xn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new it)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new it;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:Cw;rg.multiplyMatrices(c,t[s]),rg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new iu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=e_(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new uo(t,e,e,Nn,Qi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new cd),this.bones.push(l),this.boneInverses.push(new it().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class mo extends It{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const $s=new it,sg=new it,mc=[],og=new Di,Pw=new it,Ko=new fn,Qo=new Ni;class M_ extends fn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new mo(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Pw)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Di),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,$s),og.copy(e.boundingBox).applyMatrix4($s),this.boundingBox.union(og)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ni),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,$s),Qo.copy(e.boundingSphere).applyMatrix4($s),this.boundingSphere.union(Qo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Ko.geometry=this.geometry,Ko.material=this.material,Ko.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Qo.copy(this.boundingSphere),Qo.applyMatrix4(n),e.ray.intersectsSphere(Qo)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,$s),sg.multiplyMatrices(n,$s),Ko.matrixWorld=sg,Ko.raycast(e,mc);for(let l=0,c=mc.length;l<c;l++){const u=mc[l];u.instanceId=s,u.object=this,t.push(u)}mc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new mo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Rn extends Mn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ag=new U,lg=new U,cg=new it,Oh=new Pa,gc=new Ni;class br extends Et{constructor(e=new dt,t=new Rn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)ag.fromBufferAttribute(t,i-1),lg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ag.distanceTo(lg);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),gc.copy(n.boundingSphere),gc.applyMatrix4(i),gc.radius+=s,e.ray.intersectsSphere(gc)===!1)return;cg.copy(i).invert(),Oh.copy(e.ray).applyMatrix4(cg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new U,d=new U,p=new U,m=new U,_=this.isLineSegments?2:1,y=n.index,M=n.attributes.position;if(y!==null){const v=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let E=v,b=w-1;E<b;E+=_){const R=y.getX(E),C=y.getX(E+1);if(h.fromBufferAttribute(M,R),d.fromBufferAttribute(M,C),Oh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const O=e.ray.origin.distanceTo(m);O<e.near||O>e.far||t.push({distance:O,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,l.start),w=Math.min(M.count,l.start+l.count);for(let E=v,b=w-1;E<b;E+=_){if(h.fromBufferAttribute(M,E),d.fromBufferAttribute(M,E+1),Oh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(m);C<e.near||C>e.far||t.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const ug=new U,hg=new U;class Fi extends br{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)ug.fromBufferAttribute(t,i),hg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+ug.distanceTo(hg);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class S_ extends br{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class ru extends Mn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const fg=new it,Nf=new Pa,_c=new Ni,vc=new U;let E_=class extends Et{constructor(e=new dt,t=new ru){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_c.copy(n.boundingSphere),_c.applyMatrix4(i),_c.radius+=s,e.ray.intersectsSphere(_c)===!1)return;fg.copy(i).invert(),Nf.copy(e.ray).applyMatrix4(fg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),_=Math.min(h.count,l.start+l.count);for(let y=m,S=_;y<S;y++){const M=h.getX(y);vc.fromBufferAttribute(p,M),dg(vc,M,u,i,e,t,this)}}else{const m=Math.max(0,l.start),_=Math.min(p.count,l.start+l.count);for(let y=m,S=_;y<S;y++)vc.fromBufferAttribute(p,y),dg(vc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}};function dg(r,e,t,n,i,s,l){const c=Nf.distanceSqToPoint(r);if(c<t){const u=new U;Nf.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class Lw extends Yt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:qt,this.magFilter=s!==void 0?s:qt,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Iw extends Yt{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=Xt,this.minFilter=Xt,this.generateMipmaps=!1,this.needsUpdate=!0}}class ud extends Yt{constructor(e,t,n,i,s,l,c,u,h,d,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Uw extends ud{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=xn}}class Dw extends Yt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Mi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const d=n[i],m=n[i+1]-d,_=(l-d)/m;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new de:new U);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],s=[],l=[],c=new U,u=new it;for(let _=0;_<=e;_++){const y=_/e;i[_]=this.getTangentAt(y,new U)}s[0]=new U,l[0]=new U;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),l[_]=l[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Gt(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,y))}l[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(Gt(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],_*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class su extends Mi{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new de,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,_=h-this.aY;u=m*d-_*p+this.aX,h=m*p+_*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class w_ extends su{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function hd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,d,p){let m=(l-s)/h-(c-s)/(h+d)+(c-l)/d,_=(c-l)/d-(u-l)/(d+p)+(u-c)/p;m*=d,_*=d,i(l,c,m,_)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const yc=new U,zh=new hd,Bh=new hd,kh=new hd;class T_ extends Mi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(yc.subVectors(i[0],i[1]).add(i[0]),h=yc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(yc.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=yc),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),_),S=Math.pow(p.distanceToSquared(m),_),M=Math.pow(m.distanceToSquared(d),_);S<1e-4&&(S=1),y<1e-4&&(y=S),M<1e-4&&(M=S),zh.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,S,M),Bh.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,S,M),kh.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,S,M)}else this.curveType==="catmullrom"&&(zh.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),Bh.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),kh.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(zh.calc(u),Bh.calc(u),kh.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function pg(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function Nw(r,e){const t=1-r;return t*t*e}function Fw(r,e){return 2*(1-r)*r*e}function Ow(r,e){return r*r*e}function ca(r,e,t,n){return Nw(r,e)+Fw(r,t)+Ow(r,n)}function zw(r,e){const t=1-r;return t*t*t*e}function Bw(r,e){const t=1-r;return 3*t*t*r*e}function kw(r,e){return 3*(1-r)*r*r*e}function Hw(r,e){return r*r*r*e}function ua(r,e,t,n,i){return zw(r,e)+Bw(r,t)+kw(r,n)+Hw(r,i)}class fd extends Mi{constructor(e=new de,t=new de,n=new de,i=new de){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new de){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(ua(e,i.x,s.x,l.x,c.x),ua(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class A_ extends Mi{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(ua(e,i.x,s.x,l.x,c.x),ua(e,i.y,s.y,l.y,c.y),ua(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ou extends Mi{constructor(e=new de,t=new de){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new de){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new de){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class b_ extends Mi{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class dd extends Mi{constructor(e=new de,t=new de,n=new de){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new de){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(ca(e,i.x,s.x,l.x),ca(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class pd extends Mi{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(ca(e,i.x,s.x,l.x),ca(e,i.y,s.y,l.y),ca(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class md extends Mi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new de){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(pg(c,u.x,h.x,d.x,p.x),pg(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new de().fromArray(i))}return this}}var gd=Object.freeze({__proto__:null,ArcCurve:w_,CatmullRomCurve3:T_,CubicBezierCurve:fd,CubicBezierCurve3:A_,EllipseCurve:su,LineCurve:ou,LineCurve3:b_,QuadraticBezierCurve:dd,QuadraticBezierCurve3:pd,SplineCurve:md});class R_ extends Mi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ou(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new gd[i.type]().fromJSON(i))}return this}}class xa extends R_{constructor(e){super(),this.type="Path",this.currentPoint=new de,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ou(this.currentPoint.clone(),new de(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new dd(this.currentPoint.clone(),new de(e,t),new de(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new fd(this.currentPoint.clone(),new de(e,t),new de(n,i),new de(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new md(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new su(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class xo extends dt{constructor(e=[new de(0,-.5),new de(.5,0),new de(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Gt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],d=1/t,p=new U,m=new de,_=new U,y=new U,S=new U;let M=0,v=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:M=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-M,_.z=v*0,S.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(S.x,S.y,S.z);break;default:M=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-M,_.z=v*0,y.copy(_),_.x+=S.x,_.y+=S.y,_.z+=S.z,_.normalize(),u.push(_.x,_.y,_.z),S.copy(y)}for(let w=0;w<=t;w++){const E=n+w*d*i,b=Math.sin(E),R=Math.cos(E);for(let C=0;C<=e.length-1;C++){p.x=e[C].x*b,p.y=e[C].y,p.z=e[C].x*R,l.push(p.x,p.y,p.z),m.x=w/t,m.y=C/(e.length-1),c.push(m.x,m.y);const N=u[3*C+0]*b,O=u[3*C+1],A=u[3*C+0]*R;h.push(N,O,A)}}for(let w=0;w<t;w++)for(let E=0;E<e.length-1;E++){const b=E+w*e.length,R=b,C=b+e.length,N=b+e.length+1,O=b+1;s.push(R,C,O),s.push(N,O,C)}this.setIndex(s),this.setAttribute("position",new Fe(l,3)),this.setAttribute("uv",new Fe(c,2)),this.setAttribute("normal",new Fe(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xo(e.points,e.segments,e.phiStart,e.phiLength)}}class Na extends xo{constructor(e=1,t=1,n=4,i=8){const s=new xa;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Na(e.radius,e.length,e.capSegments,e.radialSegments)}}class Fa extends dt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new U,d=new de;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const _=n+p/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),l.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(l[m]/e+1)/2,d.y=(l[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Fe(l,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fa(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ms extends dt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],_=[];let y=0;const S=[],M=n/2;let v=0;w(),l===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(d),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(m,3)),this.setAttribute("uv",new Fe(_,2));function w(){const b=new U,R=new U;let C=0;const N=(t-e)/n;for(let O=0;O<=s;O++){const A=[],L=O/s,z=L*(t-e)+e;for(let K=0;K<=i;K++){const V=K/i,Y=V*u+c,$=Math.sin(Y),ue=Math.cos(Y);R.x=z*$,R.y=-L*n+M,R.z=z*ue,p.push(R.x,R.y,R.z),b.set($,N,ue).normalize(),m.push(b.x,b.y,b.z),_.push(V,1-L),A.push(y++)}S.push(A)}for(let O=0;O<i;O++)for(let A=0;A<s;A++){const L=S[A][O],z=S[A+1][O],K=S[A+1][O+1],V=S[A][O+1];d.push(L,z,V),d.push(z,K,V),C+=6}h.addGroup(v,C,0),v+=C}function E(b){const R=y,C=new de,N=new U;let O=0;const A=b===!0?e:t,L=b===!0?1:-1;for(let K=1;K<=i;K++)p.push(0,M*L,0),m.push(0,L,0),_.push(.5,.5),y++;const z=y;for(let K=0;K<=i;K++){const Y=K/i*u+c,$=Math.cos(Y),ue=Math.sin(Y);N.x=A*ue,N.y=M*L,N.z=A*$,p.push(N.x,N.y,N.z),m.push(0,L,0),C.x=$*.5+.5,C.y=ue*.5*L+.5,_.push(C.x,C.y),y++}for(let K=0;K<i;K++){const V=R+K,Y=z+K;b===!0?d.push(Y,Y+1,V):d.push(Y+1,Y,V),O+=3}h.addGroup(v,O,b===!0?1:2),v+=O}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ms(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Oa extends ms{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new Oa(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class rr extends dt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),d(),this.setAttribute("position",new Fe(s,3)),this.setAttribute("normal",new Fe(s.slice(),3)),this.setAttribute("uv",new Fe(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const E=new U,b=new U,R=new U;for(let C=0;C<t.length;C+=3)_(t[C+0],E),_(t[C+1],b),_(t[C+2],R),u(E,b,R,w)}function u(w,E,b,R){const C=R+1,N=[];for(let O=0;O<=C;O++){N[O]=[];const A=w.clone().lerp(b,O/C),L=E.clone().lerp(b,O/C),z=C-O;for(let K=0;K<=z;K++)K===0&&O===C?N[O][K]=A:N[O][K]=A.clone().lerp(L,K/z)}for(let O=0;O<C;O++)for(let A=0;A<2*(C-O)-1;A++){const L=Math.floor(A/2);A%2===0?(m(N[O][L+1]),m(N[O+1][L]),m(N[O][L])):(m(N[O][L+1]),m(N[O+1][L+1]),m(N[O+1][L]))}}function h(w){const E=new U;for(let b=0;b<s.length;b+=3)E.x=s[b+0],E.y=s[b+1],E.z=s[b+2],E.normalize().multiplyScalar(w),s[b+0]=E.x,s[b+1]=E.y,s[b+2]=E.z}function d(){const w=new U;for(let E=0;E<s.length;E+=3){w.x=s[E+0],w.y=s[E+1],w.z=s[E+2];const b=M(w)/2/Math.PI+.5,R=v(w)/Math.PI+.5;l.push(b,1-R)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const E=l[w+0],b=l[w+2],R=l[w+4],C=Math.max(E,b,R),N=Math.min(E,b,R);C>.9&&N<.1&&(E<.2&&(l[w+0]+=1),b<.2&&(l[w+2]+=1),R<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function _(w,E){const b=w*3;E.x=e[b+0],E.y=e[b+1],E.z=e[b+2]}function y(){const w=new U,E=new U,b=new U,R=new U,C=new de,N=new de,O=new de;for(let A=0,L=0;A<s.length;A+=9,L+=6){w.set(s[A+0],s[A+1],s[A+2]),E.set(s[A+3],s[A+4],s[A+5]),b.set(s[A+6],s[A+7],s[A+8]),C.set(l[L+0],l[L+1]),N.set(l[L+2],l[L+3]),O.set(l[L+4],l[L+5]),R.copy(w).add(E).add(b).divideScalar(3);const z=M(R);S(C,L+0,w,z),S(N,L+2,E,z),S(O,L+4,b,z)}}function S(w,E,b,R){R<0&&w.x===1&&(l[E]=w.x-1),b.x===0&&b.z===0&&(l[E]=R/2/Math.PI+.5)}function M(w){return Math.atan2(w.z,-w.x)}function v(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rr(e.vertices,e.indices,e.radius,e.details)}}class za extends rr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new za(e.radius,e.detail)}}const xc=new U,Mc=new U,Hh=new U,Sc=new Dn;class C_ extends dt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(as*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},_=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:S,b:M,c:v}=Sc;if(S.fromBufferAttribute(c,h[0]),M.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),Sc.getNormal(Hh),p[0]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,p[1]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const E=(w+1)%3,b=p[w],R=p[E],C=Sc[d[w]],N=Sc[d[E]],O=`${b}_${R}`,A=`${R}_${b}`;A in m&&m[A]?(Hh.dot(m[A].normal)<=s&&(_.push(C.x,C.y,C.z),_.push(N.x,N.y,N.z)),m[A]=null):O in m||(m[O]={index0:h[w],index1:h[E],normal:Hh.clone()})}}for(const y in m)if(m[y]){const{index0:S,index1:M}=m[y];xc.fromBufferAttribute(c,S),Mc.fromBufferAttribute(c,M),_.push(xc.x,xc.y,xc.z),_.push(Mc.x,Mc.y,Mc.z)}this.setAttribute("position",new Fe(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class cs extends xa{constructor(e){super(e),this.uuid=Xn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new xa().fromJSON(i))}return this}}const Gw={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=P_(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,d,p,m,_;if(n&&(s=Yw(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);_=Math.max(h-c,d-u),_=_!==0?32767/_:0}return Ma(s,l,t,c,u,_,0),l}};function P_(r,e,t,n,i){let s,l;if(i===rT(r,e,t,n)>0)for(s=e;s<t;s+=n)l=mg(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=mg(s,r[s],r[s+1],l);return l&&au(l,l.next)&&(Ea(l),l=l.next),l}function fs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(au(t,t.next)||Bt(t.prev,t,t.next)===0)){if(Ea(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ma(r,e,t,n,i,s,l){if(!r)return;!l&&s&&Qw(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?Ww(r,n,i,s):Vw(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Ea(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=Xw(fs(r),e,t),Ma(r,e,t,n,i,s,2)):l===2&&qw(r,e,t,n,i,s):Ma(fs(r),e,t,n,i,s,1);break}}}function Vw(r){const e=r.prev,t=r,n=r.next;if(Bt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,_=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=_&&ao(i,c,s,u,l,h,y.x,y.y)&&Bt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function Ww(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Bt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,d=i.y,p=s.y,m=l.y,_=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,S=c>u?c>h?c:h:u>h?u:h,M=d>p?d>m?d:m:p>m?p:m,v=Ff(_,y,e,t,n),w=Ff(S,M,e,t,n);let E=r.prevZ,b=r.nextZ;for(;E&&E.z>=v&&b&&b.z<=w;){if(E.x>=_&&E.x<=S&&E.y>=y&&E.y<=M&&E!==i&&E!==l&&ao(c,d,u,p,h,m,E.x,E.y)&&Bt(E.prev,E,E.next)>=0||(E=E.prevZ,b.x>=_&&b.x<=S&&b.y>=y&&b.y<=M&&b!==i&&b!==l&&ao(c,d,u,p,h,m,b.x,b.y)&&Bt(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;E&&E.z>=v;){if(E.x>=_&&E.x<=S&&E.y>=y&&E.y<=M&&E!==i&&E!==l&&ao(c,d,u,p,h,m,E.x,E.y)&&Bt(E.prev,E,E.next)>=0)return!1;E=E.prevZ}for(;b&&b.z<=w;){if(b.x>=_&&b.x<=S&&b.y>=y&&b.y<=M&&b!==i&&b!==l&&ao(c,d,u,p,h,m,b.x,b.y)&&Bt(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function Xw(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!au(i,s)&&L_(i,n,n.next,s)&&Sa(i,s)&&Sa(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Ea(n),Ea(n.next),n=r=s),n=n.next}while(n!==r);return fs(n)}function qw(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&tT(l,c)){let u=I_(l,c);l=fs(l,l.next),u=fs(u,u.next),Ma(l,e,t,n,i,s,0),Ma(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function Yw(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=P_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(eT(h));for(i.sort(Zw),s=0;s<i.length;s++)t=Jw(i[s],t);return t}function Zw(r,e){return r.x-e.x}function Jw(r,e){const t=jw(r,e);if(!t)return e;const n=I_(t,r);return fs(n,n.next),fs(t,t.next)}function jw(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&ao(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Sa(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&Kw(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function Kw(r,e){return Bt(r.prev,r,e.prev)<0&&Bt(e.next,r,r.next)<0}function Qw(r,e,t,n){let i=r;do i.z===0&&(i.z=Ff(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,$w(i)}function $w(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function Ff(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function eT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ao(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function tT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!nT(r,e)&&(Sa(r,e)&&Sa(e,r)&&iT(r,e)&&(Bt(r.prev,r,e.prev)||Bt(r,e.prev,e))||au(r,e)&&Bt(r.prev,r,r.next)>0&&Bt(e.prev,e,e.next)>0)}function Bt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function au(r,e){return r.x===e.x&&r.y===e.y}function L_(r,e,t,n){const i=wc(Bt(r,e,t)),s=wc(Bt(r,e,n)),l=wc(Bt(t,n,r)),c=wc(Bt(t,n,e));return!!(i!==s&&l!==c||i===0&&Ec(r,t,e)||s===0&&Ec(r,n,e)||l===0&&Ec(t,r,n)||c===0&&Ec(t,e,n))}function Ec(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function wc(r){return r>0?1:r<0?-1:0}function nT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&L_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Sa(r,e){return Bt(r.prev,r,r.next)<0?Bt(r,e,r.next)>=0&&Bt(r,r.prev,e)>=0:Bt(r,e,r.prev)<0||Bt(r,r.next,e)<0}function iT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function I_(r,e){const t=new Of(r.i,r.x,r.y),n=new Of(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function mg(r,e,t,n){const i=new Of(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ea(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Of(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function rT(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Ii{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Ii.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];gg(e),_g(n,e);let l=e.length;t.forEach(gg);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,_g(n,t[u]);const c=Gw.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function gg(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function _g(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Ba extends dt{constructor(e=new cs([new de(.5,.5),new de(-.5,.5),new de(-.5,-.5),new de(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Fe(i,3)),this.setAttribute("uv",new Fe(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:_-.1,S=t.bevelOffset!==void 0?t.bevelOffset:0,M=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:sT;let E,b=!1,R,C,N,O;v&&(E=v.getSpacedPoints(d),b=!0,m=!1,R=v.computeFrenetFrames(d,!1),C=new U,N=new U,O=new U),m||(M=0,_=0,y=0,S=0);const A=c.extractPoints(h);let L=A.shape;const z=A.holes;if(!Ii.isClockWise(L)){L=L.reverse();for(let fe=0,ne=z.length;fe<ne;fe++){const me=z[fe];Ii.isClockWise(me)&&(z[fe]=me.reverse())}}const V=Ii.triangulateShape(L,z),Y=L;for(let fe=0,ne=z.length;fe<ne;fe++){const me=z[fe];L=L.concat(me)}function $(fe,ne,me){return ne||console.error("THREE.ExtrudeGeometry: vec does not exist"),fe.clone().addScaledVector(ne,me)}const ue=L.length,ae=V.length;function k(fe,ne,me){let Ue,Te,qe;const Ye=fe.x-ne.x,Ge=fe.y-ne.y,et=me.x-fe.x,vt=me.y-fe.y,F=Ye*Ye+Ge*Ge,P=Ye*vt-Ge*et;if(Math.abs(P)>Number.EPSILON){const ee=Math.sqrt(F),ge=Math.sqrt(et*et+vt*vt),ve=ne.x-Ge/ee,Ae=ne.y+Ye/ee,Ke=me.x-vt/ge,Ie=me.y+et/ge,oe=((Ke-ve)*vt-(Ie-Ae)*et)/(Ye*vt-Ge*et);Ue=ve+Ye*oe-fe.x,Te=Ae+Ge*oe-fe.y;const Oe=Ue*Ue+Te*Te;if(Oe<=2)return new de(Ue,Te);qe=Math.sqrt(Oe/2)}else{let ee=!1;Ye>Number.EPSILON?et>Number.EPSILON&&(ee=!0):Ye<-Number.EPSILON?et<-Number.EPSILON&&(ee=!0):Math.sign(Ge)===Math.sign(vt)&&(ee=!0),ee?(Ue=-Ge,Te=Ye,qe=Math.sqrt(F)):(Ue=Ye,Te=Ge,qe=Math.sqrt(F/2))}return new de(Ue/qe,Te/qe)}const J=[];for(let fe=0,ne=Y.length,me=ne-1,Ue=fe+1;fe<ne;fe++,me++,Ue++)me===ne&&(me=0),Ue===ne&&(Ue=0),J[fe]=k(Y[fe],Y[me],Y[Ue]);const q=[];let he,pe=J.concat();for(let fe=0,ne=z.length;fe<ne;fe++){const me=z[fe];he=[];for(let Ue=0,Te=me.length,qe=Te-1,Ye=Ue+1;Ue<Te;Ue++,qe++,Ye++)qe===Te&&(qe=0),Ye===Te&&(Ye=0),he[Ue]=k(me[Ue],me[qe],me[Ye]);q.push(he),pe=pe.concat(he)}for(let fe=0;fe<M;fe++){const ne=fe/M,me=_*Math.cos(ne*Math.PI/2),Ue=y*Math.sin(ne*Math.PI/2)+S;for(let Te=0,qe=Y.length;Te<qe;Te++){const Ye=$(Y[Te],J[Te],Ue);B(Ye.x,Ye.y,-me)}for(let Te=0,qe=z.length;Te<qe;Te++){const Ye=z[Te];he=q[Te];for(let Ge=0,et=Ye.length;Ge<et;Ge++){const vt=$(Ye[Ge],he[Ge],Ue);B(vt.x,vt.y,-me)}}}const Z=y+S;for(let fe=0;fe<ue;fe++){const ne=m?$(L[fe],pe[fe],Z):L[fe];b?(N.copy(R.normals[0]).multiplyScalar(ne.x),C.copy(R.binormals[0]).multiplyScalar(ne.y),O.copy(E[0]).add(N).add(C),B(O.x,O.y,O.z)):B(ne.x,ne.y,0)}for(let fe=1;fe<=d;fe++)for(let ne=0;ne<ue;ne++){const me=m?$(L[ne],pe[ne],Z):L[ne];b?(N.copy(R.normals[fe]).multiplyScalar(me.x),C.copy(R.binormals[fe]).multiplyScalar(me.y),O.copy(E[fe]).add(N).add(C),B(O.x,O.y,O.z)):B(me.x,me.y,p/d*fe)}for(let fe=M-1;fe>=0;fe--){const ne=fe/M,me=_*Math.cos(ne*Math.PI/2),Ue=y*Math.sin(ne*Math.PI/2)+S;for(let Te=0,qe=Y.length;Te<qe;Te++){const Ye=$(Y[Te],J[Te],Ue);B(Ye.x,Ye.y,p+me)}for(let Te=0,qe=z.length;Te<qe;Te++){const Ye=z[Te];he=q[Te];for(let Ge=0,et=Ye.length;Ge<et;Ge++){const vt=$(Ye[Ge],he[Ge],Ue);b?B(vt.x,vt.y+E[d-1].y,E[d-1].x+me):B(vt.x,vt.y,p+me)}}}le(),xe();function le(){const fe=i.length/3;if(m){let ne=0,me=ue*ne;for(let Ue=0;Ue<ae;Ue++){const Te=V[Ue];Qe(Te[2]+me,Te[1]+me,Te[0]+me)}ne=d+M*2,me=ue*ne;for(let Ue=0;Ue<ae;Ue++){const Te=V[Ue];Qe(Te[0]+me,Te[1]+me,Te[2]+me)}}else{for(let ne=0;ne<ae;ne++){const me=V[ne];Qe(me[2],me[1],me[0])}for(let ne=0;ne<ae;ne++){const me=V[ne];Qe(me[0]+ue*d,me[1]+ue*d,me[2]+ue*d)}}n.addGroup(fe,i.length/3-fe,0)}function xe(){const fe=i.length/3;let ne=0;Se(Y,ne),ne+=Y.length;for(let me=0,Ue=z.length;me<Ue;me++){const Te=z[me];Se(Te,ne),ne+=Te.length}n.addGroup(fe,i.length/3-fe,1)}function Se(fe,ne){let me=fe.length;for(;--me>=0;){const Ue=me;let Te=me-1;Te<0&&(Te=fe.length-1);for(let qe=0,Ye=d+M*2;qe<Ye;qe++){const Ge=ue*qe,et=ue*(qe+1),vt=ne+Ue+Ge,F=ne+Te+Ge,P=ne+Te+et,ee=ne+Ue+et;je(vt,F,P,ee)}}}function B(fe,ne,me){u.push(fe),u.push(ne),u.push(me)}function Qe(fe,ne,me){ye(fe),ye(ne),ye(me);const Ue=i.length/3,Te=w.generateTopUV(n,i,Ue-3,Ue-2,Ue-1);Ce(Te[0]),Ce(Te[1]),Ce(Te[2])}function je(fe,ne,me,Ue){ye(fe),ye(ne),ye(Ue),ye(ne),ye(me),ye(Ue);const Te=i.length/3,qe=w.generateSideWallUV(n,i,Te-6,Te-3,Te-2,Te-1);Ce(qe[0]),Ce(qe[1]),Ce(qe[3]),Ce(qe[1]),Ce(qe[2]),Ce(qe[3])}function ye(fe){i.push(u[fe*3+0]),i.push(u[fe*3+1]),i.push(u[fe*3+2])}function Ce(fe){s.push(fe.x),s.push(fe.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return oT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new gd[i.type]().fromJSON(i)),new Ba(n,e.options)}}const sT={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new de(s,l),new de(c,u),new de(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],_=e[i*3+1],y=e[i*3+2],S=e[s*3],M=e[s*3+1],v=e[s*3+2];return Math.abs(c-d)<Math.abs(l-h)?[new de(l,1-u),new de(h,1-p),new de(m,1-y),new de(S,1-v)]:[new de(c,1-u),new de(d,1-p),new de(_,1-y),new de(M,1-v)]}};function oT(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ka extends rr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ka(e.radius,e.detail)}}class Mo extends rr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mo(e.radius,e.detail)}}class Ha extends dt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,_=new U,y=new de;for(let S=0;S<=i;S++){for(let M=0;M<=n;M++){const v=s+M/n*l;_.x=p*Math.cos(v),_.y=p*Math.sin(v),u.push(_.x,_.y,_.z),h.push(0,0,1),y.x=(_.x/t+1)/2,y.y=(_.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let S=0;S<i;S++){const M=S*(n+1);for(let v=0;v<n;v++){const w=v+M,E=w,b=w+n+1,R=w+n+2,C=w+1;c.push(E,b,C),c.push(b,R,C)}}this.setIndex(c),this.setAttribute("position",new Fe(u,3)),this.setAttribute("normal",new Fe(h,3)),this.setAttribute("uv",new Fe(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ha(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Ga extends dt{constructor(e=new cs([new de(0,.5),new de(-.5,-.5),new de(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Fe(i,3)),this.setAttribute("normal",new Fe(s,3)),this.setAttribute("uv",new Fe(l,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let _=m.shape;const y=m.holes;Ii.isClockWise(_)===!1&&(_=_.reverse());for(let M=0,v=y.length;M<v;M++){const w=y[M];Ii.isClockWise(w)===!0&&(y[M]=w.reverse())}const S=Ii.triangulateShape(_,y);for(let M=0,v=y.length;M<v;M++){const w=y[M];_=_.concat(w)}for(let M=0,v=_.length;M<v;M++){const w=_[M];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let M=0,v=S.length;M<v;M++){const w=S[M],E=w[0]+p,b=w[1]+p,R=w[2]+p;n.push(E,b,R),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return aT(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Ga(n,e.curveSegments)}}function aT(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class So extends dt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const d=[],p=new U,m=new U,_=[],y=[],S=[],M=[];for(let v=0;v<=n;v++){const w=[],E=v/n;let b=0;v===0&&l===0?b=.5/t:v===n&&u===Math.PI&&(b=-.5/t);for(let R=0;R<=t;R++){const C=R/t;p.x=-e*Math.cos(i+C*s)*Math.sin(l+E*c),p.y=e*Math.cos(l+E*c),p.z=e*Math.sin(i+C*s)*Math.sin(l+E*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),S.push(m.x,m.y,m.z),M.push(C+b,1-E),w.push(h++)}d.push(w)}for(let v=0;v<n;v++)for(let w=0;w<t;w++){const E=d[v][w+1],b=d[v][w],R=d[v+1][w],C=d[v+1][w+1];(v!==0||l>0)&&_.push(E,b,C),(v!==n-1||u<Math.PI)&&_.push(b,R,C)}this.setIndex(_),this.setAttribute("position",new Fe(y,3)),this.setAttribute("normal",new Fe(S,3)),this.setAttribute("uv",new Fe(M,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new So(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Va extends rr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Va(e.radius,e.detail)}}class Wa extends dt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],d=new U,p=new U,m=new U;for(let _=0;_<=n;_++)for(let y=0;y<=i;y++){const S=y/i*s,M=_/n*Math.PI*2;p.x=(e+t*Math.cos(M))*Math.cos(S),p.y=(e+t*Math.cos(M))*Math.sin(S),p.z=t*Math.sin(M),c.push(p.x,p.y,p.z),d.x=e*Math.cos(S),d.y=e*Math.sin(S),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const S=(i+1)*_+y-1,M=(i+1)*(_-1)+y-1,v=(i+1)*(_-1)+y,w=(i+1)*_+y;l.push(S,M,w),l.push(M,v,w)}this.setIndex(l),this.setAttribute("position",new Fe(c,3)),this.setAttribute("normal",new Fe(u,3)),this.setAttribute("uv",new Fe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wa(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Xa extends dt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new U,m=new U,_=new U,y=new U,S=new U,M=new U,v=new U;for(let E=0;E<=n;++E){const b=E/n*s*Math.PI*2;w(b,s,l,e,_),w(b+.01,s,l,e,y),M.subVectors(y,_),v.addVectors(y,_),S.crossVectors(M,v),v.crossVectors(S,M),S.normalize(),v.normalize();for(let R=0;R<=i;++R){const C=R/i*Math.PI*2,N=-t*Math.cos(C),O=t*Math.sin(C);p.x=_.x+(N*v.x+O*S.x),p.y=_.y+(N*v.y+O*S.y),p.z=_.z+(N*v.z+O*S.z),u.push(p.x,p.y,p.z),m.subVectors(p,_).normalize(),h.push(m.x,m.y,m.z),d.push(E/n),d.push(R/i)}}for(let E=1;E<=n;E++)for(let b=1;b<=i;b++){const R=(i+1)*(E-1)+(b-1),C=(i+1)*E+(b-1),N=(i+1)*E+b,O=(i+1)*(E-1)+b;c.push(R,C,O),c.push(C,N,O)}this.setIndex(c),this.setAttribute("position",new Fe(u,3)),this.setAttribute("normal",new Fe(h,3)),this.setAttribute("uv",new Fe(d,2));function w(E,b,R,C,N){const O=Math.cos(E),A=Math.sin(E),L=R/b*E,z=Math.cos(L);N.x=C*(2+z)*.5*O,N.y=C*(2+z)*A*.5,N.z=C*Math.sin(L)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xa(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class qa extends dt{constructor(e=new pd(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new U,u=new U,h=new de;let d=new U;const p=[],m=[],_=[],y=[];S(),this.setIndex(y),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(m,3)),this.setAttribute("uv",new Fe(_,2));function S(){for(let E=0;E<t;E++)M(E);M(s===!1?t:0),w(),v()}function M(E){d=e.getPointAt(E/t,d);const b=l.normals[E],R=l.binormals[E];for(let C=0;C<=i;C++){const N=C/i*Math.PI*2,O=Math.sin(N),A=-Math.cos(N);u.x=A*b.x+O*R.x,u.y=A*b.y+O*R.y,u.z=A*b.z+O*R.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let E=1;E<=t;E++)for(let b=1;b<=i;b++){const R=(i+1)*(E-1)+(b-1),C=(i+1)*E+(b-1),N=(i+1)*E+b,O=(i+1)*(E-1)+b;y.push(R,C,O),y.push(C,N,O)}}function w(){for(let E=0;E<=t;E++)for(let b=0;b<=i;b++)h.x=E/t,h.y=b/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new qa(new gd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class U_ extends dt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,s=new U;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,_=p.count;for(let y=m,S=m+_;y<S;y+=3)for(let M=0;M<3;M++){const v=c.getX(y+M),w=c.getX(y+(M+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,w),vg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,d),s.fromBufferAttribute(l,p),vg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Fe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function vg(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var yg=Object.freeze({__proto__:null,BoxGeometry:Pr,CapsuleGeometry:Na,CircleGeometry:Fa,ConeGeometry:Oa,CylinderGeometry:ms,DodecahedronGeometry:za,EdgesGeometry:C_,ExtrudeGeometry:Ba,IcosahedronGeometry:ka,LatheGeometry:xo,OctahedronGeometry:Mo,PlaneGeometry:vo,PolyhedronGeometry:rr,RingGeometry:Ha,ShapeGeometry:Ga,SphereGeometry:So,TetrahedronGeometry:Va,TorusGeometry:Wa,TorusKnotGeometry:Xa,TubeGeometry:qa,WireframeGeometry:U_});class D_ extends Mn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class N_ extends Ui{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class _d extends Mn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class F_ extends _d{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new de(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Gt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class O_ extends Mn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class z_ extends Mn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class B_ extends Mn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class k_ extends Mn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class H_ extends Mn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class G_ extends Rn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ri(r,e,t){return vd(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function is(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function vd(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function V_(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function zf(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function yd(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function lT(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let _=0;_<h.times.length;++_){const y=h.times[_]*i;if(!(y<t||y>=n)){p.push(h.times[_]);for(let S=0;S<d;++S)m.push(h.values[_*d+S])}}p.length!==0&&(h.times=is(p,h.times.constructor),h.values=is(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function cT(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=_/3);const y=c.times.length-1;let S;if(s<=c.times[0]){const v=d,w=p-d;S=ri(c.values,v,w)}else if(s>=c.times[y]){const v=y*p+d,w=v+p-d;S=ri(c.values,v,w)}else{const v=c.createInterpolant(),w=d,E=p-d;v.evaluate(s),S=ri(v.resultBuffer,w,E)}u==="quaternion"&&new Fn().fromArray(S).normalize().conjugate().toArray(S);const M=h.times.length;for(let v=0;v<M;++v){const w=v*_+m;if(u==="quaternion")Fn.multiplyQuaternionsFlat(h.values,w,S,0,h.values,w);else{const E=_-m*2;for(let b=0;b<E;++b)h.values[w+b]-=S[b]}}}return r.blendMode=Jf,r}const uT={arraySlice:ri,convertArray:is,isTypedArray:vd,getKeyframeOrder:V_,sortedArray:zf,flattenJSON:yd,subclip:lT,makeClipAdditive:cT};class Ya{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class W_ extends Ya{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:es,endingEnd:es}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case ts:s=e,c=2*t-n;break;case _a:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case ts:l=e,u=2*n-t;break;case _a:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,_=this._weightNext,y=(n-t)/(i-t),S=y*y,M=S*y,v=-m*M+2*m*S-m*y,w=(1+m)*M+(-1.5-2*m)*S+(-.5+m)*y+1,E=(-1-_)*M+(1.5+_)*S+.5*y,b=_*M-_*S;for(let R=0;R!==c;++R)s[R]=v*l[d+R]+w*l[h+R]+E*l[u+R]+b*l[p+R];return s}}class xd extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*d;return s}}class X_ extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Si{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=is(t,this.TimeBufferType),this.values=is(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:is(e.times,Array),values:is(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new X_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new xd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new W_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ma:t=this.InterpolantFactoryMethodDiscrete;break;case ga:t=this.InterpolantFactoryMethodLinear;break;case Bc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ma;case this.InterpolantFactoryMethodLinear:return ga;case this.InterpolantFactoryMethodSmooth:return Bc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=ri(n,s,l),this.values=ri(this.values,s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&vd(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=ri(this.times),t=ri(this.values),n=this.getValueSize(),i=this.getInterpolation()===Bc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,_=p+n;for(let y=0;y!==n;++y){const S=t[p+y];if(S!==t[m+y]||S!==t[_+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let _=0;_!==n;++_)t[m+_]=t[p+_]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=ri(e,0,l),this.values=ri(t,0,l*n)):(this.times=e,this.values=t),this}clone(){const e=ri(this.times,0),t=ri(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Si.prototype.TimeBufferType=Float32Array;Si.prototype.ValueBufferType=Float32Array;Si.prototype.DefaultInterpolation=ga;class gs extends Si{}gs.prototype.ValueTypeName="bool";gs.prototype.ValueBufferType=Array;gs.prototype.DefaultInterpolation=ma;gs.prototype.InterpolantFactoryMethodLinear=void 0;gs.prototype.InterpolantFactoryMethodSmooth=void 0;class Md extends Si{}Md.prototype.ValueTypeName="color";class wa extends Si{}wa.prototype.ValueTypeName="number";class q_ extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Fn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Eo extends Si{InterpolantFactoryMethodLinear(e){return new q_(this.times,this.values,this.getValueSize(),e)}}Eo.prototype.ValueTypeName="quaternion";Eo.prototype.DefaultInterpolation=ga;Eo.prototype.InterpolantFactoryMethodSmooth=void 0;class _s extends Si{}_s.prototype.ValueTypeName="string";_s.prototype.ValueBufferType=Array;_s.prototype.DefaultInterpolation=ma;_s.prototype.InterpolantFactoryMethodLinear=void 0;_s.prototype.InterpolantFactoryMethodSmooth=void 0;class Ta extends Si{}Ta.prototype.ValueTypeName="vector";class Aa{constructor(e,t=-1,n,i=jc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Xn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(fT(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(Si.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=V_(u);u=zf(u,1,d),h=zf(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new wa(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,_,y,S){if(_.length!==0){const M=[],v=[];yd(_,M,v,y),M.length!==0&&S.push(new p(m,M,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const _={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let S=0;S<m[y].morphTargets.length;S++)_[m[y].morphTargets[S]]=-1;for(const S in _){const M=[],v=[];for(let w=0;w!==m[y].morphTargets.length;++w){const E=m[y];M.push(E.time),v.push(E.morphTarget===S?1:0)}i.push(new wa(".morphTargetInfluence["+S+"]",M,v))}u=_.length*l}else{const _=".bones["+t[p].name+"]";n(Ta,_+".position",m,"pos",i),n(Eo,_+".quaternion",m,"rot",i),n(Ta,_+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function hT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return wa;case"vector":case"vector2":case"vector3":case"vector4":return Ta;case"color":return Md;case"quaternion":return Eo;case"bool":case"boolean":return gs;case"string":return _s}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function fT(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=hT(r.type);if(r.times===void 0){const t=[],n=[];yd(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const ds={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Sd{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,l,c),s=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const _=h[p],y=h[p+1];if(_.global&&(_.lastIndex=0),_.test(d))return y}return null}}}const Y_=new Sd;class qn{constructor(e){this.manager=e!==void 0?e:Y_,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const ji={};class dT extends Error{constructor(e,t){super(e),this.response=t}}class nr extends qn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ds.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ji[e]!==void 0){ji[e].push({onLoad:t,onProgress:n,onError:i});return}ji[e]=[],ji[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=ji[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),_=m?parseInt(m):0,y=_!==0;let S=0;const M=new ReadableStream({start(v){w();function w(){p.read().then(({done:E,value:b})=>{if(E)v.close();else{S+=b.byteLength;const R=new ProgressEvent("progress",{lengthComputable:y,loaded:S,total:_});for(let C=0,N=d.length;C<N;C++){const O=d[C];O.onProgress&&O.onProgress(R)}v.enqueue(b),w()}})}}});return new Response(M)}else throw new dT(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,_=new TextDecoder(m);return h.arrayBuffer().then(y=>_.decode(y))}}}).then(h=>{ds.add(e,h);const d=ji[e];delete ji[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onLoad&&_.onLoad(h)}}).catch(h=>{const d=ji[e];if(d===void 0)throw this.manager.itemError(e),h;delete ji[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class pT extends qn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new nr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Aa.parse(e[n]);t.push(i)}return t}}class mT extends qn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new ud,u=new nr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const _=s.parse(m,!0);l[p]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=qt),c.image=l,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const _=m.mipmaps.length/m.mipmapCount;for(let y=0;y<_;y++){l[y]={mipmaps:[]};for(let S=0;S<m.mipmapCount;S++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+S]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=qt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class ba extends qn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ds.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=ya("img");function u(){d(),ds.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class gT extends qn{constructor(e){super(e)}load(e,t,n,i){const s=new Ua,l=new ba(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class _T extends qn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new uo,c=new nr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){const h=s.parse(u);h&&(h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:xn,l.wrapT=h.wrapT!==void 0?h.wrapT:xn,l.magFilter=h.magFilter!==void 0?h.magFilter:qt,l.minFilter=h.minFilter!==void 0?h.minFilter:qt,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Ar),h.mipmapCount===1&&(l.minFilter=qt),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h))},n,i),l}}class vT extends qn{constructor(e){super(e)}load(e,t,n,i){const s=new Yt,l=new ba(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Lr extends Et{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Z_ extends Lr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Gh=new it,xg=new U,Mg=new U;class Ed{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new de(512,512),this.map=null,this.mapPass=null,this.matrix=new it,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Qc,this._frameExtents=new de(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;xg.setFromMatrixPosition(e.matrixWorld),t.position.copy(xg),Mg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Mg),t.updateMatrixWorld(),Gh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Gh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class yT extends Ed{constructor(){super(new ln(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=fo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class J_ extends Lr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new yT}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Sg=new it,$o=new U,Vh=new U;class xT extends Ed{constructor(){super(new ln(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new de(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),$o.setFromMatrixPosition(e.matrixWorld),n.position.copy($o),Vh.copy(n.position),Vh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Vh),n.updateMatrixWorld(),i.makeTranslation(-$o.x,-$o.y,-$o.z),Sg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Sg)}}class j_ extends Lr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new xT}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class MT extends Ed{constructor(){super(new Da(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class K_ extends Lr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.shadow=new MT}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Q_ extends Lr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class $_ extends Lr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class ev{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class lu extends Lr{constructor(e=new ev,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class cu extends qn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new nr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=cu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Le().setHex(l.value);break;case"v2":i.uniforms[s].value=new de().fromArray(l.value);break;case"v3":i.uniforms[s].value=new U().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Ct().fromArray(l.value);break;case"m3":i.uniforms[s].value=new gt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new it().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new de().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new de().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:D_,SpriteMaterial:ld,RawShaderMaterial:N_,ShaderMaterial:Ui,PointsMaterial:ru,MeshPhysicalMaterial:F_,MeshStandardMaterial:_d,MeshPhongMaterial:O_,MeshToonMaterial:z_,MeshNormalMaterial:B_,MeshLambertMaterial:k_,MeshDepthMaterial:rd,MeshDistanceMaterial:sd,MeshBasicMaterial:Cr,MeshMatcapMaterial:H_,LineDashedMaterial:G_,LineBasicMaterial:Rn,Material:Mn};return new t[e]}}class Bf{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class tv extends dt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class nv extends qn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new nr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,y){if(t[y]!==void 0)return t[y];const M=_.interleavedBuffers[y],v=s(_,M.buffer),w=ro(M.type,v),E=new nu(w,M.stride);return E.uuid=M.uuid,t[y]=E,E}function s(_,y){if(n[y]!==void 0)return n[y];const M=_.arrayBuffers[y],v=new Uint32Array(M).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new tv:new dt,c=e.data.index;if(c!==void 0){const _=ro(c.type,c.array);l.setIndex(new It(_,1))}const u=e.data.attributes;for(const _ in u){const y=u[_];let S;if(y.isInterleavedBufferAttribute){const M=i(e.data,y.data);S=new hs(M,y.itemSize,y.offset,y.normalized)}else{const M=ro(y.type,y.array),v=y.isInstancedBufferAttribute?mo:It;S=new v(M,y.itemSize,y.normalized)}y.name!==void 0&&(S.name=y.name),y.usage!==void 0&&S.setUsage(y.usage),y.updateRange!==void 0&&(S.updateRange.offset=y.updateRange.offset,S.updateRange.count=y.updateRange.count),l.setAttribute(_,S)}const h=e.data.morphAttributes;if(h)for(const _ in h){const y=h[_],S=[];for(let M=0,v=y.length;M<v;M++){const w=y[M];let E;if(w.isInterleavedBufferAttribute){const b=i(e.data,w.data);E=new hs(b,w.itemSize,w.offset,w.normalized)}else{const b=ro(w.type,w.array);E=new It(b,w.itemSize,w.normalized)}w.name!==void 0&&(E.name=w.name),S.push(E)}l.morphAttributes[_]=S}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let _=0,y=p.length;_!==y;++_){const S=p[_];l.addGroup(S.start,S.count,S.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const _=new U;m.center!==void 0&&_.fromArray(m.center),l.boundingSphere=new Ni(_,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class ST extends qn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?Bf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new nr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Bf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new nr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new cs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new iu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new nv;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in yg?c=yg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new cu;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Aa.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(d)}else return u.data?{data:ro(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Sd(t);s=new ba(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const _=[];for(let y=0,S=m.length;y<S;y++){const M=m[y],v=c(M);v!==null&&(v instanceof HTMLImageElement?_.push(v):_.push(new uo(v.data,v.width,v.height)))}i[p.uuid]=new ns(_)}else{const _=c(p.url);i[p.uuid]=new ns(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:ro(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new ba(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p],y=await s(_);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new uo(y.data,y.width,y.height)))}n[u.uuid]=new ns(d)}else{const d=await s(u.url);n[u.uuid]=new ns(d)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new Ua,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new uo:d=new Yt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,ET)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],Eg),d.wrapT=n(c.wrap[1],Eg)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,wg)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,wg)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const _=[];for(let y=0,S=m.length;y<S;y++){const M=m[y];n[M]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",M),_.push(n[M])}return _}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":l=new ad,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Le(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new tu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new eu(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new ln(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Da(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new Q_(e.color,e.intensity);break;case"DirectionalLight":l=new K_(e.color,e.intensity);break;case"PointLight":l=new j_(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new $_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new J_(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new Z_(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new lu().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new x_(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new fn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,_=e.instanceMatrix,y=e.instanceColor;l=new M_(d,p,m),l.instanceMatrix=new mo(new Float32Array(_.array),16),y!==void 0&&(l.instanceColor=new mo(new Float32Array(y.array),y.itemSize));break;case"LOD":l=new y_;break;case"Line":l=new br(c(e.geometry),u(e.material));break;case"LineLoop":l=new S_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Fi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new E_(c(e.geometry),u(e.material));break;case"Sprite":l=new v_(u(e.material));break;case"Group":l=new oo;break;case"Bone":l=new cd;break;default:l=new Et}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let _=0;_<m.length;_++)l.add(this.parseObject(m[_],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let _=0;_<m.length;_++){const y=m[_];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let _=0;_<m.length;_++){const y=m[_],S=l.getObjectByProperty("uuid",y.object);S!==void 0&&l.addLevel(S,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const ET={UVMapping:Jc,CubeReflectionMapping:wr,CubeRefractionMapping:Tr,EquirectangularReflectionMapping:ha,EquirectangularRefractionMapping:fa,CubeUVReflectionMapping:_o},Eg={RepeatWrapping:da,ClampToEdgeWrapping:xn,MirroredRepeatWrapping:pa},wg={NearestFilter:Xt,NearestMipmapNearestFilter:Wc,NearestMipmapLinearFilter:oa,LinearFilter:qt,LinearMipmapNearestFilter:Yf,LinearMipmapLinearFilter:Ar};class wT extends qn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ds.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){ds.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Tc;class wd{static getContext(){return Tc===void 0&&(Tc=new(window.AudioContext||window.webkitAudioContext)),Tc}static setContext(e){Tc=e}}class TT extends qn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new nr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);wd.getContext().decodeAudioData(h,function(p){t(p)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}class AT extends lu{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Le().set(e),s=new Le().set(t),l=new U(i.r,i.g,i.b),c=new U(s.r,s.g,s.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(l).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(l).sub(c).multiplyScalar(h)}}class bT extends lu{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Le().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const Tg=new it,Ag=new it,Xr=new it;class RT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ln,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ln,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Xr.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(as*t.fov*.5)/t.zoom;let c,u;Ag.elements[12]=-i,Tg.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,Xr.elements[0]=2*t.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Xr),c=-l*t.aspect-s,u=l*t.aspect-s,Xr.elements[0]=2*t.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Xr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ag),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Tg)}}class Td{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=bg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=bg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function bg(){return(typeof performance>"u"?Date:performance).now()}const qr=new U,Rg=new Fn,CT=new U,Yr=new U;class PT extends Et{constructor(){super(),this.type="AudioListener",this.context=wd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Td}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(qr,Rg,CT),Yr.set(0,0,-1).applyQuaternion(Rg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(qr.x,i),t.positionY.linearRampToValueAtTime(qr.y,i),t.positionZ.linearRampToValueAtTime(qr.z,i),t.forwardX.linearRampToValueAtTime(Yr.x,i),t.forwardY.linearRampToValueAtTime(Yr.y,i),t.forwardZ.linearRampToValueAtTime(Yr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(qr.x,qr.y,qr.z),t.setOrientation(Yr.x,Yr.y,Yr.z,n.x,n.y,n.z)}}class iv extends Et{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Zr=new U,Cg=new Fn,LT=new U,Jr=new U;class IT extends iv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Zr,Cg,LT),Jr.set(0,0,1).applyQuaternion(Cg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Zr.x,n),t.positionY.linearRampToValueAtTime(Zr.y,n),t.positionZ.linearRampToValueAtTime(Zr.z,n),t.orientationX.linearRampToValueAtTime(Jr.x,n),t.orientationY.linearRampToValueAtTime(Jr.y,n),t.orientationZ.linearRampToValueAtTime(Jr.z,n)}else t.setPosition(Zr.x,Zr.y,Zr.z),t.setOrientation(Jr.x,Jr.y,Jr.z)}}class UT{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class rv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Fn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Fn.multiplyQuaternionsFlat(e,l,e,t,e,n),Fn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const Ad="\\[\\]\\.:\\/",DT=new RegExp("["+Ad+"]","g"),bd="[^"+Ad+"]",NT="[^"+Ad.replace("\\.","")+"]",FT=/((?:WC+[\/:])*)/.source.replace("WC",bd),OT=/(WCOD+)?/.source.replace("WCOD",NT),zT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",bd),BT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",bd),kT=new RegExp("^"+FT+OT+zT+BT+"$"),HT=["material","materials","bones","map"];class GT{constructor(e,t,n){const i=n||yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class yt{constructor(e,t,n){this.path=t,this.parsedPath=n||yt.parseTrackName(t),this.node=yt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new yt.Composite(e,t,n):new yt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(DT,"")}static parseTrackName(e){const t=kT.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);HT.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=yt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}yt.Composite=GT;yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};yt.prototype.GetterByBindingType=[yt.prototype._getValue_direct,yt.prototype._getValue_array,yt.prototype._getValue_arrayElement,yt.prototype._getValue_toArray];yt.prototype.SetterByBindingTypeAndVersioning=[[yt.prototype._setValue_direct,yt.prototype._setValue_direct_setNeedsUpdate,yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_array,yt.prototype._setValue_array_setNeedsUpdate,yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_arrayElement,yt.prototype._setValue_arrayElement_setNeedsUpdate,yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_fromArray,yt.prototype._setValue_fromArray_setNeedsUpdate,yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class VT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Xn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],_=m.uuid;let y=t[_];if(y===void 0){y=u++,t[_]=y,e.push(m);for(let S=0,M=l;S!==M;++S)s[S].push(new yt(m,n[S],i[S]))}else if(y<h){c=e[y];const S=--h,M=e[S];t[M.uuid]=y,e[y]=M,t[_]=S,e[S]=m;for(let v=0,w=l;v!==w;++v){const E=s[v],b=E[S];let R=E[y];E[y]=b,R===void 0&&(R=new yt(m,n[v],i[v])),E[S]=R}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let _=0,y=i;_!==y;++_){const S=n[_],M=S[p],v=S[d];S[d]=M,S[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,_=e[m],y=--l,S=e[y];t[_.uuid]=p,e[p]=_,t[S.uuid]=m,e[m]=S,e.pop();for(let M=0,v=i;M!==v;++M){const w=n[M],E=w[m],b=w[y];w[p]=E,w[m]=b,w.pop()}}else{const m=--l,_=e[m];m>0&&(t[_.uuid]=p),e[p]=_,e.pop();for(let y=0,S=i;y!==S;++y){const M=n[y];M[p]=M[m],M.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=d,_=u.length;m!==_;++m){const y=u[m];p[m]=new yt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class sv{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:es,endingEnd:es};for(let h=0;h!==l;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Z0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Jf:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulateAdditive(c);break;case jc:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===J0;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===Y0){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=ts,i.endingEnd=ts):(e?i.endingStart=this.zeroSlopeAtStart?ts:es:i.endingStart=_a,t?i.endingEnd=this.zeroSlopeAtEnd?ts:es:i.endingEnd=_a)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const WT=new Float32Array(1);class XT extends ir{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],_=m.name;let y=d[_];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,_));continue}const S=t&&t._propertyBindings[p].binding.parsedPath;y=new rv(yt.create(n,_,S),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,_),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new xd(new Float32Array(2),new Float32Array(2),1,WT),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Aa.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=jc),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const d=new sv(this,l,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Aa.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Rd{constructor(e){this.value=e}clone(){return new Rd(this.value.clone===void 0?this.value:this.value.clone())}}let qT=0;class YT extends ir{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:qT++}),this.name="",this.usage=va,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class ZT extends nu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class JT{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class ov{constructor(e,t,n=0,i=1/0){this.ray=new Pa(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ls,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return kf(e,this,n,t),n.sort(Pg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)kf(e[i],this,n,t);return n.sort(Pg),n}}function Pg(r,e){return r.distance-e.distance}function kf(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)kf(i[s],e,t,!0)}}class jT{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Gt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class KT{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Lg=new de;class QT{constructor(e=new de(1/0,1/0),t=new de(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Lg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Lg).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ig=new U,Ac=new U;class $T{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Ig.subVectors(e,this.start),Ac.subVectors(this.end,this.start);const n=Ac.dot(Ac);let s=Ac.dot(Ig)/n;return t&&(s=Gt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Ug=new U;class eA extends Et{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new dt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Fe(i,3));const s=new Rn({fog:!1,toneMapped:!1});this.cone=new Fi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Ug.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ug),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const vr=new U,bc=new it,Wh=new it;class tA extends Fi{constructor(e){const t=av(e),n=new dt,i=[],s=[],l=new Le(0,0,1),c=new Le(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Fe(i,3)),n.setAttribute("color",new Fe(s,3));const u=new Rn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Wh.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(bc.multiplyMatrices(Wh,c.matrixWorld),vr.setFromMatrixPosition(bc),i.setXYZ(l,vr.x,vr.y,vr.z),bc.multiplyMatrices(Wh,c.parent.matrixWorld),vr.setFromMatrixPosition(bc),i.setXYZ(l+1,vr.x,vr.y,vr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function av(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,av(r.children[t]));return e}class nA extends fn{constructor(e,t,n){const i=new So(t,4,2),s=new Cr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const iA=new U,Dg=new Le,Ng=new Le;class rA extends Et{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Mo(t);i.rotateY(Math.PI*.5),this.material=new Cr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new It(l,3)),this.add(new fn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Dg.copy(this.light.color),Ng.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?Dg:Ng;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(iA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class sA extends Fi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,_=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const S=m===s?n:i;S.toArray(h,_),_+=3,S.toArray(h,_),_+=3,S.toArray(h,_),_+=3,S.toArray(h,_),_+=3}const d=new dt;d.setAttribute("position",new Fe(u,3)),d.setAttribute("color",new Fe(h,3));const p=new Rn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class oA extends Fi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Le(s),l=new Le(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),_=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(_,0,y);const S=p&1?s:l;u.push(S.r,S.g,S.b),u.push(S.r,S.g,S.b)}for(let p=0;p<n;p++){const m=p&1?s:l,_=e-e/n*p;for(let y=0;y<i;y++){let S=y/i*(Math.PI*2),M=Math.sin(S)*_,v=Math.cos(S)*_;c.push(M,0,v),u.push(m.r,m.g,m.b),S=(y+1)/i*(Math.PI*2),M=Math.sin(S)*_,v=Math.cos(S)*_,c.push(M,0,v),u.push(m.r,m.g,m.b)}}const h=new dt;h.setAttribute("position",new Fe(c,3)),h.setAttribute("color",new Fe(u,3));const d=new Rn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Fg=new U,Rc=new U,Og=new U;class aA extends Et{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new dt;i.setAttribute("position",new Fe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Rn({fog:!1,toneMapped:!1});this.lightPlane=new br(i,s),this.add(this.lightPlane),i=new dt,i.setAttribute("position",new Fe([0,0,0,0,0,1],3)),this.targetLine=new br(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Fg.setFromMatrixPosition(this.light.matrixWorld),Rc.setFromMatrixPosition(this.light.target.matrixWorld),Og.subVectors(Rc,Fg),this.lightPlane.lookAt(Rc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Rc),this.targetLine.scale.z=Og.length()}}const Cc=new U,Ht=new Ia;class lA extends Fi{constructor(e){const t=new dt,n=new Rn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,S){u(y),u(S)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Fe(i,3)),t.setAttribute("color",new Fe(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Le(16755200),d=new Le(16711680),p=new Le(43775),m=new Le(16777215),_=new Le(3355443);this.setColors(h,d,p,m,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Ht.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Wt("c",t,e,Ht,0,0,-1),Wt("t",t,e,Ht,0,0,1),Wt("n1",t,e,Ht,-n,-i,-1),Wt("n2",t,e,Ht,n,-i,-1),Wt("n3",t,e,Ht,-n,i,-1),Wt("n4",t,e,Ht,n,i,-1),Wt("f1",t,e,Ht,-n,-i,1),Wt("f2",t,e,Ht,n,-i,1),Wt("f3",t,e,Ht,-n,i,1),Wt("f4",t,e,Ht,n,i,1),Wt("u1",t,e,Ht,n*.7,i*1.1,-1),Wt("u2",t,e,Ht,-n*.7,i*1.1,-1),Wt("u3",t,e,Ht,0,i*2,-1),Wt("cf1",t,e,Ht,-n,0,1),Wt("cf2",t,e,Ht,n,0,1),Wt("cf3",t,e,Ht,0,-i,1),Wt("cf4",t,e,Ht,0,i,1),Wt("cn1",t,e,Ht,-n,0,-1),Wt("cn2",t,e,Ht,n,0,-1),Wt("cn3",t,e,Ht,0,-i,-1),Wt("cn4",t,e,Ht,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Wt(r,e,t,n,i,s,l){Cc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],Cc.x,Cc.y,Cc.z)}}const Pc=new Di;class cA extends Fi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new dt;s.setIndex(new It(n,1)),s.setAttribute("position",new It(i,3)),super(s,new Rn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Pc.setFromObject(this.object),Pc.isEmpty())return;const t=Pc.min,n=Pc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class uA extends Fi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new dt;s.setIndex(new It(n,1)),s.setAttribute("position",new Fe(i,3)),super(s,new Rn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class hA extends br{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new dt;l.setAttribute("position",new Fe(s,3)),l.computeBoundingSphere(),super(l,new Rn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new dt;u.setAttribute("position",new Fe(c,3)),u.computeBoundingSphere(),this.add(new fn(u,new Cr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const zg=new U;let Lc,Xh;class fA extends Et{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Lc===void 0&&(Lc=new dt,Lc.setAttribute("position",new Fe([0,0,0,0,1,0],3)),Xh=new ms(0,.5,1,5,1),Xh.translate(0,-.5,0)),this.position.copy(t),this.line=new br(Lc,new Rn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new fn(Xh,new Cr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{zg.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(zg,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class dA extends Fi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new dt;i.setAttribute("position",new Fe(t,3)),i.setAttribute("color",new Fe(n,3));const s=new Rn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class pA{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new xa,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const w=[];for(let E=0,b=v.length;E<b;E++){const R=v[E],C=new cs;C.curves=R.curves,w.push(C)}return w}function n(v,w){const E=w.length;let b=!1;for(let R=E-1,C=0;C<E;R=C++){let N=w[R],O=w[C],A=O.x-N.x,L=O.y-N.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(N=w[C],A=-A,O=w[R],L=-L),v.y<N.y||v.y>O.y)continue;if(v.y===N.y){if(v.x===N.x)return!0}else{const z=L*(v.x-N.x)-A*(v.y-N.y);if(z===0)return!0;if(z<0)continue;b=!b}}else{if(v.y!==N.y)continue;if(O.x<=v.x&&v.x<=N.x||N.x<=v.x&&v.x<=O.x)return!0}}return b}const i=Ii.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new cs,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let _=[],y=0,S;m[y]=void 0,_[y]=[];for(let v=0,w=s.length;v<w;v++)c=s[v],S=c.getPoints(),l=i(S),l=e?!l:l,l?(!d&&m[y]&&y++,m[y]={s:new cs,p:S},m[y].s.curves=c.curves,d&&y++,_[y]=[]):_[y].push({h:c,p:S[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,w=0;for(let E=0,b=m.length;E<b;E++)p[E]=[];for(let E=0,b=m.length;E<b;E++){const R=_[E];for(let C=0;C<R.length;C++){const N=R[C];let O=!0;for(let A=0;A<m.length;A++)n(N.p,m[A].p)&&(E!==A&&w++,O?(O=!1,p[A].push(N)):v=!0);O&&p[E].push(N)}}w>0&&v===!1&&(_=p)}let M;for(let v=0,w=m.length;v<w;v++){u=m[v].s,h.push(u),M=_[v];for(let E=0,b=M.length;E<b;E++)u.holes.push(M[E].h)}return h}}class mA extends Pr{constructor(e,t,n,i,s,l){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,l)}}class gA extends Na{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class _A extends Fa{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class vA extends Oa{constructor(e,t,n,i,s,l,c){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,l,c)}}class yA extends ms{constructor(e,t,n,i,s,l,c,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,l,c,u)}}class xA extends za{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class MA extends Ba{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class SA extends ka{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class EA extends xo{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class wA extends Mo{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class TA extends vo{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class AA extends rr{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class bA extends Ha{constructor(e,t,n,i,s,l){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,l)}}class RA extends Ga{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class CA extends So{constructor(e,t,n,i,s,l,c){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,l,c)}}class PA extends Va{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class LA extends Wa{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class IA extends Xa{constructor(e,t,n,i,s,l){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,l)}}class UA extends qa{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ra}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ra);const DA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:qf,AddEquation:Qr,AddOperation:b0,AdditiveAnimationBlendMode:Jf,AdditiveBlending:nf,AlphaFormat:O0,AlwaysDepth:x0,AlwaysStencilFunc:$0,AmbientLight:Q_,AmbientLightProbe:bT,AnimationAction:sv,AnimationClip:Aa,AnimationLoader:pT,AnimationMixer:XT,AnimationObjectGroup:VT,AnimationUtils:uT,ArcCurve:w_,ArrayCamera:p_,ArrowHelper:fA,Audio:iv,AudioAnalyser:UT,AudioContext:wd,AudioListener:PT,AudioLoader:TT,AxesHelper:dA,BackSide:bn,BasicDepthPacking:j0,BasicShadowMap:o0,Bone:cd,BooleanKeyframeTrack:gs,Box2:QT,Box3:Di,Box3Helper:uA,BoxBufferGeometry:mA,BoxGeometry:Pr,BoxHelper:cA,BufferAttribute:It,BufferGeometry:dt,BufferGeometryLoader:nv,ByteType:I0,Cache:ds,Camera:Ia,CameraHelper:lA,CanvasTexture:Dw,CapsuleBufferGeometry:gA,CapsuleGeometry:Na,CatmullRomCurve3:T_,CineonToneMapping:P0,CircleBufferGeometry:_A,CircleGeometry:Fa,ClampToEdgeWrapping:xn,Clock:Td,Color:Le,ColorKeyframeTrack:Md,ColorManagement:ii,CompressedArrayTexture:Uw,CompressedTexture:ud,CompressedTextureLoader:mT,ConeBufferGeometry:vA,ConeGeometry:Oa,CubeCamera:o_,CubeReflectionMapping:wr,CubeRefractionMapping:Tr,CubeTexture:Ua,CubeTextureLoader:gT,CubeUVReflectionMapping:_o,CubicBezierCurve:fd,CubicBezierCurve3:A_,CubicInterpolant:W_,CullFaceBack:tf,CullFaceFront:s0,CullFaceFrontBack:Iy,CullFaceNone:r0,Curve:Mi,CurvePath:R_,CustomBlending:a0,CustomToneMapping:L0,CylinderBufferGeometry:yA,CylinderGeometry:ms,Cylindrical:KT,Data3DTexture:ed,DataArrayTexture:Kc,DataTexture:uo,DataTextureLoader:_T,DataUtils:Vx,DecrementStencilOp:Wy,DecrementWrapStencilOp:qy,DefaultLoadingManager:Y_,DepthFormat:Mr,DepthStencilFormat:us,DepthTexture:m_,DirectionalLight:K_,DirectionalLightHelper:aA,DiscreteInterpolant:X_,DisplayP3ColorSpace:Kf,DodecahedronBufferGeometry:xA,DodecahedronGeometry:za,DoubleSide:Li,DstAlphaFactor:p0,DstColorFactor:g0,DynamicCopyUsage:ox,DynamicDrawUsage:os,DynamicReadUsage:ix,EdgesGeometry:C_,EllipseCurve:su,EqualDepth:S0,EqualStencilFunc:jy,EquirectangularReflectionMapping:ha,EquirectangularRefractionMapping:fa,Euler:La,EventDispatcher:ir,ExtrudeBufferGeometry:MA,ExtrudeGeometry:Ba,FileLoader:nr,Float16BufferAttribute:Jx,Float32BufferAttribute:Fe,Float64BufferAttribute:jx,FloatType:Qi,Fog:tu,FogExp2:eu,FramebufferTexture:Iw,FrontSide:er,Frustum:Qc,GLBufferAttribute:JT,GLSL1:lx,GLSL3:Lf,GreaterDepth:w0,GreaterEqualDepth:E0,GreaterEqualStencilFunc:ex,GreaterStencilFunc:Qy,GridHelper:sA,Group:oo,HalfFloatType:ho,HemisphereLight:Z_,HemisphereLightHelper:rA,HemisphereLightProbe:AT,IcosahedronBufferGeometry:SA,IcosahedronGeometry:ka,ImageBitmapLoader:wT,ImageLoader:ba,ImageUtils:$f,IncrementStencilOp:Vy,IncrementWrapStencilOp:Xy,InstancedBufferAttribute:mo,InstancedBufferGeometry:tv,InstancedInterleavedBuffer:ZT,InstancedMesh:M_,Int16BufferAttribute:Yx,Int32BufferAttribute:Zx,Int8BufferAttribute:Wx,IntType:D0,InterleavedBuffer:nu,InterleavedBufferAttribute:hs,Interpolant:Ya,InterpolateDiscrete:ma,InterpolateLinear:ga,InterpolateSmooth:Bc,InvertStencilOp:Yy,KeepStencilOp:kc,KeyframeTrack:Si,LOD:y_,LatheBufferGeometry:EA,LatheGeometry:xo,Layers:ls,LessDepth:M0,LessEqualDepth:Vc,LessEqualStencilFunc:Ky,LessStencilFunc:Jy,Light:Lr,LightProbe:lu,Line:br,Line3:$T,LineBasicMaterial:Rn,LineCurve:ou,LineCurve3:b_,LineDashedMaterial:G_,LineLoop:S_,LineSegments:Fi,LinearEncoding:jf,LinearFilter:qt,LinearInterpolant:xd,LinearMipMapLinearFilter:Oy,LinearMipMapNearestFilter:Fy,LinearMipmapLinearFilter:Ar,LinearMipmapNearestFilter:Yf,LinearSRGBColorSpace:yi,LinearToneMapping:R0,Loader:qn,LoaderUtils:Bf,LoadingManager:Sd,LoopOnce:Y0,LoopPingPong:J0,LoopRepeat:Z0,LuminanceAlphaFormat:B0,LuminanceFormat:z0,MOUSE:Py,Material:Mn,MaterialLoader:cu,MathUtils:Sx,Matrix3:gt,Matrix4:it,MaxEquation:af,Mesh:fn,MeshBasicMaterial:Cr,MeshDepthMaterial:rd,MeshDistanceMaterial:sd,MeshLambertMaterial:k_,MeshMatcapMaterial:H_,MeshNormalMaterial:B_,MeshPhongMaterial:O_,MeshPhysicalMaterial:F_,MeshStandardMaterial:_d,MeshToonMaterial:z_,MinEquation:of,MirroredRepeatWrapping:pa,MixOperation:A0,MultiplyBlending:sf,MultiplyOperation:Ca,NearestFilter:Xt,NearestMipMapLinearFilter:Ny,NearestMipMapNearestFilter:Dy,NearestMipmapLinearFilter:oa,NearestMipmapNearestFilter:Wc,NeverDepth:y0,NeverStencilFunc:Zy,NoBlending:$i,NoColorSpace:Er,NoToneMapping:vi,NormalAnimationBlendMode:jc,NormalBlending:rs,NotEqualDepth:T0,NotEqualStencilFunc:$y,NumberKeyframeTrack:wa,Object3D:Et,ObjectLoader:ST,ObjectSpaceNormalMap:Q0,OctahedronBufferGeometry:wA,OctahedronGeometry:Mo,OneFactor:h0,OneMinusDstAlphaFactor:m0,OneMinusDstColorFactor:_0,OneMinusSrcAlphaFactor:Xf,OneMinusSrcColorFactor:d0,OrthographicCamera:Da,PCFShadowMap:Zc,PCFSoftShadowMap:sa,PMREMGenerator:Uf,Path:xa,PerspectiveCamera:ln,Plane:yr,PlaneBufferGeometry:TA,PlaneGeometry:vo,PlaneHelper:hA,PointLight:j_,PointLightHelper:nA,Points:E_,PointsMaterial:ru,PolarGridHelper:oA,PolyhedronBufferGeometry:AA,PolyhedronGeometry:rr,PositionalAudio:IT,PropertyBinding:yt,PropertyMixer:rv,QuadraticBezierCurve:dd,QuadraticBezierCurve3:pd,Quaternion:Fn,QuaternionKeyframeTrack:Eo,QuaternionLinearInterpolant:q_,RED_GREEN_RGTC2_Format:Cf,RED_RGTC1_Format:q0,REVISION:Ra,RGBADepthPacking:K0,RGBAFormat:Nn,RGBAIntegerFormat:W0,RGBA_ASTC_10x10_Format:Tf,RGBA_ASTC_10x5_Format:Sf,RGBA_ASTC_10x6_Format:Ef,RGBA_ASTC_10x8_Format:wf,RGBA_ASTC_12x10_Format:Af,RGBA_ASTC_12x12_Format:bf,RGBA_ASTC_4x4_Format:pf,RGBA_ASTC_5x4_Format:mf,RGBA_ASTC_5x5_Format:gf,RGBA_ASTC_6x5_Format:_f,RGBA_ASTC_6x6_Format:vf,RGBA_ASTC_8x5_Format:yf,RGBA_ASTC_8x6_Format:xf,RGBA_ASTC_8x8_Format:Mf,RGBA_BPTC_Format:zc,RGBA_ETC2_EAC_Format:df,RGBA_PVRTC_2BPPV1_Format:hf,RGBA_PVRTC_4BPPV1_Format:uf,RGBA_S3TC_DXT1_Format:Nc,RGBA_S3TC_DXT3_Format:Fc,RGBA_S3TC_DXT5_Format:Oc,RGB_ETC1_Format:X0,RGB_ETC2_Format:ff,RGB_PVRTC_2BPPV1_Format:cf,RGB_PVRTC_4BPPV1_Format:lf,RGB_S3TC_DXT1_Format:Dc,RGFormat:G0,RGIntegerFormat:V0,RawShaderMaterial:N_,Ray:Pa,Raycaster:ov,RectAreaLight:$_,RedFormat:k0,RedIntegerFormat:H0,ReinhardToneMapping:C0,RepeatWrapping:da,ReplaceStencilOp:Gy,ReverseSubtractEquation:c0,RingBufferGeometry:bA,RingGeometry:Ha,SIGNED_RED_GREEN_RGTC2_Format:Pf,SIGNED_RED_RGTC1_Format:Rf,SRGBColorSpace:ot,Scene:ad,ShaderChunk:lt,ShaderLib:_i,ShaderMaterial:Ui,ShadowMaterial:D_,Shape:cs,ShapeBufferGeometry:RA,ShapeGeometry:Ga,ShapePath:pA,ShapeUtils:Ii,ShortType:U0,Skeleton:iu,SkeletonHelper:tA,SkinnedMesh:x_,Source:ns,Sphere:Ni,SphereBufferGeometry:CA,SphereGeometry:So,Spherical:jT,SphericalHarmonics3:ev,SplineCurve:md,SpotLight:J_,SpotLightHelper:eA,Sprite:v_,SpriteMaterial:ld,SrcAlphaFactor:Wf,SrcAlphaSaturateFactor:v0,SrcColorFactor:f0,StaticCopyUsage:sx,StaticDrawUsage:va,StaticReadUsage:nx,StereoCamera:RT,StreamCopyUsage:ax,StreamDrawUsage:tx,StreamReadUsage:rx,StringKeyframeTrack:_s,SubtractEquation:l0,SubtractiveBlending:rf,TOUCH:Ly,TangentSpaceNormalMap:Rr,TetrahedronBufferGeometry:PA,TetrahedronGeometry:Va,Texture:Yt,TextureLoader:vT,TorusBufferGeometry:LA,TorusGeometry:Wa,TorusKnotBufferGeometry:IA,TorusKnotGeometry:Xa,Triangle:Dn,TriangleFanDrawMode:ky,TriangleStripDrawMode:By,TrianglesDrawMode:zy,TubeBufferGeometry:UA,TubeGeometry:qa,TwoPassDoubleSide:Uy,UVMapping:Jc,Uint16BufferAttribute:td,Uint32BufferAttribute:nd,Uint8BufferAttribute:Xx,Uint8ClampedBufferAttribute:qx,Uniform:Rd,UniformsGroup:YT,UniformsLib:we,UniformsUtils:s_,UnsignedByteType:tr,UnsignedInt248Type:ss,UnsignedIntType:xr,UnsignedShort4444Type:N0,UnsignedShort5551Type:F0,UnsignedShortType:Zf,VSMShadowMap:mi,Vector2:de,Vector3:U,Vector4:Ct,VectorKeyframeTrack:Ta,VideoTexture:Lw,WebGL1Renderer:g_,WebGL3DRenderTarget:Ix,WebGLArrayRenderTarget:Lx,WebGLCubeRenderTarget:a_,WebGLMultipleRenderTargets:Ux,WebGLRenderTarget:xi,WebGLRenderer:od,WebGLUtils:d_,WireframeGeometry:U_,WrapAroundEnding:_a,ZeroCurvatureEnding:es,ZeroFactor:u0,ZeroSlopeEnding:ts,ZeroStencilOp:Hy,_SRGBAFormat:Xc,sRGBEncoding:Sr},Symbol.toStringTag,{value:"Module"}));var lv={exports:{}},vs={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */vs.ConcurrentRoot=1;vs.ContinuousEventPriority=4;vs.DefaultEventPriority=16;vs.DiscreteEventPriority=1;vs.IdleEventPriority=536870912;vs.LegacyRoot=0;lv.exports=vs;var lo=lv.exports;function NA(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(_=>_(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function _(){const y=d(e);if(!p(m,y)){const S=m;h(m=y,S)}}return t.add(_),()=>t.delete(_)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const FA=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),Bg=FA?Ee.useEffect:Ee.useLayoutEffect;function OA(r){const e=typeof r=="function"?NA(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Ee.useReducer(M=>M+1,0),l=e.getState(),c=Ee.useRef(l),u=Ee.useRef(n),h=Ee.useRef(i),d=Ee.useRef(!1),p=Ee.useRef();p.current===void 0&&(p.current=n(l));let m,_=!1;(c.current!==l||u.current!==n||h.current!==i||d.current)&&(m=n(l),_=!i(p.current,m)),Bg(()=>{_&&(p.current=m),c.current=l,u.current=n,h.current=i,d.current=!1});const y=Ee.useRef(l);Bg(()=>{const M=()=>{try{const w=e.getState(),E=u.current(w);h.current(p.current,E)||(c.current=w,p.current=E,s())}catch{d.current=!0,s()}},v=e.subscribe(M);return e.getState()!==y.current&&M(),v},[]);const S=_?m:p.current;return Ee.useDebugValue(S),S};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var cv={exports:{}},uv={exports:{}},hv={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(k,J){var q=k.length;k.push(J);e:for(;0<q;){var he=q-1>>>1,pe=k[he];if(0<i(pe,J))k[he]=J,k[q]=pe,q=he;else break e}}function t(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var J=k[0],q=k.pop();if(q!==J){k[0]=q;e:for(var he=0,pe=k.length,Z=pe>>>1;he<Z;){var le=2*(he+1)-1,xe=k[le],Se=le+1,B=k[Se];if(0>i(xe,q))Se<pe&&0>i(B,xe)?(k[he]=B,k[Se]=q,he=Se):(k[he]=xe,k[le]=q,he=le);else if(Se<pe&&0>i(B,q))k[he]=B,k[Se]=q,he=Se;else break e}}return J}function i(k,J){var q=k.sortIndex-J.sortIndex;return q!==0?q:k.id-J.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],d=1,p=null,m=3,_=!1,y=!1,S=!1,M=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(k){for(var J=t(h);J!==null;){if(J.callback===null)n(h);else if(J.startTime<=k)n(h),J.sortIndex=J.expirationTime,e(u,J);else break;J=t(h)}}function b(k){if(S=!1,E(k),!y)if(t(u)!==null)y=!0,ue(R);else{var J=t(h);J!==null&&ae(b,J.startTime-k)}}function R(k,J){y=!1,S&&(S=!1,v(O),O=-1),_=!0;var q=m;try{for(E(J),p=t(u);p!==null&&(!(p.expirationTime>J)||k&&!z());){var he=p.callback;if(typeof he=="function"){p.callback=null,m=p.priorityLevel;var pe=he(p.expirationTime<=J);J=r.unstable_now(),typeof pe=="function"?p.callback=pe:p===t(u)&&n(u),E(J)}else n(u);p=t(u)}if(p!==null)var Z=!0;else{var le=t(h);le!==null&&ae(b,le.startTime-J),Z=!1}return Z}finally{p=null,m=q,_=!1}}var C=!1,N=null,O=-1,A=5,L=-1;function z(){return!(r.unstable_now()-L<A)}function K(){if(N!==null){var k=r.unstable_now();L=k;var J=!0;try{J=N(!0,k)}finally{J?V():(C=!1,N=null)}}else C=!1}var V;if(typeof w=="function")V=function(){w(K)};else if(typeof MessageChannel<"u"){var Y=new MessageChannel,$=Y.port2;Y.port1.onmessage=K,V=function(){$.postMessage(null)}}else V=function(){M(K,0)};function ue(k){N=k,C||(C=!0,V())}function ae(k,J){O=M(function(){k(r.unstable_now())},J)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(k){k.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,ue(R))},r.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):A=0<k?Math.floor(1e3/k):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(k){switch(m){case 1:case 2:case 3:var J=3;break;default:J=m}var q=m;m=J;try{return k()}finally{m=q}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(k,J){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var q=m;m=k;try{return J()}finally{m=q}},r.unstable_scheduleCallback=function(k,J,q){var he=r.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?he+q:he):q=he,k){case 1:var pe=-1;break;case 2:pe=250;break;case 5:pe=1073741823;break;case 4:pe=1e4;break;default:pe=5e3}return pe=q+pe,k={id:d++,callback:J,priorityLevel:k,startTime:q,expirationTime:pe,sortIndex:-1},q>he?(k.sortIndex=q,e(h,k),t(u)===null&&k===t(h)&&(S?(v(O),O=-1):S=!0,ae(b,q-he))):(k.sortIndex=pe,e(u,k),y||_||(y=!0,ue(R))),k},r.unstable_shouldYield=z,r.unstable_wrapCallback=function(k){var J=m;return function(){var q=m;m=J;try{return k.apply(this,arguments)}finally{m=q}}}})(hv);uv.exports=hv;var Hf=uv.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var zA=function(e){var t={},n=Ee,i=Hf,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,f=1;f<arguments.length;f++)a+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),y=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),M=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),E=Symbol.for("react.lazy"),b=Symbol.for("react.offscreen"),R=Symbol.iterator;function C(o){return o===null||typeof o!="object"?null:(o=R&&o[R]||o["@@iterator"],typeof o=="function"?o:null)}function N(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case M:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case _:return(o._context.displayName||"Context")+".Provider";case S:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return a=o.displayName||null,a!==null?a:N(o.type)||"Memo";case E:a=o._payload,o=o._init;try{return N(o(a))}catch{}}return null}function O(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return N(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function A(o){var a=o,f=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(f=a.return),o=a.return;while(o)}return a.tag===3?f:null}function L(o){if(A(o)!==o)throw Error(l(188))}function z(o){var a=o.alternate;if(!a){if(a=A(o),a===null)throw Error(l(188));return a!==o?null:o}for(var f=o,g=a;;){var x=f.return;if(x===null)break;var T=x.alternate;if(T===null){if(g=x.return,g!==null){f=g;continue}break}if(x.child===T.child){for(T=x.child;T;){if(T===f)return L(x),o;if(T===g)return L(x),a;T=T.sibling}throw Error(l(188))}if(f.return!==g.return)f=x,g=T;else{for(var D=!1,G=x.child;G;){if(G===f){D=!0,f=x,g=T;break}if(G===g){D=!0,g=x,f=T;break}G=G.sibling}if(!D){for(G=T.child;G;){if(G===f){D=!0,f=T,g=x;break}if(G===g){D=!0,g=T,f=x;break}G=G.sibling}if(!D)throw Error(l(189))}}if(f.alternate!==g)throw Error(l(190))}if(f.tag!==3)throw Error(l(188));return f.stateNode.current===f?o:a}function K(o){return o=z(o),o!==null?V(o):null}function V(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=V(o);if(a!==null)return a;o=o.sibling}return null}function Y(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=Y(o);if(a!==null)return a}o=o.sibling}return null}var $=Array.isArray,ue=e.getPublicInstance,ae=e.getRootHostContext,k=e.getChildHostContext,J=e.prepareForCommit,q=e.resetAfterCommit,he=e.createInstance,pe=e.appendInitialChild,Z=e.finalizeInitialChildren,le=e.prepareUpdate,xe=e.shouldSetTextContent,Se=e.createTextInstance,B=e.scheduleTimeout,Qe=e.cancelTimeout,je=e.noTimeout,ye=e.isPrimaryRenderer,Ce=e.supportsMutation,fe=e.supportsPersistence,ne=e.supportsHydration,me=e.getInstanceFromNode,Ue=e.preparePortalMount,Te=e.getCurrentEventPriority,qe=e.detachDeletedInstance,Ye=e.supportsMicrotasks,Ge=e.scheduleMicrotask,et=e.supportsTestSelectors,vt=e.findFiberRoot,F=e.getBoundingRect,P=e.getTextContent,ee=e.isHiddenSubtree,ge=e.matchAccessibilityRole,ve=e.setFocusIfFocusable,Ae=e.setupIntersectionObserver,Ke=e.appendChild,Ie=e.appendChildToContainer,oe=e.commitTextUpdate,Oe=e.commitMount,Ve=e.commitUpdate,Ze=e.insertBefore,De=e.insertInContainerBefore,ke=e.removeChild,_t=e.removeChildFromContainer,wt=e.resetTextContent,Ot=e.hideInstance,H=e.hideTextInstance,re=e.unhideInstance,_e=e.unhideTextInstance,Pe=e.clearContainer,ze=e.cloneInstance,Tt=e.createContainerChildSet,At=e.appendChildToContainerChildSet,nn=e.finalizeContainerChildren,si=e.replaceContainerChildren,Nt=e.cloneHiddenInstance,Sn=e.cloneHiddenTextInstance,Yn=e.canHydrateInstance,ys=e.canHydrateTextInstance,Ja=e.canHydrateSuspenseInstance,ja=e.isSuspenseInstancePending,wo=e.isSuspenseInstanceFallback,uu=e.registerSuspenseInstanceRetry,I=e.getNextHydratableSibling,Q=e.getFirstHydratableChild,se=e.getFirstHydratableChildWithinContainer,X=e.getFirstHydratableChildWithinSuspenseInstance,ce=e.hydrateInstance,We=e.hydrateTextInstance,Je=e.hydrateSuspenseInstance,$e=e.getNextHydratableInstanceAfterSuspenseInstance,rt=e.commitHydratedContainer,ut=e.commitHydratedSuspenseInstance,ht=e.clearSuspenseBoundary,pt=e.clearSuspenseBoundaryFromContainer,bt=e.shouldDeleteUnhydratedTailInstances,cn=e.didNotMatchHydratedContainerTextInstance,On=e.didNotMatchHydratedTextInstance,oi;function Ut(o){if(oi===void 0)try{throw Error()}catch(f){var a=f.stack.trim().match(/\n( *(at )?)/);oi=a&&a[1]||""}return`
`+oi+o}var mt=!1;function Ir(o,a){if(!o||mt)return"";mt=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(Me){var g=Me}Reflect.construct(o,[],a)}else{try{a.call()}catch(Me){g=Me}o.call(a.prototype)}else{try{throw Error()}catch(Me){g=Me}o()}}catch(Me){if(Me&&g&&typeof Me.stack=="string"){for(var x=Me.stack.split(`
`),T=g.stack.split(`
`),D=x.length-1,G=T.length-1;1<=D&&0<=G&&x[D]!==T[G];)G--;for(;1<=D&&0<=G;D--,G--)if(x[D]!==T[G]){if(D!==1||G!==1)do if(D--,G--,0>G||x[D]!==T[G]){var ie=`
`+x[D].replace(" at new "," at ");return o.displayName&&ie.includes("<anonymous>")&&(ie=ie.replace("<anonymous>",o.displayName)),ie}while(1<=D&&0<=G);break}}}finally{mt=!1,Error.prepareStackTrace=f}return(o=o?o.displayName||o.name:"")?Ut(o):""}var Zt=Object.prototype.hasOwnProperty,ai=[],Oi=-1;function Cn(o){return{current:o}}function Rt(o){0>Oi||(o.current=ai[Oi],ai[Oi]=null,Oi--)}function st(o,a){Oi++,ai[Oi]=o.current,o.current=a}var dn={},Jt=Cn(dn),Pt=Cn(!1),li=dn;function sr(o,a){var f=o.type.contextTypes;if(!f)return dn;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var x={},T;for(T in f)x[T]=a[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=x),x}function un(o){return o=o.childContextTypes,o!=null}function Ka(){Rt(Pt),Rt(Jt)}function Ld(o,a,f){if(Jt.current!==dn)throw Error(l(168));st(Jt,a),st(Pt,f)}function Id(o,a,f){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var x in g)if(!(x in a))throw Error(l(108,O(o)||"Unknown",x));return s({},f,g)}function Qa(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||dn,li=Jt.current,st(Jt,o),st(Pt,Pt.current),!0}function Ud(o,a,f){var g=o.stateNode;if(!g)throw Error(l(169));f?(o=Id(o,a,li),g.__reactInternalMemoizedMergedChildContext=o,Rt(Pt),Rt(Jt),st(Jt,o)):Rt(Pt),st(Pt,f)}var ci=Math.clz32?Math.clz32:Lv,Cv=Math.log,Pv=Math.LN2;function Lv(o){return o>>>=0,o===0?32:31-(Cv(o)/Pv|0)|0}var $a=64,el=4194304;function To(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function tl(o,a){var f=o.pendingLanes;if(f===0)return 0;var g=0,x=o.suspendedLanes,T=o.pingedLanes,D=f&268435455;if(D!==0){var G=D&~x;G!==0?g=To(G):(T&=D,T!==0&&(g=To(T)))}else D=f&~x,D!==0?g=To(D):T!==0&&(g=To(T));if(g===0)return 0;if(a!==0&&a!==g&&!(a&x)&&(x=g&-g,T=a&-a,x>=T||x===16&&(T&4194240)!==0))return a;if(g&4&&(g|=f&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)f=31-ci(a),x=1<<f,g|=o[f],a&=~x;return g}function Iv(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Uv(o,a){for(var f=o.suspendedLanes,g=o.pingedLanes,x=o.expirationTimes,T=o.pendingLanes;0<T;){var D=31-ci(T),G=1<<D,ie=x[D];ie===-1?(!(G&f)||G&g)&&(x[D]=Iv(G,a)):ie<=a&&(o.expiredLanes|=G),T&=~G}}function hu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function fu(o){for(var a=[],f=0;31>f;f++)a.push(o);return a}function Ao(o,a,f){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-ci(a),o[a]=f}function Dv(o,a){var f=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<f;){var x=31-ci(f),T=1<<x;a[x]=0,g[x]=-1,o[x]=-1,f&=~T}}function du(o,a){var f=o.entangledLanes|=a;for(o=o.entanglements;f;){var g=31-ci(f),x=1<<g;x&a|o[g]&a&&(o[g]|=a),f&=~x}}var xt=0;function Dd(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var pu=i.unstable_scheduleCallback,Nd=i.unstable_cancelCallback,Nv=i.unstable_shouldYield,Fv=i.unstable_requestPaint,rn=i.unstable_now,mu=i.unstable_ImmediatePriority,Ov=i.unstable_UserBlockingPriority,gu=i.unstable_NormalPriority,zv=i.unstable_IdlePriority,nl=null,Ei=null;function Bv(o){if(Ei&&typeof Ei.onCommitFiberRoot=="function")try{Ei.onCommitFiberRoot(nl,o,void 0,(o.current.flags&128)===128)}catch{}}function kv(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var wi=typeof Object.is=="function"?Object.is:kv,zi=null,il=!1,_u=!1;function Fd(o){zi===null?zi=[o]:zi.push(o)}function Hv(o){il=!0,Fd(o)}function Ti(){if(!_u&&zi!==null){_u=!0;var o=0,a=xt;try{var f=zi;for(xt=1;o<f.length;o++){var g=f[o];do g=g(!0);while(g!==null)}zi=null,il=!1}catch(x){throw zi!==null&&(zi=zi.slice(o+1)),pu(mu,Ti),x}finally{xt=a,_u=!1}}return null}var Gv=c.ReactCurrentBatchConfig;function rl(o,a){if(wi(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var f=Object.keys(o),g=Object.keys(a);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var x=f[g];if(!Zt.call(a,x)||!wi(o[x],a[x]))return!1}return!0}function Vv(o){switch(o.tag){case 5:return Ut(o.type);case 16:return Ut("Lazy");case 13:return Ut("Suspense");case 19:return Ut("SuspenseList");case 0:case 2:case 15:return o=Ir(o.type,!1),o;case 11:return o=Ir(o.type.render,!1),o;case 1:return o=Ir(o.type,!0),o;default:return""}}function ui(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var f in o)a[f]===void 0&&(a[f]=o[f]);return a}return a}var sl=Cn(null),ol=null,xs=null,vu=null;function yu(){vu=xs=ol=null}function Od(o,a,f){ye?(st(sl,a._currentValue),a._currentValue=f):(st(sl,a._currentValue2),a._currentValue2=f)}function xu(o){var a=sl.current;Rt(sl),ye?o._currentValue=a:o._currentValue2=a}function Mu(o,a,f){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===f)break;o=o.return}}function Ms(o,a){ol=o,vu=xs=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(kn=!0),o.firstContext=null)}function Zn(o){var a=ye?o._currentValue:o._currentValue2;if(vu!==o)if(o={context:o,memoizedValue:a,next:null},xs===null){if(ol===null)throw Error(l(308));xs=o,ol.dependencies={lanes:0,firstContext:o}}else xs=xs.next=o;return a}var Ai=null,or=!1;function Su(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zd(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Bi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function ar(o,a){var f=o.updateQueue;f!==null&&(f=f.shared,jt!==null&&o.mode&1&&!(ft&2)?(o=f.interleaved,o===null?(a.next=a,Ai===null?Ai=[f]:Ai.push(f)):(a.next=o.next,o.next=a),f.interleaved=a):(o=f.pending,o===null?a.next=a:(a.next=o.next,o.next=a),f.pending=a))}function al(o,a,f){if(a=a.updateQueue,a!==null&&(a=a.shared,(f&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,du(o,f)}}function Bd(o,a){var f=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var x=null,T=null;if(f=f.firstBaseUpdate,f!==null){do{var D={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};T===null?x=T=D:T=T.next=D,f=f.next}while(f!==null);T===null?x=T=a:T=T.next=a}else x=T=a;f={baseState:g.baseState,firstBaseUpdate:x,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=a:o.next=a,f.lastBaseUpdate=a}function ll(o,a,f,g){var x=o.updateQueue;or=!1;var T=x.firstBaseUpdate,D=x.lastBaseUpdate,G=x.shared.pending;if(G!==null){x.shared.pending=null;var ie=G,Me=ie.next;ie.next=null,D===null?T=Me:D.next=Me,D=ie;var Ne=o.alternate;Ne!==null&&(Ne=Ne.updateQueue,G=Ne.lastBaseUpdate,G!==D&&(G===null?Ne.firstBaseUpdate=Me:G.next=Me,Ne.lastBaseUpdate=ie))}if(T!==null){var tt=x.baseState;D=0,Ne=Me=ie=null,G=T;do{var Xe=G.lane,Lt=G.eventTime;if((g&Xe)===Xe){Ne!==null&&(Ne=Ne.next={eventTime:Lt,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var He=o,_n=G;switch(Xe=a,Lt=f,_n.tag){case 1:if(He=_n.payload,typeof He=="function"){tt=He.call(Lt,tt,Xe);break e}tt=He;break e;case 3:He.flags=He.flags&-65537|128;case 0:if(He=_n.payload,Xe=typeof He=="function"?He.call(Lt,tt,Xe):He,Xe==null)break e;tt=s({},tt,Xe);break e;case 2:or=!0}}G.callback!==null&&G.lane!==0&&(o.flags|=64,Xe=x.effects,Xe===null?x.effects=[G]:Xe.push(G))}else Lt={eventTime:Lt,lane:Xe,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ne===null?(Me=Ne=Lt,ie=tt):Ne=Ne.next=Lt,D|=Xe;if(G=G.next,G===null){if(G=x.shared.pending,G===null)break;Xe=G,G=Xe.next,Xe.next=null,x.lastBaseUpdate=Xe,x.shared.pending=null}}while(1);if(Ne===null&&(ie=tt),x.baseState=ie,x.firstBaseUpdate=Me,x.lastBaseUpdate=Ne,a=x.shared.interleaved,a!==null){x=a;do D|=x.lane,x=x.next;while(x!==a)}else T===null&&(x.shared.lanes=0);Ps|=D,o.lanes=D,o.memoizedState=tt}}function kd(o,a,f){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],x=g.callback;if(x!==null){if(g.callback=null,g=f,typeof x!="function")throw Error(l(191,x));x.call(g)}}}var Hd=new n.Component().refs;function Eu(o,a,f,g){a=o.memoizedState,f=f(g,a),f=f==null?a:s({},a,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var cl={isMounted:function(o){return(o=o._reactInternals)?A(o)===o:!1},enqueueSetState:function(o,a,f){o=o._reactInternals;var g=wn(),x=ur(o),T=Bi(g,x);T.payload=a,f!=null&&(T.callback=f),ar(o,T),a=$n(o,x,g),a!==null&&al(a,o,x)},enqueueReplaceState:function(o,a,f){o=o._reactInternals;var g=wn(),x=ur(o),T=Bi(g,x);T.tag=1,T.payload=a,f!=null&&(T.callback=f),ar(o,T),a=$n(o,x,g),a!==null&&al(a,o,x)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var f=wn(),g=ur(o),x=Bi(f,g);x.tag=2,a!=null&&(x.callback=a),ar(o,x),a=$n(o,g,f),a!==null&&al(a,o,g)}};function Gd(o,a,f,g,x,T,D){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,D):a.prototype&&a.prototype.isPureReactComponent?!rl(f,g)||!rl(x,T):!0}function Vd(o,a,f){var g=!1,x=dn,T=a.contextType;return typeof T=="object"&&T!==null?T=Zn(T):(x=un(a)?li:Jt.current,g=a.contextTypes,T=(g=g!=null)?sr(o,x):dn),a=new a(f,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=cl,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=x,o.__reactInternalMemoizedMaskedChildContext=T),a}function Wd(o,a,f,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(f,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(f,g),a.state!==o&&cl.enqueueReplaceState(a,a.state,null)}function wu(o,a,f,g){var x=o.stateNode;x.props=f,x.state=o.memoizedState,x.refs=Hd,Su(o);var T=a.contextType;typeof T=="object"&&T!==null?x.context=Zn(T):(T=un(a)?li:Jt.current,x.context=sr(o,T)),x.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(Eu(o,a,T,f),x.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof x.getSnapshotBeforeUpdate=="function"||typeof x.UNSAFE_componentWillMount!="function"&&typeof x.componentWillMount!="function"||(a=x.state,typeof x.componentWillMount=="function"&&x.componentWillMount(),typeof x.UNSAFE_componentWillMount=="function"&&x.UNSAFE_componentWillMount(),a!==x.state&&cl.enqueueReplaceState(x,x.state,null),ll(o,f,x,g),x.state=o.memoizedState),typeof x.componentDidMount=="function"&&(o.flags|=4194308)}var Ss=[],Es=0,ul=null,hl=0,Jn=[],jn=0,Ur=null,ki=1,Hi="";function Dr(o,a){Ss[Es++]=hl,Ss[Es++]=ul,ul=o,hl=a}function Xd(o,a,f){Jn[jn++]=ki,Jn[jn++]=Hi,Jn[jn++]=Ur,Ur=o;var g=ki;o=Hi;var x=32-ci(g)-1;g&=~(1<<x),f+=1;var T=32-ci(a)+x;if(30<T){var D=x-x%5;T=(g&(1<<D)-1).toString(32),g>>=D,x-=D,ki=1<<32-ci(a)+x|f<<x|g,Hi=T+o}else ki=1<<T|f<<x|g,Hi=o}function Tu(o){o.return!==null&&(Dr(o,1),Xd(o,1,0))}function Au(o){for(;o===ul;)ul=Ss[--Es],Ss[Es]=null,hl=Ss[--Es],Ss[Es]=null;for(;o===Ur;)Ur=Jn[--jn],Jn[jn]=null,Hi=Jn[--jn],Jn[jn]=null,ki=Jn[--jn],Jn[jn]=null}var zn=null,Bn=null,Ft=!1,bo=!1,hi=null;function qd(o,a){var f=ei(5,null,null,0);f.elementType="DELETED",f.stateNode=a,f.return=o,a=o.deletions,a===null?(o.deletions=[f],o.flags|=16):a.push(f)}function Yd(o,a){switch(o.tag){case 5:return a=Yn(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,zn=o,Bn=Q(a),!0):!1;case 6:return a=ys(a,o.pendingProps),a!==null?(o.stateNode=a,zn=o,Bn=null,!0):!1;case 13:if(a=Ja(a),a!==null){var f=Ur!==null?{id:ki,overflow:Hi}:null;return o.memoizedState={dehydrated:a,treeContext:f,retryLane:1073741824},f=ei(18,null,null,0),f.stateNode=a,f.return=o,o.child=f,zn=o,Bn=null,!0}return!1;default:return!1}}function bu(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Ru(o){if(Ft){var a=Bn;if(a){var f=a;if(!Yd(o,a)){if(bu(o))throw Error(l(418));a=I(f);var g=zn;a&&Yd(o,a)?qd(g,f):(o.flags=o.flags&-4097|2,Ft=!1,zn=o)}}else{if(bu(o))throw Error(l(418));o.flags=o.flags&-4097|2,Ft=!1,zn=o}}}function Zd(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;zn=o}function Ro(o){if(!ne||o!==zn)return!1;if(!Ft)return Zd(o),Ft=!0,!1;if(o.tag!==3&&(o.tag!==5||bt(o.type)&&!xe(o.type,o.memoizedProps))){var a=Bn;if(a){if(bu(o)){for(o=Bn;o;)o=I(o);throw Error(l(418))}for(;a;)qd(o,a),a=I(a)}}if(Zd(o),o.tag===13){if(!ne)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Bn=$e(o)}else Bn=zn?I(o.stateNode):null;return!0}function ws(){ne&&(Bn=zn=null,bo=Ft=!1)}function Cu(o){hi===null?hi=[o]:hi.push(o)}function Co(o,a,f){if(o=f.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(l(309));var g=f.stateNode}if(!g)throw Error(l(147,o));var x=g,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(D){var G=x.refs;G===Hd&&(G=x.refs={}),D===null?delete G[T]:G[T]=D},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!f._owner)throw Error(l(290,o))}return o}function fl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function Jd(o){var a=o._init;return a(o._payload)}function jd(o){function a(j,W){if(o){var te=j.deletions;te===null?(j.deletions=[W],j.flags|=16):te.push(W)}}function f(j,W){if(!o)return null;for(;W!==null;)a(j,W),W=W.sibling;return null}function g(j,W){for(j=new Map;W!==null;)W.key!==null?j.set(W.key,W):j.set(W.index,W),W=W.sibling;return j}function x(j,W){return j=fr(j,W),j.index=0,j.sibling=null,j}function T(j,W,te){return j.index=te,o?(te=j.alternate,te!==null?(te=te.index,te<W?(j.flags|=2,W):te):(j.flags|=2,W)):(j.flags|=1048576,W)}function D(j){return o&&j.alternate===null&&(j.flags|=2),j}function G(j,W,te,Re){return W===null||W.tag!==6?(W=fh(te,j.mode,Re),W.return=j,W):(W=x(W,te),W.return=j,W)}function ie(j,W,te,Re){var Be=te.type;return Be===d?Ne(j,W,te.props.children,Re,te.key):W!==null&&(W.elementType===Be||typeof Be=="object"&&Be!==null&&Be.$$typeof===E&&Jd(Be)===W.type)?(Re=x(W,te.props),Re.ref=Co(j,W,te),Re.return=j,Re):(Re=Vl(te.type,te.key,te.props,null,j.mode,Re),Re.ref=Co(j,W,te),Re.return=j,Re)}function Me(j,W,te,Re){return W===null||W.tag!==4||W.stateNode.containerInfo!==te.containerInfo||W.stateNode.implementation!==te.implementation?(W=dh(te,j.mode,Re),W.return=j,W):(W=x(W,te.children||[]),W.return=j,W)}function Ne(j,W,te,Re,Be){return W===null||W.tag!==7?(W=Hr(te,j.mode,Re,Be),W.return=j,W):(W=x(W,te),W.return=j,W)}function tt(j,W,te){if(typeof W=="string"&&W!==""||typeof W=="number")return W=fh(""+W,j.mode,te),W.return=j,W;if(typeof W=="object"&&W!==null){switch(W.$$typeof){case u:return te=Vl(W.type,W.key,W.props,null,j.mode,te),te.ref=Co(j,null,W),te.return=j,te;case h:return W=dh(W,j.mode,te),W.return=j,W;case E:var Re=W._init;return tt(j,Re(W._payload),te)}if($(W)||C(W))return W=Hr(W,j.mode,te,null),W.return=j,W;fl(j,W)}return null}function Xe(j,W,te,Re){var Be=W!==null?W.key:null;if(typeof te=="string"&&te!==""||typeof te=="number")return Be!==null?null:G(j,W,""+te,Re);if(typeof te=="object"&&te!==null){switch(te.$$typeof){case u:return te.key===Be?ie(j,W,te,Re):null;case h:return te.key===Be?Me(j,W,te,Re):null;case E:return Be=te._init,Xe(j,W,Be(te._payload),Re)}if($(te)||C(te))return Be!==null?null:Ne(j,W,te,Re,null);fl(j,te)}return null}function Lt(j,W,te,Re,Be){if(typeof Re=="string"&&Re!==""||typeof Re=="number")return j=j.get(te)||null,G(W,j,""+Re,Be);if(typeof Re=="object"&&Re!==null){switch(Re.$$typeof){case u:return j=j.get(Re.key===null?te:Re.key)||null,ie(W,j,Re,Be);case h:return j=j.get(Re.key===null?te:Re.key)||null,Me(W,j,Re,Be);case E:var at=Re._init;return Lt(j,W,te,at(Re._payload),Be)}if($(Re)||C(Re))return j=j.get(te)||null,Ne(W,j,Re,Be,null);fl(W,Re)}return null}function He(j,W,te,Re){for(var Be=null,at=null,nt=W,Mt=W=0,on=null;nt!==null&&Mt<te.length;Mt++){nt.index>Mt?(on=nt,nt=null):on=nt.sibling;var St=Xe(j,nt,te[Mt],Re);if(St===null){nt===null&&(nt=on);break}o&&nt&&St.alternate===null&&a(j,nt),W=T(St,W,Mt),at===null?Be=St:at.sibling=St,at=St,nt=on}if(Mt===te.length)return f(j,nt),Ft&&Dr(j,Mt),Be;if(nt===null){for(;Mt<te.length;Mt++)nt=tt(j,te[Mt],Re),nt!==null&&(W=T(nt,W,Mt),at===null?Be=nt:at.sibling=nt,at=nt);return Ft&&Dr(j,Mt),Be}for(nt=g(j,nt);Mt<te.length;Mt++)on=Lt(nt,j,Mt,te[Mt],Re),on!==null&&(o&&on.alternate!==null&&nt.delete(on.key===null?Mt:on.key),W=T(on,W,Mt),at===null?Be=on:at.sibling=on,at=on);return o&&nt.forEach(function(dr){return a(j,dr)}),Ft&&Dr(j,Mt),Be}function _n(j,W,te,Re){var Be=C(te);if(typeof Be!="function")throw Error(l(150));if(te=Be.call(te),te==null)throw Error(l(151));for(var at=Be=null,nt=W,Mt=W=0,on=null,St=te.next();nt!==null&&!St.done;Mt++,St=te.next()){nt.index>Mt?(on=nt,nt=null):on=nt.sibling;var dr=Xe(j,nt,St.value,Re);if(dr===null){nt===null&&(nt=on);break}o&&nt&&dr.alternate===null&&a(j,nt),W=T(dr,W,Mt),at===null?Be=dr:at.sibling=dr,at=dr,nt=on}if(St.done)return f(j,nt),Ft&&Dr(j,Mt),Be;if(nt===null){for(;!St.done;Mt++,St=te.next())St=tt(j,St.value,Re),St!==null&&(W=T(St,W,Mt),at===null?Be=St:at.sibling=St,at=St);return Ft&&Dr(j,Mt),Be}for(nt=g(j,nt);!St.done;Mt++,St=te.next())St=Lt(nt,j,Mt,St.value,Re),St!==null&&(o&&St.alternate!==null&&nt.delete(St.key===null?Mt:St.key),W=T(St,W,Mt),at===null?Be=St:at.sibling=St,at=St);return o&&nt.forEach(function(yy){return a(j,yy)}),Ft&&Dr(j,Mt),Be}function ti(j,W,te,Re){if(typeof te=="object"&&te!==null&&te.type===d&&te.key===null&&(te=te.props.children),typeof te=="object"&&te!==null){switch(te.$$typeof){case u:e:{for(var Be=te.key,at=W;at!==null;){if(at.key===Be){if(Be=te.type,Be===d){if(at.tag===7){f(j,at.sibling),W=x(at,te.props.children),W.return=j,j=W;break e}}else if(at.elementType===Be||typeof Be=="object"&&Be!==null&&Be.$$typeof===E&&Jd(Be)===at.type){f(j,at.sibling),W=x(at,te.props),W.ref=Co(j,at,te),W.return=j,j=W;break e}f(j,at);break}else a(j,at);at=at.sibling}te.type===d?(W=Hr(te.props.children,j.mode,Re,te.key),W.return=j,j=W):(Re=Vl(te.type,te.key,te.props,null,j.mode,Re),Re.ref=Co(j,W,te),Re.return=j,j=Re)}return D(j);case h:e:{for(at=te.key;W!==null;){if(W.key===at)if(W.tag===4&&W.stateNode.containerInfo===te.containerInfo&&W.stateNode.implementation===te.implementation){f(j,W.sibling),W=x(W,te.children||[]),W.return=j,j=W;break e}else{f(j,W);break}else a(j,W);W=W.sibling}W=dh(te,j.mode,Re),W.return=j,j=W}return D(j);case E:return at=te._init,ti(j,W,at(te._payload),Re)}if($(te))return He(j,W,te,Re);if(C(te))return _n(j,W,te,Re);fl(j,te)}return typeof te=="string"&&te!==""||typeof te=="number"?(te=""+te,W!==null&&W.tag===6?(f(j,W.sibling),W=x(W,te),W.return=j,j=W):(f(j,W),W=fh(te,j.mode,Re),W.return=j,j=W),D(j)):f(j,W)}return ti}var Ts=jd(!0),Kd=jd(!1),Po={},Kn=Cn(Po),Lo=Cn(Po),As=Cn(Po);function bi(o){if(o===Po)throw Error(l(174));return o}function Pu(o,a){st(As,a),st(Lo,o),st(Kn,Po),o=ae(a),Rt(Kn),st(Kn,o)}function bs(){Rt(Kn),Rt(Lo),Rt(As)}function Qd(o){var a=bi(As.current),f=bi(Kn.current);a=k(f,o.type,a),f!==a&&(st(Lo,o),st(Kn,a))}function Lu(o){Lo.current===o&&(Rt(Kn),Rt(Lo))}var zt=Cn(0);function dl(o){for(var a=o;a!==null;){if(a.tag===13){var f=a.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||ja(f)||wo(f)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var Iu=[];function Uu(){for(var o=0;o<Iu.length;o++){var a=Iu[o];ye?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}Iu.length=0}var pl=c.ReactCurrentDispatcher,Qn=c.ReactCurrentBatchConfig,Rs=0,kt=null,pn=null,sn=null,ml=!1,Io=!1,Uo=0,Wv=0;function mn(){throw Error(l(321))}function Du(o,a){if(a===null)return!1;for(var f=0;f<a.length&&f<o.length;f++)if(!wi(o[f],a[f]))return!1;return!0}function Nu(o,a,f,g,x,T){if(Rs=T,kt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,pl.current=o===null||o.memoizedState===null?Zv:Jv,o=f(g,x),Io){T=0;do{if(Io=!1,Uo=0,25<=T)throw Error(l(301));T+=1,sn=pn=null,a.updateQueue=null,pl.current=jv,o=f(g,x)}while(Io)}if(pl.current=xl,a=pn!==null&&pn.next!==null,Rs=0,sn=pn=kt=null,ml=!1,a)throw Error(l(300));return o}function Fu(){var o=Uo!==0;return Uo=0,o}function Gi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return sn===null?kt.memoizedState=sn=o:sn=sn.next=o,sn}function Ri(){if(pn===null){var o=kt.alternate;o=o!==null?o.memoizedState:null}else o=pn.next;var a=sn===null?kt.memoizedState:sn.next;if(a!==null)sn=a,pn=o;else{if(o===null)throw Error(l(310));pn=o,o={memoizedState:pn.memoizedState,baseState:pn.baseState,baseQueue:pn.baseQueue,queue:pn.queue,next:null},sn===null?kt.memoizedState=sn=o:sn=sn.next=o}return sn}function Nr(o,a){return typeof a=="function"?a(o):a}function gl(o){var a=Ri(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=pn,x=g.baseQueue,T=f.pending;if(T!==null){if(x!==null){var D=x.next;x.next=T.next,T.next=D}g.baseQueue=x=T,f.pending=null}if(x!==null){T=x.next,g=g.baseState;var G=D=null,ie=null,Me=T;do{var Ne=Me.lane;if((Rs&Ne)===Ne)ie!==null&&(ie=ie.next={lane:0,action:Me.action,hasEagerState:Me.hasEagerState,eagerState:Me.eagerState,next:null}),g=Me.hasEagerState?Me.eagerState:o(g,Me.action);else{var tt={lane:Ne,action:Me.action,hasEagerState:Me.hasEagerState,eagerState:Me.eagerState,next:null};ie===null?(G=ie=tt,D=g):ie=ie.next=tt,kt.lanes|=Ne,Ps|=Ne}Me=Me.next}while(Me!==null&&Me!==T);ie===null?D=g:ie.next=G,wi(g,a.memoizedState)||(kn=!0),a.memoizedState=g,a.baseState=D,a.baseQueue=ie,f.lastRenderedState=g}if(o=f.interleaved,o!==null){x=o;do T=x.lane,kt.lanes|=T,Ps|=T,x=x.next;while(x!==o)}else x===null&&(f.lanes=0);return[a.memoizedState,f.dispatch]}function _l(o){var a=Ri(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=f.dispatch,x=f.pending,T=a.memoizedState;if(x!==null){f.pending=null;var D=x=x.next;do T=o(T,D.action),D=D.next;while(D!==x);wi(T,a.memoizedState)||(kn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),f.lastRenderedState=T}return[T,g]}function $d(){}function ep(o,a){var f=kt,g=Ri(),x=a(),T=!wi(g.memoizedState,x);if(T&&(g.memoizedState=x,kn=!0),g=g.queue,No(ip.bind(null,f,g,o),[o]),g.getSnapshot!==a||T||sn!==null&&sn.memoizedState.tag&1){if(f.flags|=2048,Do(9,np.bind(null,f,g,x,a),void 0,null),jt===null)throw Error(l(349));Rs&30||tp(f,a,x)}return x}function tp(o,a,f){o.flags|=16384,o={getSnapshot:a,value:f},a=kt.updateQueue,a===null?(a={lastEffect:null,stores:null},kt.updateQueue=a,a.stores=[o]):(f=a.stores,f===null?a.stores=[o]:f.push(o))}function np(o,a,f,g){a.value=f,a.getSnapshot=g,rp(a)&&$n(o,1,-1)}function ip(o,a,f){return f(function(){rp(a)&&$n(o,1,-1)})}function rp(o){var a=o.getSnapshot;o=o.value;try{var f=a();return!wi(o,f)}catch{return!0}}function Ou(o){var a=Gi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Nr,lastRenderedState:o},a.queue=o,o=o.dispatch=Yv.bind(null,kt,o),[a.memoizedState,o]}function Do(o,a,f,g){return o={tag:o,create:a,destroy:f,deps:g,next:null},a=kt.updateQueue,a===null?(a={lastEffect:null,stores:null},kt.updateQueue=a,a.lastEffect=o.next=o):(f=a.lastEffect,f===null?a.lastEffect=o.next=o:(g=f.next,f.next=o,o.next=g,a.lastEffect=o)),o}function sp(){return Ri().memoizedState}function vl(o,a,f,g){var x=Gi();kt.flags|=o,x.memoizedState=Do(1|a,f,void 0,g===void 0?null:g)}function yl(o,a,f,g){var x=Ri();g=g===void 0?null:g;var T=void 0;if(pn!==null){var D=pn.memoizedState;if(T=D.destroy,g!==null&&Du(g,D.deps)){x.memoizedState=Do(a,f,T,g);return}}kt.flags|=o,x.memoizedState=Do(1|a,f,T,g)}function zu(o,a){return vl(8390656,8,o,a)}function No(o,a){return yl(2048,8,o,a)}function op(o,a){return yl(4,2,o,a)}function ap(o,a){return yl(4,4,o,a)}function lp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function cp(o,a,f){return f=f!=null?f.concat([o]):null,yl(4,4,lp.bind(null,a,o),f)}function Bu(){}function up(o,a){var f=Ri();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&Du(a,g[1])?g[0]:(f.memoizedState=[o,a],o)}function hp(o,a){var f=Ri();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&Du(a,g[1])?g[0]:(o=o(),f.memoizedState=[o,a],o)}function Xv(o,a){var f=xt;xt=f!==0&&4>f?f:4,o(!0);var g=Qn.transition;Qn.transition={};try{o(!1),a()}finally{xt=f,Qn.transition=g}}function fp(){return Ri().memoizedState}function qv(o,a,f){var g=ur(o);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},dp(o)?pp(a,f):(mp(o,a,f),f=wn(),o=$n(o,g,f),o!==null&&gp(o,a,g))}function Yv(o,a,f){var g=ur(o),x={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(dp(o))pp(a,x);else{mp(o,a,x);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var D=a.lastRenderedState,G=T(D,f);if(x.hasEagerState=!0,x.eagerState=G,wi(G,D))return}catch{}finally{}f=wn(),o=$n(o,g,f),o!==null&&gp(o,a,g)}}function dp(o){var a=o.alternate;return o===kt||a!==null&&a===kt}function pp(o,a){Io=ml=!0;var f=o.pending;f===null?a.next=a:(a.next=f.next,f.next=a),o.pending=a}function mp(o,a,f){jt!==null&&o.mode&1&&!(ft&2)?(o=a.interleaved,o===null?(f.next=f,Ai===null?Ai=[a]:Ai.push(a)):(f.next=o.next,o.next=f),a.interleaved=f):(o=a.pending,o===null?f.next=f:(f.next=o.next,o.next=f),a.pending=f)}function gp(o,a,f){if(f&4194240){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,du(o,f)}}var xl={readContext:Zn,useCallback:mn,useContext:mn,useEffect:mn,useImperativeHandle:mn,useInsertionEffect:mn,useLayoutEffect:mn,useMemo:mn,useReducer:mn,useRef:mn,useState:mn,useDebugValue:mn,useDeferredValue:mn,useTransition:mn,useMutableSource:mn,useSyncExternalStore:mn,useId:mn,unstable_isNewReconciler:!1},Zv={readContext:Zn,useCallback:function(o,a){return Gi().memoizedState=[o,a===void 0?null:a],o},useContext:Zn,useEffect:zu,useImperativeHandle:function(o,a,f){return f=f!=null?f.concat([o]):null,vl(4194308,4,lp.bind(null,a,o),f)},useLayoutEffect:function(o,a){return vl(4194308,4,o,a)},useInsertionEffect:function(o,a){return vl(4,2,o,a)},useMemo:function(o,a){var f=Gi();return a=a===void 0?null:a,o=o(),f.memoizedState=[o,a],o},useReducer:function(o,a,f){var g=Gi();return a=f!==void 0?f(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=qv.bind(null,kt,o),[g.memoizedState,o]},useRef:function(o){var a=Gi();return o={current:o},a.memoizedState=o},useState:Ou,useDebugValue:Bu,useDeferredValue:function(o){var a=Ou(o),f=a[0],g=a[1];return zu(function(){var x=Qn.transition;Qn.transition={};try{g(o)}finally{Qn.transition=x}},[o]),f},useTransition:function(){var o=Ou(!1),a=o[0];return o=Xv.bind(null,o[1]),Gi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,f){var g=kt,x=Gi();if(Ft){if(f===void 0)throw Error(l(407));f=f()}else{if(f=a(),jt===null)throw Error(l(349));Rs&30||tp(g,a,f)}x.memoizedState=f;var T={value:f,getSnapshot:a};return x.queue=T,zu(ip.bind(null,g,T,o),[o]),g.flags|=2048,Do(9,np.bind(null,g,T,f,a),void 0,null),f},useId:function(){var o=Gi(),a=jt.identifierPrefix;if(Ft){var f=Hi,g=ki;f=(g&~(1<<32-ci(g)-1)).toString(32)+f,a=":"+a+"R"+f,f=Uo++,0<f&&(a+="H"+f.toString(32)),a+=":"}else f=Wv++,a=":"+a+"r"+f.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},Jv={readContext:Zn,useCallback:up,useContext:Zn,useEffect:No,useImperativeHandle:cp,useInsertionEffect:op,useLayoutEffect:ap,useMemo:hp,useReducer:gl,useRef:sp,useState:function(){return gl(Nr)},useDebugValue:Bu,useDeferredValue:function(o){var a=gl(Nr),f=a[0],g=a[1];return No(function(){var x=Qn.transition;Qn.transition={};try{g(o)}finally{Qn.transition=x}},[o]),f},useTransition:function(){var o=gl(Nr)[0],a=Ri().memoizedState;return[o,a]},useMutableSource:$d,useSyncExternalStore:ep,useId:fp,unstable_isNewReconciler:!1},jv={readContext:Zn,useCallback:up,useContext:Zn,useEffect:No,useImperativeHandle:cp,useInsertionEffect:op,useLayoutEffect:ap,useMemo:hp,useReducer:_l,useRef:sp,useState:function(){return _l(Nr)},useDebugValue:Bu,useDeferredValue:function(o){var a=_l(Nr),f=a[0],g=a[1];return No(function(){var x=Qn.transition;Qn.transition={};try{g(o)}finally{Qn.transition=x}},[o]),f},useTransition:function(){var o=_l(Nr)[0],a=Ri().memoizedState;return[o,a]},useMutableSource:$d,useSyncExternalStore:ep,useId:fp,unstable_isNewReconciler:!1};function ku(o,a){try{var f="",g=a;do f+=Vv(g),g=g.return;while(g);var x=f}catch(T){x=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:x}}function Hu(o,a){try{console.error(a.value)}catch(f){setTimeout(function(){throw f})}}var Kv=typeof WeakMap=="function"?WeakMap:Map;function _p(o,a,f){f=Bi(-1,f),f.tag=3,f.payload={element:null};var g=a.value;return f.callback=function(){Fl||(Fl=!0,sh=g),Hu(o,a)},f}function vp(o,a,f){f=Bi(-1,f),f.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var x=a.value;f.payload=function(){return g(x)},f.callback=function(){Hu(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(f.callback=function(){Hu(o,a),typeof g!="function"&&(lr===null?lr=new Set([this]):lr.add(this));var D=a.stack;this.componentDidCatch(a.value,{componentStack:D!==null?D:""})}),f}function yp(o,a,f){var g=o.pingCache;if(g===null){g=o.pingCache=new Kv;var x=new Set;g.set(a,x)}else x=g.get(a),x===void 0&&(x=new Set,g.set(a,x));x.has(f)||(x.add(f),o=hy.bind(null,o,a,f),a.then(o,o))}function xp(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function Mp(o,a,f,g,x){return o.mode&1?(o.flags|=65536,o.lanes=x,o):(o===a?o.flags|=65536:(o.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(a=Bi(-1,1),a.tag=2,ar(f,a))),f.lanes|=1),o)}function Ci(o){o.flags|=4}function Sp(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Fo,Oo,Ml,Sl;if(Ce)Fo=function(o,a){for(var f=a.child;f!==null;){if(f.tag===5||f.tag===6)pe(o,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===a)break;for(;f.sibling===null;){if(f.return===null||f.return===a)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},Oo=function(){},Ml=function(o,a,f,g,x){if(o=o.memoizedProps,o!==g){var T=a.stateNode,D=bi(Kn.current);f=le(T,f,o,g,x,D),(a.updateQueue=f)&&Ci(a)}},Sl=function(o,a,f,g){f!==g&&Ci(a)};else if(fe){Fo=function(o,a,f,g){for(var x=a.child;x!==null;){if(x.tag===5){var T=x.stateNode;f&&g&&(T=Nt(T,x.type,x.memoizedProps,x)),pe(o,T)}else if(x.tag===6)T=x.stateNode,f&&g&&(T=Sn(T,x.memoizedProps,x)),pe(o,T);else if(x.tag!==4){if(x.tag===22&&x.memoizedState!==null)T=x.child,T!==null&&(T.return=x),Fo(o,x,!0,!0);else if(x.child!==null){x.child.return=x,x=x.child;continue}}if(x===a)break;for(;x.sibling===null;){if(x.return===null||x.return===a)return;x=x.return}x.sibling.return=x.return,x=x.sibling}};var Ep=function(o,a,f,g){for(var x=a.child;x!==null;){if(x.tag===5){var T=x.stateNode;f&&g&&(T=Nt(T,x.type,x.memoizedProps,x)),At(o,T)}else if(x.tag===6)T=x.stateNode,f&&g&&(T=Sn(T,x.memoizedProps,x)),At(o,T);else if(x.tag!==4){if(x.tag===22&&x.memoizedState!==null)T=x.child,T!==null&&(T.return=x),Ep(o,x,!0,!0);else if(x.child!==null){x.child.return=x,x=x.child;continue}}if(x===a)break;for(;x.sibling===null;){if(x.return===null||x.return===a)return;x=x.return}x.sibling.return=x.return,x=x.sibling}};Oo=function(o,a){var f=a.stateNode;if(!Sp(o,a)){o=f.containerInfo;var g=Tt(o);Ep(g,a,!1,!1),f.pendingChildren=g,Ci(a),nn(o,g)}},Ml=function(o,a,f,g,x){var T=o.stateNode,D=o.memoizedProps;if((o=Sp(o,a))&&D===g)a.stateNode=T;else{var G=a.stateNode,ie=bi(Kn.current),Me=null;D!==g&&(Me=le(G,f,D,g,x,ie)),o&&Me===null?a.stateNode=T:(T=ze(T,Me,f,D,g,a,o,G),Z(T,f,g,x,ie)&&Ci(a),a.stateNode=T,o?Ci(a):Fo(T,a,!1,!1))}},Sl=function(o,a,f,g){f!==g?(o=bi(As.current),f=bi(Kn.current),a.stateNode=Se(g,o,f,a),Ci(a)):a.stateNode=o.stateNode}}else Oo=function(){},Ml=function(){},Sl=function(){};function zo(o,a){if(!Ft)switch(o.tailMode){case"hidden":a=o.tail;for(var f=null;a!==null;)a.alternate!==null&&(f=a),a=a.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function gn(o){var a=o.alternate!==null&&o.alternate.child===o.child,f=0,g=0;if(a)for(var x=o.child;x!==null;)f|=x.lanes|x.childLanes,g|=x.subtreeFlags&14680064,g|=x.flags&14680064,x.return=o,x=x.sibling;else for(x=o.child;x!==null;)f|=x.lanes|x.childLanes,g|=x.subtreeFlags,g|=x.flags,x.return=o,x=x.sibling;return o.subtreeFlags|=g,o.childLanes=f,a}function Qv(o,a,f){var g=a.pendingProps;switch(Au(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return gn(a),null;case 1:return un(a.type)&&Ka(),gn(a),null;case 3:return g=a.stateNode,bs(),Rt(Pt),Rt(Jt),Uu(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Ro(a)?Ci(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,hi!==null&&(lh(hi),hi=null))),Oo(o,a),gn(a),null;case 5:Lu(a),f=bi(As.current);var x=a.type;if(o!==null&&a.stateNode!=null)Ml(o,a,x,g,f),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return gn(a),null}if(o=bi(Kn.current),Ro(a)){if(!ne)throw Error(l(175));o=ce(a.stateNode,a.type,a.memoizedProps,f,o,a,!bo),a.updateQueue=o,o!==null&&Ci(a)}else{var T=he(x,g,f,o,a);Fo(T,a,!1,!1),a.stateNode=T,Z(T,x,g,f,o)&&Ci(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return gn(a),null;case 6:if(o&&a.stateNode!=null)Sl(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=bi(As.current),f=bi(Kn.current),Ro(a)){if(!ne)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(f=We(o,g,a,!bo))&&(x=zn,x!==null))switch(T=(x.mode&1)!==0,x.tag){case 3:cn(x.stateNode.containerInfo,o,g,T);break;case 5:On(x.type,x.memoizedProps,x.stateNode,o,g,T)}f&&Ci(a)}else a.stateNode=Se(g,o,f,a)}return gn(a),null;case 13:if(Rt(zt),g=a.memoizedState,Ft&&Bn!==null&&a.mode&1&&!(a.flags&128)){for(o=Bn;o;)o=I(o);return ws(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Ro(a),o===null){if(!g)throw Error(l(318));if(!ne)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Je(o,a)}else ws(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return gn(a),null}return hi!==null&&(lh(hi),hi=null),a.flags&128?(a.lanes=f,a):(g=g!==null,f=!1,o===null?Ro(a):f=o.memoizedState!==null,g&&!f&&(a.child.flags|=8192,a.mode&1&&(o===null||zt.current&1?$t===0&&($t=3):uh())),a.updateQueue!==null&&(a.flags|=4),gn(a),null);case 4:return bs(),Oo(o,a),o===null&&Ue(a.stateNode.containerInfo),gn(a),null;case 10:return xu(a.type._context),gn(a),null;case 17:return un(a.type)&&Ka(),gn(a),null;case 19:if(Rt(zt),x=a.memoizedState,x===null)return gn(a),null;if(g=(a.flags&128)!==0,T=x.rendering,T===null)if(g)zo(x,!1);else{if($t!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(T=dl(o),T!==null){for(a.flags|=128,zo(x,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=f,g=a.child;g!==null;)f=g,x=o,f.flags&=14680066,T=f.alternate,T===null?(f.childLanes=0,f.lanes=x,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=T.childLanes,f.lanes=T.lanes,f.child=T.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=T.memoizedProps,f.memoizedState=T.memoizedState,f.updateQueue=T.updateQueue,f.type=T.type,x=T.dependencies,f.dependencies=x===null?null:{lanes:x.lanes,firstContext:x.firstContext}),g=g.sibling;return st(zt,zt.current&1|2),a.child}o=o.sibling}x.tail!==null&&rn()>rh&&(a.flags|=128,g=!0,zo(x,!1),a.lanes=4194304)}else{if(!g)if(o=dl(T),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),zo(x,!0),x.tail===null&&x.tailMode==="hidden"&&!T.alternate&&!Ft)return gn(a),null}else 2*rn()-x.renderingStartTime>rh&&f!==1073741824&&(a.flags|=128,g=!0,zo(x,!1),a.lanes=4194304);x.isBackwards?(T.sibling=a.child,a.child=T):(o=x.last,o!==null?o.sibling=T:a.child=T,x.last=T)}return x.tail!==null?(a=x.tail,x.rendering=a,x.tail=a.sibling,x.renderingStartTime=rn(),a.sibling=null,o=zt.current,st(zt,g?o&1|2:o&1),a):(gn(a),null);case 22:case 23:return ch(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&a.mode&1?Hn&1073741824&&(gn(a),Ce&&a.subtreeFlags&6&&(a.flags|=8192)):gn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var $v=c.ReactCurrentOwner,kn=!1;function En(o,a,f,g){a.child=o===null?Kd(a,null,f,g):Ts(a,o.child,f,g)}function wp(o,a,f,g,x){f=f.render;var T=a.ref;return Ms(a,x),g=Nu(o,a,f,g,T,x),f=Fu(),o!==null&&!kn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~x,Vi(o,a,x)):(Ft&&f&&Tu(a),a.flags|=1,En(o,a,g,x),a.child)}function Tp(o,a,f,g,x){if(o===null){var T=f.type;return typeof T=="function"&&!hh(T)&&T.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(a.tag=15,a.type=T,Ap(o,a,T,g,x)):(o=Vl(f.type,null,g,a,a.mode,x),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,!(o.lanes&x)){var D=T.memoizedProps;if(f=f.compare,f=f!==null?f:rl,f(D,g)&&o.ref===a.ref)return Vi(o,a,x)}return a.flags|=1,o=fr(T,g),o.ref=a.ref,o.return=a,a.child=o}function Ap(o,a,f,g,x){if(o!==null&&rl(o.memoizedProps,g)&&o.ref===a.ref)if(kn=!1,(o.lanes&x)!==0)o.flags&131072&&(kn=!0);else return a.lanes=o.lanes,Vi(o,a,x);return Gu(o,a,f,g,x)}function bp(o,a,f){var g=a.pendingProps,x=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},st(Cs,Hn),Hn|=f;else if(f&1073741824)a.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:f,st(Cs,Hn),Hn|=g;else return o=T!==null?T.baseLanes|f:f,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,st(Cs,Hn),Hn|=o,null;else T!==null?(g=T.baseLanes|f,a.memoizedState=null):g=f,st(Cs,Hn),Hn|=g;return En(o,a,x,f),a.child}function Rp(o,a){var f=a.ref;(o===null&&f!==null||o!==null&&o.ref!==f)&&(a.flags|=512,a.flags|=2097152)}function Gu(o,a,f,g,x){var T=un(f)?li:Jt.current;return T=sr(a,T),Ms(a,x),f=Nu(o,a,f,g,T,x),g=Fu(),o!==null&&!kn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~x,Vi(o,a,x)):(Ft&&g&&Tu(a),a.flags|=1,En(o,a,f,x),a.child)}function Cp(o,a,f,g,x){if(un(f)){var T=!0;Qa(a)}else T=!1;if(Ms(a,x),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),Vd(a,f,g),wu(a,f,g,x),g=!0;else if(o===null){var D=a.stateNode,G=a.memoizedProps;D.props=G;var ie=D.context,Me=f.contextType;typeof Me=="object"&&Me!==null?Me=Zn(Me):(Me=un(f)?li:Jt.current,Me=sr(a,Me));var Ne=f.getDerivedStateFromProps,tt=typeof Ne=="function"||typeof D.getSnapshotBeforeUpdate=="function";tt||typeof D.UNSAFE_componentWillReceiveProps!="function"&&typeof D.componentWillReceiveProps!="function"||(G!==g||ie!==Me)&&Wd(a,D,g,Me),or=!1;var Xe=a.memoizedState;D.state=Xe,ll(a,g,D,x),ie=a.memoizedState,G!==g||Xe!==ie||Pt.current||or?(typeof Ne=="function"&&(Eu(a,f,Ne,g),ie=a.memoizedState),(G=or||Gd(a,f,G,g,Xe,ie,Me))?(tt||typeof D.UNSAFE_componentWillMount!="function"&&typeof D.componentWillMount!="function"||(typeof D.componentWillMount=="function"&&D.componentWillMount(),typeof D.UNSAFE_componentWillMount=="function"&&D.UNSAFE_componentWillMount()),typeof D.componentDidMount=="function"&&(a.flags|=4194308)):(typeof D.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=ie),D.props=g,D.state=ie,D.context=Me,g=G):(typeof D.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{D=a.stateNode,zd(o,a),G=a.memoizedProps,Me=a.type===a.elementType?G:ui(a.type,G),D.props=Me,tt=a.pendingProps,Xe=D.context,ie=f.contextType,typeof ie=="object"&&ie!==null?ie=Zn(ie):(ie=un(f)?li:Jt.current,ie=sr(a,ie));var Lt=f.getDerivedStateFromProps;(Ne=typeof Lt=="function"||typeof D.getSnapshotBeforeUpdate=="function")||typeof D.UNSAFE_componentWillReceiveProps!="function"&&typeof D.componentWillReceiveProps!="function"||(G!==tt||Xe!==ie)&&Wd(a,D,g,ie),or=!1,Xe=a.memoizedState,D.state=Xe,ll(a,g,D,x);var He=a.memoizedState;G!==tt||Xe!==He||Pt.current||or?(typeof Lt=="function"&&(Eu(a,f,Lt,g),He=a.memoizedState),(Me=or||Gd(a,f,Me,g,Xe,He,ie)||!1)?(Ne||typeof D.UNSAFE_componentWillUpdate!="function"&&typeof D.componentWillUpdate!="function"||(typeof D.componentWillUpdate=="function"&&D.componentWillUpdate(g,He,ie),typeof D.UNSAFE_componentWillUpdate=="function"&&D.UNSAFE_componentWillUpdate(g,He,ie)),typeof D.componentDidUpdate=="function"&&(a.flags|=4),typeof D.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof D.componentDidUpdate!="function"||G===o.memoizedProps&&Xe===o.memoizedState||(a.flags|=4),typeof D.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&Xe===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=He),D.props=g,D.state=He,D.context=ie,g=Me):(typeof D.componentDidUpdate!="function"||G===o.memoizedProps&&Xe===o.memoizedState||(a.flags|=4),typeof D.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&Xe===o.memoizedState||(a.flags|=1024),g=!1)}return Vu(o,a,f,g,T,x)}function Vu(o,a,f,g,x,T){Rp(o,a);var D=(a.flags&128)!==0;if(!g&&!D)return x&&Ud(a,f,!1),Vi(o,a,T);g=a.stateNode,$v.current=a;var G=D&&typeof f.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&D?(a.child=Ts(a,o.child,null,T),a.child=Ts(a,null,G,T)):En(o,a,G,T),a.memoizedState=g.state,x&&Ud(a,f,!0),a.child}function Pp(o){var a=o.stateNode;a.pendingContext?Ld(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Ld(o,a.context,!1),Pu(o,a.containerInfo)}function Lp(o,a,f,g,x){return ws(),Cu(x),a.flags|=256,En(o,a,f,g),a.child}var El={dehydrated:null,treeContext:null,retryLane:0};function wl(o){return{baseLanes:o,cachePool:null}}function Ip(o,a,f){var g=a.pendingProps,x=zt.current,T=!1,D=(a.flags&128)!==0,G;if((G=D)||(G=o!==null&&o.memoizedState===null?!1:(x&2)!==0),G?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(x|=1),st(zt,x&1),o===null)return Ru(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?wo(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(x=g.children,o=g.fallback,T?(g=a.mode,T=a.child,x={mode:"hidden",children:x},!(g&1)&&T!==null?(T.childLanes=0,T.pendingProps=x):T=Wl(x,g,0,null),o=Hr(o,g,f,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=wl(f),a.memoizedState=El,o):Wu(a,x));if(x=o.memoizedState,x!==null){if(G=x.dehydrated,G!==null){if(D)return a.flags&256?(a.flags&=-257,Tl(o,a,f,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=g.fallback,x=a.mode,g=Wl({mode:"visible",children:g.children},x,0,null),T=Hr(T,x,f,null),T.flags|=2,g.return=a,T.return=a,g.sibling=T,a.child=g,a.mode&1&&Ts(a,o.child,null,f),a.child.memoizedState=wl(f),a.memoizedState=El,T);if(!(a.mode&1))a=Tl(o,a,f,null);else if(wo(G))a=Tl(o,a,f,Error(l(419)));else if(g=(f&o.childLanes)!==0,kn||g){if(g=jt,g!==null){switch(f&-f){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=T&(g.suspendedLanes|f)?0:T,g!==0&&g!==x.retryLane&&(x.retryLane=g,$n(o,g,-1))}uh(),a=Tl(o,a,f,Error(l(421)))}else ja(G)?(a.flags|=128,a.child=o.child,a=fy.bind(null,o),uu(G,a),a=null):(f=x.treeContext,ne&&(Bn=X(G),zn=a,Ft=!0,hi=null,bo=!1,f!==null&&(Jn[jn++]=ki,Jn[jn++]=Hi,Jn[jn++]=Ur,ki=f.id,Hi=f.overflow,Ur=a)),a=Wu(a,a.pendingProps.children),a.flags|=4096);return a}return T?(g=Dp(o,a,g.children,g.fallback,f),T=a.child,x=o.child.memoizedState,T.memoizedState=x===null?wl(f):{baseLanes:x.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=El,g):(f=Up(o,a,g.children,f),a.memoizedState=null,f)}return T?(g=Dp(o,a,g.children,g.fallback,f),T=a.child,x=o.child.memoizedState,T.memoizedState=x===null?wl(f):{baseLanes:x.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=El,g):(f=Up(o,a,g.children,f),a.memoizedState=null,f)}function Wu(o,a){return a=Wl({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function Up(o,a,f,g){var x=o.child;return o=x.sibling,f=fr(x,{mode:"visible",children:f}),!(a.mode&1)&&(f.lanes=g),f.return=a,f.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=f}function Dp(o,a,f,g,x){var T=a.mode;o=o.child;var D=o.sibling,G={mode:"hidden",children:f};return!(T&1)&&a.child!==o?(f=a.child,f.childLanes=0,f.pendingProps=G,a.deletions=null):(f=fr(o,G),f.subtreeFlags=o.subtreeFlags&14680064),D!==null?g=fr(D,g):(g=Hr(g,T,x,null),g.flags|=2),g.return=a,f.return=a,f.sibling=g,a.child=f,g}function Tl(o,a,f,g){return g!==null&&Cu(g),Ts(a,o.child,null,f),o=Wu(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function Np(o,a,f){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),Mu(o.return,a,f)}function Xu(o,a,f,g,x){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:x}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=f,T.tailMode=x)}function Fp(o,a,f){var g=a.pendingProps,x=g.revealOrder,T=g.tail;if(En(o,a,g.children,f),g=zt.current,g&2)g=g&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&Np(o,f,a);else if(o.tag===19)Np(o,f,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(st(zt,g),!(a.mode&1))a.memoizedState=null;else switch(x){case"forwards":for(f=a.child,x=null;f!==null;)o=f.alternate,o!==null&&dl(o)===null&&(x=f),f=f.sibling;f=x,f===null?(x=a.child,a.child=null):(x=f.sibling,f.sibling=null),Xu(a,!1,x,f,T);break;case"backwards":for(f=null,x=a.child,a.child=null;x!==null;){if(o=x.alternate,o!==null&&dl(o)===null){a.child=x;break}o=x.sibling,x.sibling=f,f=x,x=o}Xu(a,!0,f,null,T);break;case"together":Xu(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function Vi(o,a,f){if(o!==null&&(a.dependencies=o.dependencies),Ps|=a.lanes,!(f&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,f=fr(o,o.pendingProps),a.child=f,f.return=a;o.sibling!==null;)o=o.sibling,f=f.sibling=fr(o,o.pendingProps),f.return=a;f.sibling=null}return a.child}function ey(o,a,f){switch(a.tag){case 3:Pp(a),ws();break;case 5:Qd(a);break;case 1:un(a.type)&&Qa(a);break;case 4:Pu(a,a.stateNode.containerInfo);break;case 10:Od(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(st(zt,zt.current&1),a.flags|=128,null):f&a.child.childLanes?Ip(o,a,f):(st(zt,zt.current&1),o=Vi(o,a,f),o!==null?o.sibling:null);st(zt,zt.current&1);break;case 19:if(g=(f&a.childLanes)!==0,o.flags&128){if(g)return Fp(o,a,f);a.flags|=128}var x=a.memoizedState;if(x!==null&&(x.rendering=null,x.tail=null,x.lastEffect=null),st(zt,zt.current),g)break;return null;case 22:case 23:return a.lanes=0,bp(o,a,f)}return Vi(o,a,f)}function ty(o,a){switch(Au(a),a.tag){case 1:return un(a.type)&&Ka(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return bs(),Rt(Pt),Rt(Jt),Uu(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return Lu(a),null;case 13:if(Rt(zt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));ws()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return Rt(zt),null;case 4:return bs(),null;case 10:return xu(a.type._context),null;case 22:case 23:return ch(),null;case 24:return null;default:return null}}var Al=!1,Fr=!1,ny=typeof WeakSet=="function"?WeakSet:Set,be=null;function bl(o,a){var f=o.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){In(o,a,g)}else f.current=null}function qu(o,a,f){try{f()}catch(g){In(o,a,g)}}var Op=!1;function iy(o,a){for(J(o.containerInfo),be=a;be!==null;)if(o=be,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,be=a;else for(;be!==null;){o=be;try{var f=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,x=f.memoizedState,T=o.stateNode,D=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:ui(o.type,g),x);T.__reactInternalSnapshotBeforeUpdate=D}break;case 3:Ce&&Pe(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(G){In(o,o.return,G)}if(a=o.sibling,a!==null){a.return=o.return,be=a;break}be=o.return}return f=Op,Op=!1,f}function Or(o,a,f){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var x=g=g.next;do{if((x.tag&o)===o){var T=x.destroy;x.destroy=void 0,T!==void 0&&qu(a,f,T)}x=x.next}while(x!==g)}}function Bo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var f=a=a.next;do{if((f.tag&o)===o){var g=f.create;f.destroy=g()}f=f.next}while(f!==a)}}function Yu(o){var a=o.ref;if(a!==null){var f=o.stateNode;switch(o.tag){case 5:o=ue(f);break;default:o=f}typeof a=="function"?a(o):a.current=o}}function zp(o,a,f){if(Ei&&typeof Ei.onCommitFiberUnmount=="function")try{Ei.onCommitFiberUnmount(nl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var x=g,T=x.destroy;x=x.tag,T!==void 0&&(x&2||x&4)&&qu(a,f,T),g=g.next}while(g!==o)}break;case 1:if(bl(a,f),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(D){In(a,f,D)}break;case 5:bl(a,f);break;case 4:Ce?Wp(o,a,f):fe&&fe&&(a=a.stateNode.containerInfo,f=Tt(a),si(a,f))}}function Bp(o,a,f){for(var g=a;;)if(zp(o,g,f),g.child===null||Ce&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function kp(o){var a=o.alternate;a!==null&&(o.alternate=null,kp(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&qe(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Hp(o){return o.tag===5||o.tag===3||o.tag===4}function Gp(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Hp(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Vp(o){if(Ce){e:{for(var a=o.return;a!==null;){if(Hp(a))break e;a=a.return}throw Error(l(160))}var f=a;switch(f.tag){case 5:a=f.stateNode,f.flags&32&&(wt(a),f.flags&=-33),f=Gp(o),Ju(o,f,a);break;case 3:case 4:a=f.stateNode.containerInfo,f=Gp(o),Zu(o,f,a);break;default:throw Error(l(161))}}}function Zu(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?De(f,o,a):Ie(f,o);else if(g!==4&&(o=o.child,o!==null))for(Zu(o,a,f),o=o.sibling;o!==null;)Zu(o,a,f),o=o.sibling}function Ju(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Ze(f,o,a):Ke(f,o);else if(g!==4&&(o=o.child,o!==null))for(Ju(o,a,f),o=o.sibling;o!==null;)Ju(o,a,f),o=o.sibling}function Wp(o,a,f){for(var g=a,x=!1,T,D;;){if(!x){x=g.return;e:for(;;){if(x===null)throw Error(l(160));switch(T=x.stateNode,x.tag){case 5:D=!1;break e;case 3:T=T.containerInfo,D=!0;break e;case 4:T=T.containerInfo,D=!0;break e}x=x.return}x=!0}if(g.tag===5||g.tag===6)Bp(o,g,f),D?_t(T,g.stateNode):ke(T,g.stateNode);else if(g.tag===18)D?pt(T,g.stateNode):ht(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,D=!0,g.child.return=g,g=g.child;continue}}else if(zp(o,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(x=!1)}g.sibling.return=g.return,g=g.sibling}}function ju(o,a){if(Ce){switch(a.tag){case 0:case 11:case 14:case 15:Or(3,a,a.return),Bo(3,a),Or(5,a,a.return);return;case 1:return;case 5:var f=a.stateNode;if(f!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var x=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&Ve(f,T,x,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));f=a.memoizedProps,oe(a.stateNode,o!==null?o.memoizedProps:f,f);return;case 3:ne&&o!==null&&o.memoizedState.isDehydrated&&rt(a.stateNode.containerInfo);return;case 12:return;case 13:Rl(a);return;case 19:Rl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Or(3,a,a.return),Bo(3,a),Or(5,a,a.return);return;case 12:return;case 13:Rl(a);return;case 19:Rl(a);return;case 3:ne&&o!==null&&o.memoizedState.isDehydrated&&rt(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(fe){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,si(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Rl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var f=o.stateNode;f===null&&(f=o.stateNode=new ny),a.forEach(function(g){var x=dy.bind(null,o,g);f.has(g)||(f.add(g),g.then(x,x))})}}function ry(o,a){for(be=a;be!==null;){a=be;var f=a.deletions;if(f!==null)for(var g=0;g<f.length;g++){var x=f[g];try{var T=o;Ce?Wp(T,x,a):Bp(T,x,a);var D=x.alternate;D!==null&&(D.return=null),x.return=null}catch(Be){In(x,a,Be)}}if(f=a.child,a.subtreeFlags&12854&&f!==null)f.return=a,be=f;else for(;be!==null;){a=be;try{var G=a.flags;if(G&32&&Ce&&wt(a.stateNode),G&512){var ie=a.alternate;if(ie!==null){var Me=ie.ref;Me!==null&&(typeof Me=="function"?Me(null):Me.current=null)}}if(G&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Ne=a.alternate;(Ne===null||Ne.memoizedState===null)&&(ih=rn())}break;case 22:var tt=a.memoizedState!==null,Xe=a.alternate,Lt=Xe!==null&&Xe.memoizedState!==null;if(f=a,Ce){e:if(g=f,x=tt,T=null,Ce)for(var He=g;;){if(He.tag===5){if(T===null){T=He;var _n=He.stateNode;x?Ot(_n):re(He.stateNode,He.memoizedProps)}}else if(He.tag===6){if(T===null){var ti=He.stateNode;x?H(ti):_e(ti,He.memoizedProps)}}else if((He.tag!==22&&He.tag!==23||He.memoizedState===null||He===g)&&He.child!==null){He.child.return=He,He=He.child;continue}if(He===g)break;for(;He.sibling===null;){if(He.return===null||He.return===g)break e;T===He&&(T=null),He=He.return}T===He&&(T=null),He.sibling.return=He.return,He=He.sibling}}if(tt&&!Lt&&f.mode&1){be=f;for(var j=f.child;j!==null;){for(f=be=j;be!==null;){g=be;var W=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Or(4,g,g.return);break;case 1:bl(g,g.return);var te=g.stateNode;if(typeof te.componentWillUnmount=="function"){var Re=g.return;try{te.props=g.memoizedProps,te.state=g.memoizedState,te.componentWillUnmount()}catch(Be){In(g,Re,Be)}}break;case 5:bl(g,g.return);break;case 22:if(g.memoizedState!==null){Yp(f);continue}}W!==null?(W.return=g,be=W):Yp(f)}j=j.sibling}}}switch(G&4102){case 2:Vp(a),a.flags&=-3;break;case 6:Vp(a),a.flags&=-3,ju(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,ju(a.alternate,a);break;case 4:ju(a.alternate,a)}}catch(Be){In(a,a.return,Be)}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}}function sy(o,a,f){be=o,Xp(o)}function Xp(o,a,f){for(var g=(o.mode&1)!==0;be!==null;){var x=be,T=x.child;if(x.tag===22&&g){var D=x.memoizedState!==null||Al;if(!D){var G=x.alternate,ie=G!==null&&G.memoizedState!==null||Fr;G=Al;var Me=Fr;if(Al=D,(Fr=ie)&&!Me)for(be=x;be!==null;)D=be,ie=D.child,D.tag===22&&D.memoizedState!==null?Zp(x):ie!==null?(ie.return=D,be=ie):Zp(x);for(;T!==null;)be=T,Xp(T),T=T.sibling;be=x,Al=G,Fr=Me}qp(o)}else x.subtreeFlags&8772&&T!==null?(T.return=x,be=T):qp(o)}}function qp(o){for(;be!==null;){var a=be;if(a.flags&8772){var f=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:Fr||Bo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!Fr)if(f===null)g.componentDidMount();else{var x=a.elementType===a.type?f.memoizedProps:ui(a.type,f.memoizedProps);g.componentDidUpdate(x,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&kd(a,T,g);break;case 3:var D=a.updateQueue;if(D!==null){if(f=null,a.child!==null)switch(a.child.tag){case 5:f=ue(a.child.stateNode);break;case 1:f=a.child.stateNode}kd(a,D,f)}break;case 5:var G=a.stateNode;f===null&&a.flags&4&&Oe(G,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(ne&&a.memoizedState===null){var ie=a.alternate;if(ie!==null){var Me=ie.memoizedState;if(Me!==null){var Ne=Me.dehydrated;Ne!==null&&ut(Ne)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Fr||a.flags&512&&Yu(a)}catch(tt){In(a,a.return,tt)}}if(a===o){be=null;break}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}function Yp(o){for(;be!==null;){var a=be;if(a===o){be=null;break}var f=a.sibling;if(f!==null){f.return=a.return,be=f;break}be=a.return}}function Zp(o){for(;be!==null;){var a=be;try{switch(a.tag){case 0:case 11:case 15:var f=a.return;try{Bo(4,a)}catch(ie){In(a,f,ie)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var x=a.return;try{g.componentDidMount()}catch(ie){In(a,x,ie)}}var T=a.return;try{Yu(a)}catch(ie){In(a,T,ie)}break;case 5:var D=a.return;try{Yu(a)}catch(ie){In(a,D,ie)}}}catch(ie){In(a,a.return,ie)}if(a===o){be=null;break}var G=a.sibling;if(G!==null){G.return=a.return,be=G;break}be=a.return}}var Cl=0,Pl=1,Ll=2,Il=3,Ul=4;if(typeof Symbol=="function"&&Symbol.for){var ko=Symbol.for;Cl=ko("selector.component"),Pl=ko("selector.has_pseudo_class"),Ll=ko("selector.role"),Il=ko("selector.test_id"),Ul=ko("selector.text")}function Ku(o){var a=me(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=vt(o),o===null)throw Error(l(362));return o.stateNode.current}function Qu(o,a){switch(a.$$typeof){case Cl:if(o.type===a.value)return!0;break;case Pl:e:{a=a.value,o=[o,0];for(var f=0;f<o.length;){var g=o[f++],x=o[f++],T=a[x];if(g.tag!==5||!ee(g)){for(;T!=null&&Qu(g,T);)x++,T=a[x];if(x===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,x),g=g.sibling}}a=!1}return a;case Ll:if(o.tag===5&&ge(o.stateNode,a.value))return!0;break;case Ul:if((o.tag===5||o.tag===6)&&(o=P(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Il:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function $u(o){switch(o.$$typeof){case Cl:return"<"+(N(o.value)||"Unknown")+">";case Pl:return":has("+($u(o)||"")+")";case Ll:return'[role="'+o.value+'"]';case Ul:return'"'+o.value+'"';case Il:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function Jp(o,a){var f=[];o=[o,0];for(var g=0;g<o.length;){var x=o[g++],T=o[g++],D=a[T];if(x.tag!==5||!ee(x)){for(;D!=null&&Qu(x,D);)T++,D=a[T];if(T===a.length)f.push(x);else for(x=x.child;x!==null;)o.push(x,T),x=x.sibling}}return f}function eh(o,a){if(!et)throw Error(l(363));o=Ku(o),o=Jp(o,a),a=[],o=Array.from(o);for(var f=0;f<o.length;){var g=o[f++];if(g.tag===5)ee(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var oy=Math.ceil,Dl=c.ReactCurrentDispatcher,th=c.ReactCurrentOwner,Vt=c.ReactCurrentBatchConfig,ft=0,jt=null,Kt=null,hn=0,Hn=0,Cs=Cn(0),$t=0,Ho=null,Ps=0,Nl=0,nh=0,Go=null,Pn=null,ih=0,rh=1/0;function Ls(){rh=rn()+500}var Fl=!1,sh=null,lr=null,Ol=!1,cr=null,zl=0,Vo=0,oh=null,Bl=-1,kl=0;function wn(){return ft&6?rn():Bl!==-1?Bl:Bl=rn()}function ur(o){return o.mode&1?ft&2&&hn!==0?hn&-hn:Gv.transition!==null?(kl===0&&(o=$a,$a<<=1,!($a&4194240)&&($a=64),kl=o),kl):(o=xt,o!==0?o:Te()):1}function $n(o,a,f){if(50<Vo)throw Vo=0,oh=null,Error(l(185));var g=Hl(o,a);return g===null?null:(Ao(g,a,f),(!(ft&2)||g!==jt)&&(g===jt&&(!(ft&2)&&(Nl|=a),$t===4&&hr(g,hn)),Ln(g,f),a===1&&ft===0&&!(o.mode&1)&&(Ls(),il&&Ti())),g)}function Hl(o,a){o.lanes|=a;var f=o.alternate;for(f!==null&&(f.lanes|=a),f=o,o=o.return;o!==null;)o.childLanes|=a,f=o.alternate,f!==null&&(f.childLanes|=a),f=o,o=o.return;return f.tag===3?f.stateNode:null}function Ln(o,a){var f=o.callbackNode;Uv(o,a);var g=tl(o,o===jt?hn:0);if(g===0)f!==null&&Nd(f),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(f!=null&&Nd(f),a===1)o.tag===0?Hv(Kp.bind(null,o)):Fd(Kp.bind(null,o)),Ye?Ge(function(){ft===0&&Ti()}):pu(mu,Ti),f=null;else{switch(Dd(g)){case 1:f=mu;break;case 4:f=Ov;break;case 16:f=gu;break;case 536870912:f=zv;break;default:f=gu}f=om(f,jp.bind(null,o))}o.callbackPriority=a,o.callbackNode=f}}function jp(o,a){if(Bl=-1,kl=0,ft&6)throw Error(l(327));var f=o.callbackNode;if(kr()&&o.callbackNode!==f)return null;var g=tl(o,o===jt?hn:0);if(g===0)return null;if(g&30||g&o.expiredLanes||a)a=Gl(o,g);else{a=g;var x=ft;ft|=2;var T=em();(jt!==o||hn!==a)&&(Ls(),zr(o,a));do try{cy();break}catch(G){$p(o,G)}while(1);yu(),Dl.current=T,ft=x,Kt!==null?a=0:(jt=null,hn=0,a=$t)}if(a!==0){if(a===2&&(x=hu(o),x!==0&&(g=x,a=ah(o,x))),a===1)throw f=Ho,zr(o,0),hr(o,g),Ln(o,rn()),f;if(a===6)hr(o,g);else{if(x=o.current.alternate,!(g&30)&&!ay(x)&&(a=Gl(o,g),a===2&&(T=hu(o),T!==0&&(g=T,a=ah(o,T))),a===1))throw f=Ho,zr(o,0),hr(o,g),Ln(o,rn()),f;switch(o.finishedWork=x,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Br(o,Pn);break;case 3:if(hr(o,g),(g&130023424)===g&&(a=ih+500-rn(),10<a)){if(tl(o,0)!==0)break;if(x=o.suspendedLanes,(x&g)!==g){wn(),o.pingedLanes|=o.suspendedLanes&x;break}o.timeoutHandle=B(Br.bind(null,o,Pn),a);break}Br(o,Pn);break;case 4:if(hr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,x=-1;0<g;){var D=31-ci(g);T=1<<D,D=a[D],D>x&&(x=D),g&=~T}if(g=x,g=rn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*oy(g/1960))-g,10<g){o.timeoutHandle=B(Br.bind(null,o,Pn),g);break}Br(o,Pn);break;case 5:Br(o,Pn);break;default:throw Error(l(329))}}}return Ln(o,rn()),o.callbackNode===f?jp.bind(null,o):null}function ah(o,a){var f=Go;return o.current.memoizedState.isDehydrated&&(zr(o,a).flags|=256),o=Gl(o,a),o!==2&&(a=Pn,Pn=f,a!==null&&lh(a)),o}function lh(o){Pn===null?Pn=o:Pn.push.apply(Pn,o)}function ay(o){for(var a=o;;){if(a.flags&16384){var f=a.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var x=f[g],T=x.getSnapshot;x=x.value;try{if(!wi(T(),x))return!1}catch{return!1}}}if(f=a.child,a.subtreeFlags&16384&&f!==null)f.return=a,a=f;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function hr(o,a){for(a&=~nh,a&=~Nl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var f=31-ci(a),g=1<<f;o[f]=-1,a&=~g}}function Kp(o){if(ft&6)throw Error(l(327));kr();var a=tl(o,0);if(!(a&1))return Ln(o,rn()),null;var f=Gl(o,a);if(o.tag!==0&&f===2){var g=hu(o);g!==0&&(a=g,f=ah(o,g))}if(f===1)throw f=Ho,zr(o,0),hr(o,a),Ln(o,rn()),f;if(f===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Br(o,Pn),Ln(o,rn()),null}function Qp(o){cr!==null&&cr.tag===0&&!(ft&6)&&kr();var a=ft;ft|=1;var f=Vt.transition,g=xt;try{if(Vt.transition=null,xt=1,o)return o()}finally{xt=g,Vt.transition=f,ft=a,!(ft&6)&&Ti()}}function ch(){Hn=Cs.current,Rt(Cs)}function zr(o,a){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;if(f!==je&&(o.timeoutHandle=je,Qe(f)),Kt!==null)for(f=Kt.return;f!==null;){var g=f;switch(Au(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&Ka();break;case 3:bs(),Rt(Pt),Rt(Jt),Uu();break;case 5:Lu(g);break;case 4:bs();break;case 13:Rt(zt);break;case 19:Rt(zt);break;case 10:xu(g.type._context);break;case 22:case 23:ch()}f=f.return}if(jt=o,Kt=o=fr(o.current,null),hn=Hn=a,$t=0,Ho=null,nh=Nl=Ps=0,Pn=Go=null,Ai!==null){for(a=0;a<Ai.length;a++)if(f=Ai[a],g=f.interleaved,g!==null){f.interleaved=null;var x=g.next,T=f.pending;if(T!==null){var D=T.next;T.next=x,g.next=D}f.pending=g}Ai=null}return o}function $p(o,a){do{var f=Kt;try{if(yu(),pl.current=xl,ml){for(var g=kt.memoizedState;g!==null;){var x=g.queue;x!==null&&(x.pending=null),g=g.next}ml=!1}if(Rs=0,sn=pn=kt=null,Io=!1,Uo=0,th.current=null,f===null||f.return===null){$t=1,Ho=a,Kt=null;break}e:{var T=o,D=f.return,G=f,ie=a;if(a=hn,G.flags|=32768,ie!==null&&typeof ie=="object"&&typeof ie.then=="function"){var Me=ie,Ne=G,tt=Ne.tag;if(!(Ne.mode&1)&&(tt===0||tt===11||tt===15)){var Xe=Ne.alternate;Xe?(Ne.updateQueue=Xe.updateQueue,Ne.memoizedState=Xe.memoizedState,Ne.lanes=Xe.lanes):(Ne.updateQueue=null,Ne.memoizedState=null)}var Lt=xp(D);if(Lt!==null){Lt.flags&=-257,Mp(Lt,D,G,T,a),Lt.mode&1&&yp(T,Me,a),a=Lt,ie=Me;var He=a.updateQueue;if(He===null){var _n=new Set;_n.add(ie),a.updateQueue=_n}else He.add(ie);break e}else{if(!(a&1)){yp(T,Me,a),uh();break e}ie=Error(l(426))}}else if(Ft&&G.mode&1){var ti=xp(D);if(ti!==null){!(ti.flags&65536)&&(ti.flags|=256),Mp(ti,D,G,T,a),Cu(ie);break e}}T=ie,$t!==4&&($t=2),Go===null?Go=[T]:Go.push(T),ie=ku(ie,G),G=D;do{switch(G.tag){case 3:G.flags|=65536,a&=-a,G.lanes|=a;var j=_p(G,ie,a);Bd(G,j);break e;case 1:T=ie;var W=G.type,te=G.stateNode;if(!(G.flags&128)&&(typeof W.getDerivedStateFromError=="function"||te!==null&&typeof te.componentDidCatch=="function"&&(lr===null||!lr.has(te)))){G.flags|=65536,a&=-a,G.lanes|=a;var Re=vp(G,T,a);Bd(G,Re);break e}}G=G.return}while(G!==null)}nm(f)}catch(Be){a=Be,Kt===f&&f!==null&&(Kt=f=f.return);continue}break}while(1)}function em(){var o=Dl.current;return Dl.current=xl,o===null?xl:o}function uh(){($t===0||$t===3||$t===2)&&($t=4),jt===null||!(Ps&268435455)&&!(Nl&268435455)||hr(jt,hn)}function Gl(o,a){var f=ft;ft|=2;var g=em();jt===o&&hn===a||zr(o,a);do try{ly();break}catch(x){$p(o,x)}while(1);if(yu(),ft=f,Dl.current=g,Kt!==null)throw Error(l(261));return jt=null,hn=0,$t}function ly(){for(;Kt!==null;)tm(Kt)}function cy(){for(;Kt!==null&&!Nv();)tm(Kt)}function tm(o){var a=sm(o.alternate,o,Hn);o.memoizedProps=o.pendingProps,a===null?nm(o):Kt=a,th.current=null}function nm(o){var a=o;do{var f=a.alternate;if(o=a.return,a.flags&32768){if(f=ty(f,a),f!==null){f.flags&=32767,Kt=f;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{$t=6,Kt=null;return}}else if(f=Qv(f,a,Hn),f!==null){Kt=f;return}if(a=a.sibling,a!==null){Kt=a;return}Kt=a=o}while(a!==null);$t===0&&($t=5)}function Br(o,a){var f=xt,g=Vt.transition;try{Vt.transition=null,xt=1,uy(o,a,f)}finally{Vt.transition=g,xt=f}return null}function uy(o,a,f){do kr();while(cr!==null);if(ft&6)throw Error(l(327));var g=o.finishedWork,x=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(Dv(o,T),o===jt&&(Kt=jt=null,hn=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||Ol||(Ol=!0,om(gu,function(){return kr(),null})),T=(g.flags&15990)!==0,g.subtreeFlags&15990||T){T=Vt.transition,Vt.transition=null;var D=xt;xt=1;var G=ft;ft|=4,th.current=null,iy(o,g),ry(o,g),q(o.containerInfo),o.current=g,sy(g),Fv(),ft=G,xt=D,Vt.transition=T}else o.current=g;if(Ol&&(Ol=!1,cr=o,zl=x),T=o.pendingLanes,T===0&&(lr=null),Bv(g.stateNode),Ln(o,rn()),a!==null)for(f=o.onRecoverableError,g=0;g<a.length;g++)f(a[g]);if(Fl)throw Fl=!1,o=sh,sh=null,o;return zl&1&&o.tag!==0&&kr(),T=o.pendingLanes,T&1?o===oh?Vo++:(Vo=0,oh=o):Vo=0,Ti(),null}function kr(){if(cr!==null){var o=Dd(zl),a=Vt.transition,f=xt;try{if(Vt.transition=null,xt=16>o?16:o,cr===null)var g=!1;else{if(o=cr,cr=null,zl=0,ft&6)throw Error(l(331));var x=ft;for(ft|=4,be=o.current;be!==null;){var T=be,D=T.child;if(be.flags&16){var G=T.deletions;if(G!==null){for(var ie=0;ie<G.length;ie++){var Me=G[ie];for(be=Me;be!==null;){var Ne=be;switch(Ne.tag){case 0:case 11:case 15:Or(8,Ne,T)}var tt=Ne.child;if(tt!==null)tt.return=Ne,be=tt;else for(;be!==null;){Ne=be;var Xe=Ne.sibling,Lt=Ne.return;if(kp(Ne),Ne===Me){be=null;break}if(Xe!==null){Xe.return=Lt,be=Xe;break}be=Lt}}}var He=T.alternate;if(He!==null){var _n=He.child;if(_n!==null){He.child=null;do{var ti=_n.sibling;_n.sibling=null,_n=ti}while(_n!==null)}}be=T}}if(T.subtreeFlags&2064&&D!==null)D.return=T,be=D;else e:for(;be!==null;){if(T=be,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Or(9,T,T.return)}var j=T.sibling;if(j!==null){j.return=T.return,be=j;break e}be=T.return}}var W=o.current;for(be=W;be!==null;){D=be;var te=D.child;if(D.subtreeFlags&2064&&te!==null)te.return=D,be=te;else e:for(D=W;be!==null;){if(G=be,G.flags&2048)try{switch(G.tag){case 0:case 11:case 15:Bo(9,G)}}catch(Be){In(G,G.return,Be)}if(G===D){be=null;break e}var Re=G.sibling;if(Re!==null){Re.return=G.return,be=Re;break e}be=G.return}}if(ft=x,Ti(),Ei&&typeof Ei.onPostCommitFiberRoot=="function")try{Ei.onPostCommitFiberRoot(nl,o)}catch{}g=!0}return g}finally{xt=f,Vt.transition=a}}return!1}function im(o,a,f){a=ku(f,a),a=_p(o,a,1),ar(o,a),a=wn(),o=Hl(o,1),o!==null&&(Ao(o,1,a),Ln(o,a))}function In(o,a,f){if(o.tag===3)im(o,o,f);else for(;a!==null;){if(a.tag===3){im(a,o,f);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(lr===null||!lr.has(g))){o=ku(f,o),o=vp(a,o,1),ar(a,o),o=wn(),a=Hl(a,1),a!==null&&(Ao(a,1,o),Ln(a,o));break}}a=a.return}}function hy(o,a,f){var g=o.pingCache;g!==null&&g.delete(a),a=wn(),o.pingedLanes|=o.suspendedLanes&f,jt===o&&(hn&f)===f&&($t===4||$t===3&&(hn&130023424)===hn&&500>rn()-ih?zr(o,0):nh|=f),Ln(o,a)}function rm(o,a){a===0&&(o.mode&1?(a=el,el<<=1,!(el&130023424)&&(el=4194304)):a=1);var f=wn();o=Hl(o,a),o!==null&&(Ao(o,a,f),Ln(o,f))}function fy(o){var a=o.memoizedState,f=0;a!==null&&(f=a.retryLane),rm(o,f)}function dy(o,a){var f=0;switch(o.tag){case 13:var g=o.stateNode,x=o.memoizedState;x!==null&&(f=x.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),rm(o,f)}var sm;sm=function(o,a,f){if(o!==null)if(o.memoizedProps!==a.pendingProps||Pt.current)kn=!0;else{if(!(o.lanes&f)&&!(a.flags&128))return kn=!1,ey(o,a,f);kn=!!(o.flags&131072)}else kn=!1,Ft&&a.flags&1048576&&Xd(a,hl,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var x=sr(a,Jt.current);Ms(a,f),x=Nu(null,a,g,o,x,f);var T=Fu();return a.flags|=1,typeof x=="object"&&x!==null&&typeof x.render=="function"&&x.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,un(g)?(T=!0,Qa(a)):T=!1,a.memoizedState=x.state!==null&&x.state!==void 0?x.state:null,Su(a),x.updater=cl,a.stateNode=x,x._reactInternals=a,wu(a,g,o,f),a=Vu(null,a,g,!0,T,f)):(a.tag=0,Ft&&T&&Tu(a),En(null,a,x,f),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,x=g._init,g=x(g._payload),a.type=g,x=a.tag=my(g),o=ui(g,o),x){case 0:a=Gu(null,a,g,o,f);break e;case 1:a=Cp(null,a,g,o,f);break e;case 11:a=wp(null,a,g,o,f);break e;case 14:a=Tp(null,a,g,ui(g.type,o),f);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,x=a.pendingProps,x=a.elementType===g?x:ui(g,x),Gu(o,a,g,x,f);case 1:return g=a.type,x=a.pendingProps,x=a.elementType===g?x:ui(g,x),Cp(o,a,g,x,f);case 3:e:{if(Pp(a),o===null)throw Error(l(387));g=a.pendingProps,T=a.memoizedState,x=T.element,zd(o,a),ll(a,g,null,f);var D=a.memoizedState;if(g=D.element,ne&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:D.cache,transitions:D.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){x=Error(l(423)),a=Lp(o,a,g,f,x);break e}else if(g!==x){x=Error(l(424)),a=Lp(o,a,g,f,x);break e}else for(ne&&(Bn=se(a.stateNode.containerInfo),zn=a,Ft=!0,hi=null,bo=!1),f=Kd(a,null,g,f),a.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(ws(),g===x){a=Vi(o,a,f);break e}En(o,a,g,f)}a=a.child}return a;case 5:return Qd(a),o===null&&Ru(a),g=a.type,x=a.pendingProps,T=o!==null?o.memoizedProps:null,D=x.children,xe(g,x)?D=null:T!==null&&xe(g,T)&&(a.flags|=32),Rp(o,a),En(o,a,D,f),a.child;case 6:return o===null&&Ru(a),null;case 13:return Ip(o,a,f);case 4:return Pu(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Ts(a,null,g,f):En(o,a,g,f),a.child;case 11:return g=a.type,x=a.pendingProps,x=a.elementType===g?x:ui(g,x),wp(o,a,g,x,f);case 7:return En(o,a,a.pendingProps,f),a.child;case 8:return En(o,a,a.pendingProps.children,f),a.child;case 12:return En(o,a,a.pendingProps.children,f),a.child;case 10:e:{if(g=a.type._context,x=a.pendingProps,T=a.memoizedProps,D=x.value,Od(a,g,D),T!==null)if(wi(T.value,D)){if(T.children===x.children&&!Pt.current){a=Vi(o,a,f);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var G=T.dependencies;if(G!==null){D=T.child;for(var ie=G.firstContext;ie!==null;){if(ie.context===g){if(T.tag===1){ie=Bi(-1,f&-f),ie.tag=2;var Me=T.updateQueue;if(Me!==null){Me=Me.shared;var Ne=Me.pending;Ne===null?ie.next=ie:(ie.next=Ne.next,Ne.next=ie),Me.pending=ie}}T.lanes|=f,ie=T.alternate,ie!==null&&(ie.lanes|=f),Mu(T.return,f,a),G.lanes|=f;break}ie=ie.next}}else if(T.tag===10)D=T.type===a.type?null:T.child;else if(T.tag===18){if(D=T.return,D===null)throw Error(l(341));D.lanes|=f,G=D.alternate,G!==null&&(G.lanes|=f),Mu(D,f,a),D=T.sibling}else D=T.child;if(D!==null)D.return=T;else for(D=T;D!==null;){if(D===a){D=null;break}if(T=D.sibling,T!==null){T.return=D.return,D=T;break}D=D.return}T=D}En(o,a,x.children,f),a=a.child}return a;case 9:return x=a.type,g=a.pendingProps.children,Ms(a,f),x=Zn(x),g=g(x),a.flags|=1,En(o,a,g,f),a.child;case 14:return g=a.type,x=ui(g,a.pendingProps),x=ui(g.type,x),Tp(o,a,g,x,f);case 15:return Ap(o,a,a.type,a.pendingProps,f);case 17:return g=a.type,x=a.pendingProps,x=a.elementType===g?x:ui(g,x),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,un(g)?(o=!0,Qa(a)):o=!1,Ms(a,f),Vd(a,g,x),wu(a,g,x,f),Vu(null,a,g,!0,o,f);case 19:return Fp(o,a,f);case 22:return bp(o,a,f)}throw Error(l(156,a.tag))};function om(o,a){return pu(o,a)}function py(o,a,f,g){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ei(o,a,f,g){return new py(o,a,f,g)}function hh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function my(o){if(typeof o=="function")return hh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===S)return 11;if(o===w)return 14}return 2}function fr(o,a){var f=o.alternate;return f===null?(f=ei(o.tag,a,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=a,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&14680064,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,a=o.dependencies,f.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f}function Vl(o,a,f,g,x,T){var D=2;if(g=o,typeof o=="function")hh(o)&&(D=1);else if(typeof o=="string")D=5;else e:switch(o){case d:return Hr(f.children,x,T,a);case p:D=8,x|=8;break;case m:return o=ei(12,f,a,x|2),o.elementType=m,o.lanes=T,o;case M:return o=ei(13,f,a,x),o.elementType=M,o.lanes=T,o;case v:return o=ei(19,f,a,x),o.elementType=v,o.lanes=T,o;case b:return Wl(f,x,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case _:D=10;break e;case y:D=9;break e;case S:D=11;break e;case w:D=14;break e;case E:D=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=ei(D,f,a,x),a.elementType=o,a.type=g,a.lanes=T,a}function Hr(o,a,f,g){return o=ei(7,o,g,a),o.lanes=f,o}function Wl(o,a,f,g){return o=ei(22,o,g,a),o.elementType=b,o.lanes=f,o.stateNode={},o}function fh(o,a,f){return o=ei(6,o,null,a),o.lanes=f,o}function dh(o,a,f){return a=ei(4,o.children!==null?o.children:[],o.key,a),a.lanes=f,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function gy(o,a,f,g,x){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=je,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=fu(0),this.expirationTimes=fu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=fu(0),this.identifierPrefix=g,this.onRecoverableError=x,ne&&(this.mutableSourceEagerHydrationData=null)}function am(o,a,f,g,x,T,D,G,ie){return o=new gy(o,a,f,G,ie),a===1?(a=1,T===!0&&(a|=8)):a=0,T=ei(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},Su(T),o}function lm(o){if(!o)return dn;o=o._reactInternals;e:{if(A(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(un(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var f=o.type;if(un(f))return Id(o,f,a)}return a}function cm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=K(a),o===null?null:o.stateNode}function um(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<a?f:a}}function ph(o,a){um(o,a),(o=o.alternate)&&um(o,a)}function _y(o){return o=K(o),o===null?null:o.stateNode}function vy(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=wn();$n(o,134217728,a),ph(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=wn(),f=ur(o);$n(o,f,a),ph(o,f)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var f=To(a.pendingLanes);f!==0&&(du(a,f|1),Ln(a,rn()),!(ft&6)&&(Ls(),Ti()))}break;case 13:var g=wn();Qp(function(){return $n(o,1,g)}),ph(o,1)}},t.batchedUpdates=function(o,a){var f=ft;ft|=1;try{return o(a)}finally{ft=f,ft===0&&(Ls(),il&&Ti())}},t.createComponentSelector=function(o){return{$$typeof:Cl,value:o}},t.createContainer=function(o,a,f,g,x,T,D){return am(o,a,!1,null,f,g,x,T,D)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Pl,value:o}},t.createHydrationContainer=function(o,a,f,g,x,T,D,G,ie){return o=am(f,g,!0,o,x,T,D,G,ie),o.context=lm(null),f=o.current,g=wn(),x=ur(f),T=Bi(g,x),T.callback=a??null,ar(f,T),o.current.lanes=x,Ao(o,x,g),Ln(o,g),o},t.createPortal=function(o,a,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:f}},t.createRoleSelector=function(o){return{$$typeof:Ll,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Il,value:o}},t.createTextSelector=function(o){return{$$typeof:Ul,value:o}},t.deferredUpdates=function(o){var a=xt,f=Vt.transition;try{return Vt.transition=null,xt=16,o()}finally{xt=a,Vt.transition=f}},t.discreteUpdates=function(o,a,f,g,x){var T=xt,D=Vt.transition;try{return Vt.transition=null,xt=1,o(a,f,g,x)}finally{xt=T,Vt.transition=D,ft===0&&Ls()}},t.findAllNodes=eh,t.findBoundingRects=function(o,a){if(!et)throw Error(l(363));a=eh(o,a),o=[];for(var f=0;f<a.length;f++)o.push(F(a[f]));for(a=o.length-1;0<a;a--){f=o[a];for(var g=f.x,x=g+f.width,T=f.y,D=T+f.height,G=a-1;0<=G;G--)if(a!==G){var ie=o[G],Me=ie.x,Ne=Me+ie.width,tt=ie.y,Xe=tt+ie.height;if(g>=Me&&T>=tt&&x<=Ne&&D<=Xe){o.splice(a,1);break}else if(g!==Me||f.width!==ie.width||Xe<T||tt>D){if(!(T!==tt||f.height!==ie.height||Ne<g||Me>x)){Me>g&&(ie.width+=Me-g,ie.x=g),Ne<x&&(ie.width=x-Me),o.splice(a,1);break}}else{tt>T&&(ie.height+=tt-T,ie.y=T),Xe<D&&(ie.height=D-tt),o.splice(a,1);break}}}return o},t.findHostInstance=cm,t.findHostInstanceWithNoPortals=function(o){return o=z(o),o=o!==null?Y(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return cm(o)},t.flushControlled=function(o){var a=ft;ft|=1;var f=Vt.transition,g=xt;try{Vt.transition=null,xt=1,o()}finally{xt=g,Vt.transition=f,ft=a,ft===0&&(Ls(),Ti())}},t.flushPassiveEffects=kr,t.flushSync=Qp,t.focusWithin=function(o,a){if(!et)throw Error(l(363));for(o=Ku(o),a=Jp(o,a),a=Array.from(a),o=0;o<a.length;){var f=a[o++];if(!ee(f)){if(f.tag===5&&ve(f.stateNode))return!0;for(f=f.child;f!==null;)a.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return xt},t.getFindAllNodesFailureDescription=function(o,a){if(!et)throw Error(l(363));var f=0,g=[];o=[Ku(o),0];for(var x=0;x<o.length;){var T=o[x++],D=o[x++],G=a[D];if((T.tag!==5||!ee(T))&&(Qu(T,G)&&(g.push($u(G)),D++,D>f&&(f=D)),D<a.length))for(T=T.child;T!==null;)o.push(T,D),T=T.sibling}if(f<a.length){for(o=[];f<a.length;f++)o.push($u(a[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ue(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:_y,findFiberByHostInstance:o.findFiberByHostInstance||vy,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{nl=a.inject(o),Ei=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,f,g){if(!et)throw Error(l(363));o=eh(o,a);var x=Ae(o,f,g).disconnect;return{disconnect:function(){x()}}},t.registerMutableSourceForHydration=function(o,a){var f=a._getVersion;f=f(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,f]:o.mutableSourceEagerHydrationData.push(a,f)},t.runWithPriority=function(o,a){var f=xt;try{return xt=o,a()}finally{xt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,f,g){var x=a.current,T=wn(),D=ur(x);return f=lm(f),a.context===null?a.context=f:a.pendingContext=f,a=Bi(T,D),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),ar(x,a),o=$n(x,D,T),o!==null&&al(o,x,D),D},t};cv.exports=zA;var BA=cv.exports;const kA=My(BA),Cd={},HA=r=>void Object.assign(Cd,r);function GA(r,e){function t(d,{args:p=[],attach:m,..._},y){let S=`${d[0].toUpperCase()}${d.slice(1)}`,M;if(d==="primitive"){if(_.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=_.object;M=no(v,{type:d,root:y,attach:m,primitive:!0})}else{const v=Cd[S];if(!v)throw new Error(`R3F: ${S} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");M=no(new v(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return M.__r3f.attach===void 0&&(M.isBufferGeometry?M.__r3f.attach="geometry":M.isMaterial&&(M.__r3f.attach="material")),S!=="inject"&&Zh(M,_),M}function n(d,p){let m=!1;if(p){var _,y;(_=p.__r3f)!=null&&_.attach?Yh(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||no(p,{}),p.__r3f.parent=d,Vf(p),io(p)}}function i(d,p,m){let _=!1;if(p){var y,S;if((y=p.__r3f)!=null&&y.attach)Yh(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"}),d.dispatchEvent({type:"childadded",child:p});const M=d.children.filter(w=>w!==p),v=M.indexOf(m);d.children=[...M.slice(0,v),p,...M.slice(v)],_=!0}_||(S=d.__r3f)==null||S.objects.push(p),p.__r3f||no(p,{}),p.__r3f.parent=d,Vf(p),io(p)}}function s(d,p,m=!1){d&&[...d].forEach(_=>l(p,_,m))}function l(d,p,m){if(p){var _,y,S;if(p.__r3f&&(p.__r3f.parent=null),(_=d.__r3f)!=null&&_.objects&&(d.__r3f.objects=d.__r3f.objects.filter(b=>b!==p)),(y=p.__r3f)!=null&&y.attach)Wg(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var M;d.remove(p),(M=p.__r3f)!=null&&M.root&&jA(Gc(p),p)}const w=(S=p.__r3f)==null?void 0:S.primitive,E=!w&&(m===void 0?p.dispose!==null:m);if(!w){var v;s((v=p.__r3f)==null?void 0:v.objects,p,E),s(p.children,p,E)}if(delete p.__r3f,E&&p.dispose&&p.type!=="Scene"){const b=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?Hf.unstable_scheduleCallback(Hf.unstable_IdlePriority,b):b()}io(d)}}function c(d,p,m,_){var y;const S=(y=d.__r3f)==null?void 0:y.parent;if(!S)return;const M=t(p,m,d.__r3f.root);if(d.children){for(const v of d.children)v.__r3f&&n(M,v);d.children=d.children.filter(v=>!v.__r3f)}d.__r3f.objects.forEach(v=>n(M,v)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||l(S,d),M.parent&&(M.__r3f.autoRemovedBeforeAppend=!0),n(S,M),M.raycast&&M.__r3f.eventCount&&Gc(M).getState().internal.interaction.push(M),[_,_.alternate].forEach(v=>{v!==null&&(v.stateNode=M,v.ref&&(typeof v.ref=="function"?v.ref(M):v.ref.current=M))})}const u=()=>{};return{reconciler:kA({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&l(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const _=d.getState().scene;_.__r3f&&i(_,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d==null?void 0:d.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,_){var y;if(((y=d==null?void 0:d.__r3f)!=null?y:{}).primitive&&_.object&&_.object!==d)return[!0];{const{args:M=[],children:v,...w}=_,{args:E=[],children:b,...R}=m;if(!Array.isArray(M))throw new Error("R3F: the args prop must be an array!");if(M.some((N,O)=>N!==E[O]))return[!0];const C=vv(d,w,R,!0);return C.changes.length?[!1,C]:null}},commitUpdate(d,[p,m],_,y,S,M){p?c(d,_,S,M):Zh(d,m)},commitMount(d,p,m,_){var y;const S=(y=d.__r3f)!=null?y:{};d.raycast&&S.handlers&&S.eventCount&&Gc(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>no(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:_}=(p=d.__r3f)!=null?p:{};m&&_&&Wg(_,d,m),d.isObject3D&&(d.visible=!1),io(d)},unhideInstance(d,p){var m;const{attach:_,parent:y}=(m=d.__r3f)!=null?m:{};_&&y&&Yh(y,d,_),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),io(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():lo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Dt.fun(performance.now)?performance.now:Dt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Dt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Dt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Zh}}var kg,Hg;const qh=r=>"colorSpace"in r||"outputColorSpace"in r,fv=()=>{var r;return(r=Cd.ColorManagement)!=null?r:null},dv=r=>r&&r.isOrthographicCamera,VA=r=>r&&r.hasOwnProperty("current"),Za=typeof window<"u"&&((kg=window.document)!=null&&kg.createElement||((Hg=window.navigator)==null?void 0:Hg.product)==="ReactNative")?Ee.useLayoutEffect:Ee.useEffect;function pv(r){const e=Ee.useRef(r);return Za(()=>void(e.current=r),[r]),e}function WA({set:r}){return Za(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class mv extends Ee.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}mv.getDerivedStateFromError=()=>({error:!0});const gv="__default",Gg=new Map,XA=r=>r&&!!r.memoized&&!!r.changes;function _v(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const ea=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Gc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Dt={obj:r=>r===Object(r)&&!Dt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Dt.str(r)||Dt.num(r)||Dt.boo(r))return r===e;const s=Dt.obj(r);if(s&&n==="reference")return r===e;const l=Dt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Dt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Dt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function qA(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function no(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function Gf(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const Vg=/-\d+$/;function Yh(r,e,t){if(Dt.str(t)){if(Vg.test(t)){const s=t.replace(Vg,""),{target:l,key:c}=Gf(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=Gf(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function Wg(r,e,t){var n,i;if(Dt.str(t)){const{target:s,key:l}=Gf(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function vv(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const d=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let S=0;S<y.length;S++)i.hasOwnProperty(y[S])||p.unshift([y[S],gv+"remove"])}p.forEach(([y,S])=>{var M;if((M=r.__r3f)!=null&&M.primitive&&y==="object"||Dt.equ(S,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,S,!0,[]]);let v=[];y.includes("-")&&(v=y.split("-")),m.push([y,S,!1,v]);for(const w in i){const E=i[w];w.startsWith(`${y}-`)&&m.push([w,E,!1,w.split("-")])}});const _={...i};return d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.args&&(_.args=d.memoizedProps.args),d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.attach&&(_.attach=d.memoizedProps.attach),{memoized:_,changes:m}}const YA=typeof process<"u"&&!1;function Zh(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=XA(e)?e:vv(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[_,y,S,M]=c[m];if(qh(r)){const b="srgb",R="srgb-linear";_==="encoding"?(_="colorSpace",y=y===3001?b:R):_==="outputEncoding"&&(_="outputColorSpace",y=y===3001?b:R)}let v=r,w=v[_];if(M.length&&(w=M.reduce((E,b)=>E[b],r),!(w&&w.set))){const[E,...b]=M.reverse();v=b.reverse().reduce((R,C)=>R[C],r),_=E}if(y===gv+"remove")if(v.constructor){let E=Gg.get(v.constructor);E||(E=new v.constructor,Gg.set(v.constructor,E)),y=E[_]}else y=0;if(S&&n)y?n.handlers[_]=y:delete n.handlers[_],n.eventCount=Object.keys(n.handlers).length;else if(w&&w.set&&(w.copy||w instanceof ls)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&(YA?w.constructor.name===y.constructor.name:w.constructor===y.constructor))w.copy(y);else if(y!==void 0){var h;const E=(h=w)==null?void 0:h.isColor;!E&&w.setScalar?w.setScalar(y):w instanceof ls&&y instanceof ls?w.mask=y.mask:w.set(y),!fv()&&s&&!s.linear&&E&&w.convertSRGBToLinear()}}else{var d;if(v[_]=y,(d=v[_])!=null&&d.isTexture&&v[_].format===Nn&&v[_].type===tr&&s){const E=v[_];qh(E)&&qh(s.gl)?E.colorSpace=s.gl.outputColorSpace:E.encoding=s.gl.outputEncoding}}io(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=Gc(r).getState().internal,_=m.interaction.indexOf(r);_>-1&&m.interaction.splice(_,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&Vf(r),r}function io(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Vf(r){r.onUpdate==null||r.onUpdate(r)}function ZA(r,e){r.manual||(dv(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Ic(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function JA(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return lo.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return lo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return lo.ContinuousEventPriority;default:return lo.DefaultEventPriority}}function yv(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function jA(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{yv(t.capturedMap,e,n,i)})}function KA(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],_=h?h(d.internal.interaction):d.internal.interaction;for(let v=0;v<_.length;v++){const w=ea(_[v]);w&&(w.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(v){const w=ea(v);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var E;w.events.compute==null||w.events.compute(u,w,(E=w.previousRoot)==null?void 0:E.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(v,!0):[]}let S=_.flatMap(y).sort((v,w)=>{const E=ea(v.object),b=ea(w.object);return!E||!b?v.distance-w.distance:b.events.priority-E.events.priority||v.distance-w.distance}).filter(v=>{const w=Ic(v);return p.has(w)?!1:(p.add(w),!0)});d.events.filter&&(S=d.events.filter(S,d));for(const v of S){let w=v.object;for(;w;){var M;(M=w.__r3f)!=null&&M.eventCount&&m.push({...v,eventObject:w}),w=w.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let v of d.internal.capturedMap.get(u.pointerId).values())p.has(Ic(v.intersection))||m.push(v.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const _={stopped:!1};for(const y of u){const S=ea(y.object)||m,{raycaster:M,pointer:v,camera:w,internal:E}=S,b=new U(v.x,v.y,0).unproject(w),R=L=>{var z,K;return(z=(K=E.capturedMap.get(L))==null?void 0:K.has(y.eventObject))!=null?z:!1},C=L=>{const z={intersection:y,target:h.target};E.capturedMap.has(L)?E.capturedMap.get(L).set(y.eventObject,z):E.capturedMap.set(L,new Map([[y.eventObject,z]])),h.target.setPointerCapture(L)},N=L=>{const z=E.capturedMap.get(L);z&&yv(E.capturedMap,y.eventObject,z,L)};let O={};for(let L in h){let z=h[L];typeof z!="function"&&(O[L]=z)}let A={...y,...O,pointer:v,intersections:u,stopped:_.stopped,delta:d,unprojectedPoint:b,ray:M.ray,camera:w,stopPropagation(){const L="pointerId"in h&&E.capturedMap.get(h.pointerId);if((!L||L.has(y.eventObject))&&(A.stopped=_.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(z=>z.eventObject===y.eventObject))){const z=u.slice(0,u.indexOf(y));s([...z,y])}},target:{hasPointerCapture:R,setPointerCapture:C,releasePointerCapture:N},currentTarget:{hasPointerCapture:R,setPointerCapture:C,releasePointerCapture:N},nativeEvent:h};if(p(A),_.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,_=m==null?void 0:m.handlers;if(h.hovered.delete(Ic(d)),m!=null&&m.eventCount){const y={...d,intersections:u};_.onPointerOut==null||_.onPointerOut(y),_.onPointerLeave==null||_.onPointerLeave(y)}}}function l(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const _=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",M=n(d,_?t:void 0),v=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=M.map(E=>E.eventObject)),y&&!M.length&&v<=2&&(l(d,m.interaction),p&&p(d)),_&&s(M);function w(E){const b=E.eventObject,R=b.__r3f,C=R==null?void 0:R.handlers;if(R!=null&&R.eventCount)if(_){if(C.onPointerOver||C.onPointerEnter||C.onPointerOut||C.onPointerLeave){const N=Ic(E),O=m.hovered.get(N);O?O.stopped&&E.stopPropagation():(m.hovered.set(N,E),C.onPointerOver==null||C.onPointerOver(E),C.onPointerEnter==null||C.onPointerEnter(E))}C.onPointerMove==null||C.onPointerMove(E)}else{const N=C[u];N?(!y||m.initialHits.includes(b))&&(l(d,m.interaction.filter(O=>!m.initialHits.includes(O))),N(E)):y&&m.initialHits.includes(b)&&l(d,m.interaction.filter(O=>!m.initialHits.includes(O)))}}i(M,d,v,w)}}return{handlePointer:c}}const xv=r=>!!(r!=null&&r.render),Mv=Ee.createContext(null),QA=(r,e)=>{const t=OA((c,u)=>{const h=new U,d=new U,p=new U;function m(v=u().camera,w=d,E=u().size){const{width:b,height:R,top:C,left:N}=E,O=b/R;w.isVector3?p.copy(w):p.set(...w);const A=v.getWorldPosition(h).distanceTo(p);if(dv(v))return{width:b/v.zoom,height:R/v.zoom,top:C,left:N,factor:1,distance:A,aspect:O};{const L=v.fov*Math.PI/180,z=2*Math.tan(L/2)*A,K=z*(b/R);return{width:K,height:z,top:C,left:N,factor:b/K,distance:A,aspect:O}}}let _;const y=v=>c(w=>({performance:{...w.performance,current:v}})),S=new de;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,w)=>e(v,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Td,pointer:S,mouse:S,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();_&&clearTimeout(_),v.performance.current!==v.performance.min&&y(v.performance.min),_=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(w=>({...w,events:{...w.events,...v}})),setSize:(v,w,E,b,R)=>{const C=u().camera,N={width:v,height:w,top:b||0,left:R||0,updateStyle:E};c(O=>({size:N,viewport:{...O.viewport,...m(C,d,N)}}))},setDpr:v=>c(w=>{const E=_v(v);return{viewport:{...w.viewport,dpr:E,initialDpr:w.viewport.initialDpr||E}}}),setFrameloop:(v="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,v!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Ee.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,w,E)=>{const b=u().internal;return b.priority=b.priority+(w>0?1:0),b.subscribers.push({ref:v,priority:w,store:E}),b.subscribers=b.subscribers.sort((R,C)=>R.priority-C.priority),()=>{const R=u().internal;R!=null&&R.subscribers&&(R.priority=R.priority-(w>0?1:0),R.subscribers=R.subscribers.filter(C=>C.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,ZA(c,u),d.setPixelRatio(h.dpr);const _=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,_)}c!==l&&(l=c,p(_=>({viewport:{..._.viewport,..._.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Uc,$A=new Set,eb=new Set,tb=new Set;function Jh(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ta(r,e){switch(r){case"before":return Jh($A,e);case"after":return Jh(eb,e);case"tail":return Jh(tb,e)}}let jh,Kh;function Qh(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),jh=e.internal.subscribers,Uc=0;Uc<jh.length;Uc++)Kh=jh[Uc],Kh.ref.current(Kh.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function nb(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,ta("before",h),t=!0;for(const p of r.values()){var d;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((d=s.gl.xr)!=null&&d.isPresenting)&&(n+=Qh(h,s))}if(t=!1,ta("after",h),n===0)return ta("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,d=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),d));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(d>1?h.internal.frames=Math.min(60,h.internal.frames+d):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,d=!0,p,m){if(d&&ta("before",h),p)Qh(h,p,m);else for(const _ of r.values())Qh(h,_.store.getState());d&&ta("after",h)}return{loop:l,invalidate:c,advance:u}}function ib(){const r=Ee.useContext(Mv);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Sv(r,e=0){const t=ib(),n=t.getState().internal.subscribe,i=pv(r);return Za(()=>n(i,e,t),[e,n,t]),null}const go=new Map,{invalidate:Xg,advance:qg}=nb(go),{reconciler:qc,applyProps:eo}=GA(go,JA),to={objects:"shallow",strict:!1},rb=(r,e)=>{const t=typeof r=="function"?r(e):r;return xv(t)?t:new od({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function sb(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function ob(r){const e=go.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||QA(Xg,qg),l=t||qc.createContainer(s,lo.ConcurrentRoot,null,!1,null,"",i,null);e||go.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:_,events:y,onCreated:S,shadows:M=!1,linear:v=!1,flat:w=!1,legacy:E=!1,orthographic:b=!1,frameloop:R="always",dpr:C=[1,2],performance:N,raycaster:O,camera:A,onPointerMissed:L}=d,z=s.getState(),K=z.gl;z.gl||z.set({gl:K=rb(p,r)});let V=z.raycaster;V||z.set({raycaster:V=new ov});const{params:Y,...$}=O||{};if(Dt.equ($,V,to)||eo(V,{...$}),Dt.equ(Y,V.params,to)||eo(V,{params:{...V.params,...Y}}),!z.camera||z.camera===h&&!Dt.equ(h,A,to)){h=A;const q=A instanceof Ia,he=q?A:b?new Da(0,0,0,0,.1,1e3):new ln(75,0,.1,1e3);q||(he.position.z=5,A&&(eo(he,A),("aspect"in A||"left"in A||"right"in A||"bottom"in A||"top"in A)&&(he.manual=!0,he.updateProjectionMatrix())),!z.camera&&!(A!=null&&A.rotation)&&he.lookAt(0,0,0)),z.set({camera:he}),V.camera=he}if(!z.scene){let q;_!=null&&_.isScene?q=_:(q=new ad,_&&eo(q,_)),z.set({scene:no(q)})}if(!z.xr){var ue;const q=(Z,le)=>{const xe=s.getState();xe.frameloop!=="never"&&qg(Z,!0,xe,le)},he=()=>{const Z=s.getState();Z.gl.xr.enabled=Z.gl.xr.isPresenting,Z.gl.xr.setAnimationLoop(Z.gl.xr.isPresenting?q:null),Z.gl.xr.isPresenting||Xg(Z)},pe={connect(){const Z=s.getState().gl;Z.xr.addEventListener("sessionstart",he),Z.xr.addEventListener("sessionend",he)},disconnect(){const Z=s.getState().gl;Z.xr.removeEventListener("sessionstart",he),Z.xr.removeEventListener("sessionend",he)}};typeof((ue=K.xr)==null?void 0:ue.addEventListener)=="function"&&pe.connect(),z.set({xr:pe})}if(K.shadowMap){const q=K.shadowMap.enabled,he=K.shadowMap.type;if(K.shadowMap.enabled=!!M,Dt.boo(M))K.shadowMap.type=sa;else if(Dt.str(M)){var ae;const pe={basic:o0,percentage:Zc,soft:sa,variance:mi};K.shadowMap.type=(ae=pe[M])!=null?ae:sa}else Dt.obj(M)&&Object.assign(K.shadowMap,M);(q!==K.shadowMap.enabled||he!==K.shadowMap.type)&&(K.shadowMap.needsUpdate=!0)}const k=fv();k&&("enabled"in k?k.enabled=!E:"legacyMode"in k&&(k.legacyMode=E)),u||eo(K,{outputEncoding:v?3e3:3001,toneMapping:w?vi:qf}),z.legacy!==E&&z.set(()=>({legacy:E})),z.linear!==v&&z.set(()=>({linear:v})),z.flat!==w&&z.set(()=>({flat:w})),p&&!Dt.fun(p)&&!xv(p)&&!Dt.equ(p,K,to)&&eo(K,p),y&&!z.events.handlers&&z.set({events:y(s)});const J=sb(r,m);return Dt.equ(J,z.size,to)||z.setSize(J.width,J.height,J.updateStyle,J.top,J.left),C&&z.viewport.dpr!==_v(C)&&z.setDpr(C),z.frameloop!==R&&z.setFrameloop(R),z.onPointerMissed||z.set({onPointerMissed:L}),N&&!Dt.equ(N,z.performance,to)&&z.set(q=>({performance:{...q.performance,...N}})),c=S,u=!0,this},render(d){return u||this.configure(),qc.updateContainer(gi.jsx(ab,{store:s,children:d,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){Ev(r)}}}function ab({store:r,children:e,onCreated:t,rootElement:n}){return Za(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),gi.jsx(Mv.Provider,{value:r,children:e})}function Ev(r,e){const t=go.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),qc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),qA(i),go.delete(r),e&&e(r)}catch{}},500)})}}qc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Ee.version});const $h={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function lb(r){const{handlePointer:e}=KA(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys($h).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=$h[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=$h[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function Yg(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function cb({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,l]=Ee.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Ee.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,d=Ee.useRef(!1);Ee.useEffect(()=>(d.current=!0,()=>void(d.current=!1)));const[p,m,_]=Ee.useMemo(()=>{const v=()=>{if(!c.current.element)return;const{left:w,top:E,width:b,height:R,bottom:C,right:N,x:O,y:A}=c.current.element.getBoundingClientRect(),L={left:w,top:E,width:b,height:R,bottom:C,right:N,x:O,y:A};c.current.element instanceof HTMLElement&&n&&(L.height=c.current.element.offsetHeight,L.width=c.current.element.offsetWidth),Object.freeze(L),d.current&&!db(c.current.lastBounds,L)&&l(c.current.lastBounds=L)};return[v,h?Yg(v,h):v,u?Yg(v,u):v]},[l,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(v=>v.removeEventListener("scroll",_,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function S(){c.current.element&&(c.current.resizeObserver=new i(_),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(v=>v.addEventListener("scroll",_,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{_()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const M=v=>{!v||v===c.current.element||(y(),c.current.element=v,c.current.scrollContainers=wv(v),S())};return hb(_,!!e),ub(m),Ee.useEffect(()=>{y(),S()},[e,_,m]),Ee.useEffect(()=>y,[]),[M,s,p]}function ub(r){Ee.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function hb(r,e){Ee.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function wv(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...wv(r.parentElement)]}const fb=["x","y","top","bottom","left","right","width","height"],db=(r,e)=>fb.every(t=>r[t]===e[t]);var pb=Object.defineProperty,mb=Object.defineProperties,gb=Object.getOwnPropertyDescriptors,Zg=Object.getOwnPropertySymbols,_b=Object.prototype.hasOwnProperty,vb=Object.prototype.propertyIsEnumerable,Jg=(r,e,t)=>e in r?pb(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,jg=(r,e)=>{for(var t in e||(e={}))_b.call(e,t)&&Jg(r,t,e[t]);if(Zg)for(var t of Zg(e))vb.call(e,t)&&Jg(r,t,e[t]);return r},yb=(r,e)=>mb(r,gb(e)),Kg,Qg;typeof window<"u"&&((Kg=window.document)!=null&&Kg.createElement||((Qg=window.navigator)==null?void 0:Qg.product)==="ReactNative")?Ee.useLayoutEffect:Ee.useEffect;function Tv(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=e?r.return:r.child;for(;n;){const i=Tv(n,e,t);if(i)return i;n=e?null:n.sibling}}function Av(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const $g=console.error;console.error=function(){const r=[...arguments].join("");if(r!=null&&r.startsWith("Warning:")&&r.includes("useContext")){console.error=$g;return}return $g.apply(this,arguments)};const Pd=Av(Ee.createContext(null));class bv extends Ee.Component{render(){return Ee.createElement(Pd.Provider,{value:this._reactInternals},this.props.children)}}function xb(){const r=Ee.useContext(Pd);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Ee.useId();return Ee.useMemo(()=>{for(const n of[r,r==null?void 0:r.alternate]){if(!n)continue;const i=Tv(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function Mb(){const r=xb(),[e]=Ee.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==Pd&&!e.has(i)&&e.set(i,Ee.useContext(Av(i)))}t=t.return}return e}function Sb(){const r=Mb();return Ee.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Ee.createElement(e,null,Ee.createElement(t.Provider,yb(jg({},n),{value:r.get(t)}))),e=>Ee.createElement(bv,jg({},e))),[r])}const Eb=Ee.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=lb,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:S,performance:M,raycaster:v,camera:w,scene:E,onPointerMissed:b,onCreated:R,...C},N){Ee.useMemo(()=>HA(DA),[]);const O=Sb(),[A,L]=cb({scroll:!0,debounce:{scroll:50,resize:0},...n}),z=Ee.useRef(null),K=Ee.useRef(null);Ee.useImperativeHandle(N,()=>z.current);const V=pv(b),[Y,$]=Ee.useState(!1),[ue,ae]=Ee.useState(!1);if(Y)throw Y;if(ue)throw ue;const k=Ee.useRef(null);Za(()=>{const q=z.current;L.width>0&&L.height>0&&q&&(k.current||(k.current=ob(q)),k.current.configure({gl:s,events:l,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:S,performance:M,raycaster:v,camera:w,scene:E,size:L,onPointerMissed:(...he)=>V.current==null?void 0:V.current(...he),onCreated:he=>{he.events.connect==null||he.events.connect(c?VA(c)?c.current:c:K.current),u&&he.setEvents({compute:(pe,Z)=>{const le=pe[u+"X"],xe=pe[u+"Y"];Z.pointer.set(le/Z.size.width*2-1,-(xe/Z.size.height)*2+1),Z.raycaster.setFromCamera(Z.pointer,Z.camera)}}),R==null||R(he)}}),k.current.render(gi.jsx(O,{children:gi.jsx(mv,{set:ae,children:gi.jsx(Ee.Suspense,{fallback:gi.jsx(WA,{set:$}),children:e??null})})})))}),Ee.useEffect(()=>{const q=z.current;if(q)return()=>Ev(q)},[]);const J=c?"none":"auto";return gi.jsx("div",{ref:K,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:J,...i},...C,children:gi.jsx("div",{ref:A,style:{width:"100%",height:"100%"},children:gi.jsx("canvas",{ref:z,style:{display:"block"},children:t})})})}),Ib=Ee.forwardRef(function(e,t){return gi.jsx(bv,{children:gi.jsx(Eb,{...e,ref:t})})});function ps(){return ps=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},ps.apply(null,arguments)}const wb=()=>parseInt(Ra.replace(/\D+/g,"")),Rv=wb(),ef=Rv>=154?"opaque_fragment":"output_fragment";class Tb extends ru{constructor(e){super(e),this.onBeforeCompile=(t,n)=>{const{isWebGL2:i}=n.capabilities;t.fragmentShader=t.fragmentShader.replace(`#include <${ef}>`,`
        ${i?`#include <${ef}>`:`#extension GL_OES_standard_derivatives : enable
#include <${ef}>`}
      vec2 cxy = 2.0 * gl_PointCoord - 1.0;
      float r = dot(cxy, cxy);
      float delta = fwidth(r);     
      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);
      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );
      #include <tonemapping_fragment>
      #include <${Rv>=154?"colorspace_fragment":"encodings_fragment"}>
      `)}}}const Ub=Ee.forwardRef((r,e)=>{const[t]=Ee.useState(()=>new Tb(null));return Ee.createElement("primitive",ps({},r,{object:t,ref:e,attach:"material"}))});let jr,na;const Ab=Ee.createContext(null),e0=new it,t0=new U,bb=Ee.forwardRef(({children:r,range:e,limit:t=1e3,...n},i)=>{const s=Ee.useRef(null);Ee.useImperativeHandle(i,()=>s.current,[]);const[l,c]=Ee.useState([]),[[u,h,d]]=Ee.useState(()=>[new Float32Array(t*3),Float32Array.from({length:t*3},()=>1),Float32Array.from({length:t},()=>1)]);Ee.useEffect(()=>{s.current.geometry.attributes.position.needsUpdate=!0}),Sv(()=>{for(s.current.updateMatrix(),s.current.updateMatrixWorld(),e0.copy(s.current.matrixWorld).invert(),s.current.geometry.drawRange.count=Math.min(t,e!==void 0?e:t,l.length),jr=0;jr<l.length;jr++)na=l[jr].current,na.getWorldPosition(t0).applyMatrix4(e0),t0.toArray(u,jr*3),s.current.geometry.attributes.position.needsUpdate=!0,na.matrixWorldNeedsUpdate=!0,na.color.toArray(h,jr*3),s.current.geometry.attributes.color.needsUpdate=!0,d.set([na.size],jr),s.current.geometry.attributes.size.needsUpdate=!0});const p=Ee.useMemo(()=>({getParent:()=>s,subscribe:m=>(c(_=>[..._,m]),()=>c(_=>_.filter(y=>y.current!==m.current)))}),[]);return Ee.createElement("points",ps({userData:{instances:l},matrixAutoUpdate:!1,ref:s,raycast:()=>null},n),Ee.createElement("bufferGeometry",null,Ee.createElement("bufferAttribute",{attach:"attributes-position",count:u.length/3,array:u,itemSize:3,usage:os}),Ee.createElement("bufferAttribute",{attach:"attributes-color",count:h.length/3,array:h,itemSize:3,usage:os}),Ee.createElement("bufferAttribute",{attach:"attributes-size",count:d.length,array:d,itemSize:1,usage:os})),Ee.createElement(Ab.Provider,{value:p},r))}),Rb=Ee.forwardRef(({children:r,positions:e,colors:t,sizes:n,stride:i=3,...s},l)=>{const c=Ee.useRef(null);return Ee.useImperativeHandle(l,()=>c.current,[]),Sv(()=>{const u=c.current.geometry.attributes;u.position.needsUpdate=!0,t&&(u.color.needsUpdate=!0),n&&(u.size.needsUpdate=!0)}),Ee.createElement("points",ps({ref:c},s),Ee.createElement("bufferGeometry",null,Ee.createElement("bufferAttribute",{attach:"attributes-position",count:e.length/i,array:e,itemSize:i,usage:os}),t&&Ee.createElement("bufferAttribute",{attach:"attributes-color",count:t.length/i,array:t,itemSize:3,usage:os}),n&&Ee.createElement("bufferAttribute",{attach:"attributes-size",count:n.length/i,array:n,itemSize:1,usage:os})),r)}),Db=Ee.forwardRef((r,e)=>r.positions instanceof Float32Array?Ee.createElement(Rb,ps({},r,{ref:e})):Ee.createElement(bb,ps({},r,{ref:e})));export{nf as A,Le as C,Db as P,Pb as _,Ub as a,Ib as b,hm as c,gi as j,Sv as u};
